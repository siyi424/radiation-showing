{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport function retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (zrUtil.isString(targetNode)) {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\nexport function getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\nexport function aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\nexport function wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}","map":{"version":3,"names":["zrUtil","retrieveTargetInfo","payload","validPayloadTypes","seriesModel","indexOf","type","root","getData","tree","targetNode","isString","getNodeById","contains","node","targetNodeId","getPathToRoot","path","parentNode","push","reverse","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","dataIndex","name","value","getRawValue"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/helper/treeHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nexport function retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (zrUtil.isString(targetNode)) {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\nexport function getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\nexport function aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\nexport function wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,0BAAxB;AACA,OAAO,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,iBAArC,EAAwDC,WAAxD,EAAqE;EAC1E,IAAIF,OAAO,IAAIF,MAAM,CAACK,OAAP,CAAeF,iBAAf,EAAkCD,OAAO,CAACI,IAA1C,KAAmD,CAAlE,EAAqE;IACnE,IAAIC,IAAI,GAAGH,WAAW,CAACI,OAAZ,GAAsBC,IAAtB,CAA2BF,IAAtC;IACA,IAAIG,UAAU,GAAGR,OAAO,CAACQ,UAAzB;;IAEA,IAAIV,MAAM,CAACW,QAAP,CAAgBD,UAAhB,CAAJ,EAAiC;MAC/BA,UAAU,GAAGH,IAAI,CAACK,WAAL,CAAiBF,UAAjB,CAAb;IACD;;IAED,IAAIA,UAAU,IAAIH,IAAI,CAACM,QAAL,CAAcH,UAAd,CAAlB,EAA6C;MAC3C,OAAO;QACLI,IAAI,EAAEJ;MADD,CAAP;IAGD;;IAED,IAAIK,YAAY,GAAGb,OAAO,CAACa,YAA3B;;IAEA,IAAIA,YAAY,IAAI,IAAhB,KAAyBL,UAAU,GAAGH,IAAI,CAACK,WAAL,CAAiBG,YAAjB,CAAtC,CAAJ,EAA2E;MACzE,OAAO;QACLD,IAAI,EAAEJ;MADD,CAAP;IAGD;EACF;AACF,C,CAAC;;AAEF,OAAO,SAASM,aAAT,CAAuBF,IAAvB,EAA6B;EAClC,IAAIG,IAAI,GAAG,EAAX;;EAEA,OAAOH,IAAP,EAAa;IACXA,IAAI,GAAGA,IAAI,CAACI,UAAZ;IACAJ,IAAI,IAAIG,IAAI,CAACE,IAAL,CAAUL,IAAV,CAAR;EACD;;EAED,OAAOG,IAAI,CAACG,OAAL,EAAP;AACD;AACD,OAAO,SAASC,aAAT,CAAuBC,QAAvB,EAAiCR,IAAjC,EAAuC;EAC5C,IAAIS,QAAQ,GAAGP,aAAa,CAACM,QAAD,CAA5B;EACA,OAAOtB,MAAM,CAACK,OAAP,CAAekB,QAAf,EAAyBT,IAAzB,KAAkC,CAAzC;AACD,C,CAAC;;AAEF,OAAO,SAASU,gBAAT,CAA0BV,IAA1B,EAAgCV,WAAhC,EAA6C;EAClD,IAAIqB,YAAY,GAAG,EAAnB;;EAEA,OAAOX,IAAP,EAAa;IACX,IAAIY,aAAa,GAAGZ,IAAI,CAACa,SAAzB;IACAF,YAAY,CAACN,IAAb,CAAkB;MAChBS,IAAI,EAAEd,IAAI,CAACc,IADK;MAEhBD,SAAS,EAAED,aAFK;MAGhBG,KAAK,EAAEzB,WAAW,CAAC0B,WAAZ,CAAwBJ,aAAxB;IAHS,CAAlB;IAKAZ,IAAI,GAAGA,IAAI,CAACI,UAAZ;EACD;;EAEDO,YAAY,CAACL,OAAb;EACA,OAAOK,YAAP;AACD"},"metadata":{},"sourceType":"module"}