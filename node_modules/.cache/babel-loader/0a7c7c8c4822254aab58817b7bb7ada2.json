{"ast":null,"code":"import * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\nexport default {\n  props: ['dataset'],\n\n  mounted() {\n    let chartDom = document.getElementById('main');\n    let myChart = echarts.init(chartDom);\n    let option = null;\n    let base = +new Date(2022, 1, 1);\n    let oneDay = 24 * 3600 * 1000;\n    let date = [];\n    let data = [Math.random() * 150];\n    let now = new Date(base);\n\n    function addData(shift) {\n      now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n      date.push(now);\n      data.push((Math.random() - 0.4) * 10 + data[data.length - 1]);\n\n      if (shift) {\n        date.shift();\n        data.shift();\n      }\n\n      now = new Date(+new Date(now) + oneDay);\n    }\n\n    for (let i = 1; i < 100; i++) {\n      addData();\n    }\n\n    option = {\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: date\n      },\n      yAxis: {\n        boundaryGap: [0, '50%'],\n        type: 'value'\n      },\n      series: [{\n        name: '成交',\n        type: 'line',\n        smooth: true,\n        symbol: 'none',\n        stack: 'a',\n        areaStyle: {\n          normal: {}\n        },\n        data: data\n      }]\n    };\n    setInterval(function () {\n      addData(true);\n      myChart.setOption({\n        xAxis: {\n          data: date\n        },\n        series: [{\n          name: '成交',\n          data: data\n        }]\n      });\n    }, 500);\n    option && myChart.setOption(option);\n\n    window.onresize = function () {\n      myChart.resize();\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAMA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAGAJ,OAAO,CAACK,GAAR,CAAY,CAACJ,aAAD,EAAgBC,SAAhB,EAA2BE,cAA3B,EAA2CD,mBAA3C,CAAZ;AAIA,eAAe;EACXG,KAAK,EAAE,CAAC,SAAD,CADI;;EAEXC,OAAO,GAAG;IACN,IAAIC,QAAO,GAAIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;IACI,IAAIC,OAAM,GAAIX,OAAO,CAACY,IAAR,CAAaJ,QAAb,CAAd;IACA,IAAIK,MAAK,GAAI,IAAb;IAEA,IAAIC,IAAG,GAAI,CAAC,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAZ;IACA,IAAIC,MAAK,GAAI,KAAK,IAAL,GAAY,IAAzB;IACA,IAAIC,IAAG,GAAI,EAAX;IACA,IAAIC,IAAG,GAAI,CAACC,IAAI,CAACC,MAAL,KAAgB,GAAjB,CAAX;IACA,IAAIC,GAAE,GAAI,IAAIN,IAAJ,CAASD,IAAT,CAAV;;IAGA,SAASQ,OAAT,CAAiBC,KAAjB,EAAwB;MACxBF,GAAE,GAAI,CAACA,GAAG,CAACG,WAAJ,EAAD,EAAoBH,GAAG,CAACI,QAAJ,KAAiB,CAArC,EAAwCJ,GAAG,CAACK,OAAJ,EAAxC,EAAuDC,IAAvD,CAA4D,GAA5D,CAAN;MACAV,IAAI,CAACW,IAAL,CAAUP,GAAV;MACAH,IAAI,CAACU,IAAL,CAAU,CAACT,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EAAxB,GAA6BF,IAAI,CAACA,IAAI,CAACW,MAAL,GAAc,CAAf,CAA3C;;MACA,IAAIN,KAAJ,EAAW;QACPN,IAAI,CAACM,KAAL;QACAL,IAAI,CAACK,KAAL;MACJ;;MACAF,GAAE,GAAI,IAAIN,IAAJ,CAAS,CAAC,IAAIA,IAAJ,CAASM,GAAT,CAAD,GAAiBL,MAA1B,CAAN;IACA;;IACA,KAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;MAC9BR,OAAO;IACP;;IACAT,MAAK,GAAI;MACTkB,KAAK,EAAE;QACHC,IAAI,EAAE,UADH;QAEHC,WAAW,EAAE,KAFV;QAGHf,IAAI,EAAED;MAHH,CADE;MAMTiB,KAAK,EAAE;QACHD,WAAW,EAAE,CAAC,CAAD,EAAI,KAAJ,CADV;QAEHD,IAAI,EAAE;MAFH,CANE;MAUTG,MAAM,EAAE,CACJ;QACAC,IAAI,EAAE,IADN;QAEAJ,IAAI,EAAE,MAFN;QAGAK,MAAM,EAAE,IAHR;QAIAC,MAAM,EAAE,MAJR;QAKAC,KAAK,EAAE,GALP;QAMAC,SAAS,EAAE;UACPC,MAAM,EAAE;QADD,CANX;QASAvB,IAAI,EAAEA;MATN,CADI;IAVC,CAAT;IAwBAwB,WAAW,CAAC,YAAY;MACxBpB,OAAO,CAAC,IAAD,CAAP;MACAX,OAAO,CAACgC,SAAR,CAAkB;QACdZ,KAAK,EAAE;UACPb,IAAI,EAAED;QADC,CADO;QAIdkB,MAAM,EAAE,CACR;UACIC,IAAI,EAAE,IADV;UAEIlB,IAAI,EAAEA;QAFV,CADQ;MAJM,CAAlB;IAWC,CAbU,EAaR,GAbQ,CAAX;IAeAL,MAAK,IAAKF,OAAO,CAACgC,SAAR,CAAkB9B,MAAlB,CAAV;;IAGA+B,MAAM,CAACC,QAAP,GAAkB,YAAW;MACzBlC,OAAO,CAACmC,MAAR;IACH,CAFD;EAGR;;AAxEW,CAAf","names":["echarts","GridComponent","LineChart","UniversalTransition","CanvasRenderer","use","props","mounted","chartDom","document","getElementById","myChart","init","option","base","Date","oneDay","date","data","Math","random","now","addData","shift","getFullYear","getMonth","getDate","join","push","length","i","xAxis","type","boundaryGap","yAxis","series","name","smooth","symbol","stack","areaStyle","normal","setInterval","setOption","window","onresize","resize"],"sourceRoot":"","sources":["/home/siyi/Projects/radi-demo/radi-showing/src/components/ChartRadi.vue"],"sourcesContent":["<template>\n  <div id=\"main\" style=\"width: 100%; height: 600px;\"></div>\n</template>\n\n\n<script>\nimport * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\n\n\n\nexport default {\n    props: ['dataset'],\n    mounted() {\n        let chartDom = document.getElementById('main');\n            let myChart = echarts.init(chartDom);\n            let option = null;\n\n            let base = +new Date(2022, 1, 1);\n            let oneDay = 24 * 3600 * 1000;\n            let date = [];\n            let data = [Math.random() * 150];\n            let now = new Date(base);\n\n\n            function addData(shift) {\n            now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n            date.push(now);\n            data.push((Math.random() - 0.4) * 10 + data[data.length - 1]);\n            if (shift) {\n                date.shift();\n                data.shift();\n            }\n            now = new Date(+new Date(now) + oneDay);\n            }\n            for (let i = 1; i < 100; i++) {\n            addData();\n            }\n            option = {\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: date\n            },\n            yAxis: {\n                boundaryGap: [0, '50%'],\n                type: 'value'\n            },\n            series: [\n                {\n                name: '成交',\n                type: 'line',\n                smooth: true,\n                symbol: 'none',\n                stack: 'a',\n                areaStyle: {\n                    normal: {}\n                },\n                data: data\n                }\n            ]\n            };\n            setInterval(function () {\n            addData(true);\n            myChart.setOption({\n                xAxis: {\n                data: date\n                },\n                series: [\n                {\n                    name: '成交',\n                    data: data\n                }\n                ]\n            });\n            }, 500);\n\n            option && myChart.setOption(option);\n\n\n            window.onresize = function() {\n                myChart.resize();\n            };\n    }\n\n    \n    \n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}