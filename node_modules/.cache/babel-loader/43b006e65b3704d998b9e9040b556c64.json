{"ast":null,"code":"import { copyTransform } from '../core/Transformable.js';\nimport { createBrushScope } from './core.js';\nimport SVGPathRebuilder from './SVGPathRebuilder.js';\nimport PathProxy from '../core/PathProxy.js';\nimport { getPathPrecision, getSRTTransformString } from './helper.js';\nimport { each, extend, filter, isNumber, isString, keys } from '../core/util.js';\nimport CompoundPath from '../graphic/CompoundPath.js';\nimport { createCubicEasingFunc } from '../animation/cubicEasing.js';\nexport var EASING_MAP = {\n  cubicIn: '0.32,0,0.67,0',\n  cubicOut: '0.33,1,0.68,1',\n  cubicInOut: '0.65,0,0.35,1',\n  quadraticIn: '0.11,0,0.5,0',\n  quadraticOut: '0.5,1,0.89,1',\n  quadraticInOut: '0.45,0,0.55,1',\n  quarticIn: '0.5,0,0.75,0',\n  quarticOut: '0.25,1,0.5,1',\n  quarticInOut: '0.76,0,0.24,1',\n  quinticIn: '0.64,0,0.78,0',\n  quinticOut: '0.22,1,0.36,1',\n  quinticInOut: '0.83,0,0.17,1',\n  sinusoidalIn: '0.12,0,0.39,0',\n  sinusoidalOut: '0.61,1,0.88,1',\n  sinusoidalInOut: '0.37,0,0.63,1',\n  exponentialIn: '0.7,0,0.84,0',\n  exponentialOut: '0.16,1,0.3,1',\n  exponentialInOut: '0.87,0,0.13,1',\n  circularIn: '0.55,0,1,0.45',\n  circularOut: '0,0.55,0.45,1',\n  circularInOut: '0.85,0,0.15,1'\n};\nvar transformOriginKey = 'transform-origin';\n\nfunction buildPathString(el, kfShape, path) {\n  var shape = extend({}, el.shape);\n  extend(shape, kfShape);\n  el.buildPath(path, shape);\n  var svgPathBuilder = new SVGPathRebuilder();\n  svgPathBuilder.reset(getPathPrecision(el));\n  path.rebuildPath(svgPathBuilder, 1);\n  svgPathBuilder.generateStr();\n  return svgPathBuilder.getStr();\n}\n\nfunction setTransformOrigin(target, transform) {\n  var originX = transform.originX,\n      originY = transform.originY;\n\n  if (originX || originY) {\n    target[transformOriginKey] = originX + \"px \" + originY + \"px\";\n  }\n}\n\nexport var ANIMATE_STYLE_MAP = {\n  fill: 'fill',\n  opacity: 'opacity',\n  lineWidth: 'stroke-width',\n  lineDashOffset: 'stroke-dashoffset'\n};\n\nfunction addAnimation(cssAnim, scope) {\n  var animationName = scope.zrId + '-ani-' + scope.cssAnimIdx++;\n  scope.cssAnims[animationName] = cssAnim;\n  return animationName;\n}\n\nfunction createCompoundPathCSSAnimation(el, attrs, scope) {\n  var paths = el.shape.paths;\n  var composedAnim = {};\n  var cssAnimationCfg;\n  var cssAnimationName;\n  each(paths, function (path) {\n    var subScope = createBrushScope(scope.zrId);\n    subScope.animation = true;\n    createCSSAnimation(path, {}, subScope, true);\n    var cssAnims = subScope.cssAnims;\n    var cssNodes = subScope.cssNodes;\n    var animNames = keys(cssAnims);\n    var len = animNames.length;\n\n    if (!len) {\n      return;\n    }\n\n    cssAnimationName = animNames[len - 1];\n    var lastAnim = cssAnims[cssAnimationName];\n\n    for (var percent in lastAnim) {\n      var kf = lastAnim[percent];\n      composedAnim[percent] = composedAnim[percent] || {\n        d: ''\n      };\n      composedAnim[percent].d += kf.d || '';\n    }\n\n    for (var className in cssNodes) {\n      var val = cssNodes[className].animation;\n\n      if (val.indexOf(cssAnimationName) >= 0) {\n        cssAnimationCfg = val;\n      }\n    }\n  });\n\n  if (!cssAnimationCfg) {\n    return;\n  }\n\n  attrs.d = false;\n  var animationName = addAnimation(composedAnim, scope);\n  return cssAnimationCfg.replace(cssAnimationName, animationName);\n}\n\nfunction getEasingFunc(easing) {\n  return isString(easing) ? EASING_MAP[easing] ? \"cubic-bezier(\" + EASING_MAP[easing] + \")\" : createCubicEasingFunc(easing) ? easing : '' : '';\n}\n\nexport function createCSSAnimation(el, attrs, scope, onlyShape) {\n  var animators = el.animators;\n  var len = animators.length;\n  var cssAnimations = [];\n\n  if (el instanceof CompoundPath) {\n    var animationCfg = createCompoundPathCSSAnimation(el, attrs, scope);\n\n    if (animationCfg) {\n      cssAnimations.push(animationCfg);\n    } else if (!len) {\n      return;\n    }\n  } else if (!len) {\n    return;\n  }\n\n  var groupAnimators = {};\n\n  for (var i = 0; i < len; i++) {\n    var animator = animators[i];\n    var cfgArr = [animator.getMaxTime() / 1000 + 's'];\n    var easing = getEasingFunc(animator.getClip().easing);\n    var delay = animator.getDelay();\n\n    if (easing) {\n      cfgArr.push(easing);\n    } else {\n      cfgArr.push('linear');\n    }\n\n    if (delay) {\n      cfgArr.push(delay / 1000 + 's');\n    }\n\n    if (animator.getLoop()) {\n      cfgArr.push('infinite');\n    }\n\n    var cfg = cfgArr.join(' ');\n    groupAnimators[cfg] = groupAnimators[cfg] || [cfg, []];\n    groupAnimators[cfg][1].push(animator);\n  }\n\n  function createSingleCSSAnimation(groupAnimator) {\n    var animators = groupAnimator[1];\n    var len = animators.length;\n    var transformKfs = {};\n    var shapeKfs = {};\n    var finalKfs = {};\n    var animationTimingFunctionAttrName = 'animation-timing-function';\n\n    function saveAnimatorTrackToCssKfs(animator, cssKfs, toCssAttrName) {\n      var tracks = animator.getTracks();\n      var maxTime = animator.getMaxTime();\n\n      for (var k = 0; k < tracks.length; k++) {\n        var track = tracks[k];\n\n        if (track.needsAnimate()) {\n          var kfs = track.keyframes;\n          var attrName = track.propName;\n          toCssAttrName && (attrName = toCssAttrName(attrName));\n\n          if (attrName) {\n            for (var i = 0; i < kfs.length; i++) {\n              var kf = kfs[i];\n              var percent = Math.round(kf.time / maxTime * 100) + '%';\n              var kfEasing = getEasingFunc(kf.easing);\n              var rawValue = kf.rawValue;\n\n              if (isString(rawValue) || isNumber(rawValue)) {\n                cssKfs[percent] = cssKfs[percent] || {};\n                cssKfs[percent][attrName] = kf.rawValue;\n\n                if (kfEasing) {\n                  cssKfs[percent][animationTimingFunctionAttrName] = kfEasing;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    for (var i = 0; i < len; i++) {\n      var animator = animators[i];\n      var targetProp = animator.targetName;\n\n      if (!targetProp) {\n        !onlyShape && saveAnimatorTrackToCssKfs(animator, transformKfs);\n      } else if (targetProp === 'shape') {\n        saveAnimatorTrackToCssKfs(animator, shapeKfs);\n      }\n    }\n\n    for (var percent in transformKfs) {\n      var transform = {};\n      copyTransform(transform, el);\n      extend(transform, transformKfs[percent]);\n      var str = getSRTTransformString(transform);\n      var timingFunction = transformKfs[percent][animationTimingFunctionAttrName];\n      finalKfs[percent] = str ? {\n        transform: str\n      } : {};\n      setTransformOrigin(finalKfs[percent], transform);\n\n      if (timingFunction) {\n        finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\n      }\n    }\n\n    ;\n    var path;\n    var canAnimateShape = true;\n\n    for (var percent in shapeKfs) {\n      finalKfs[percent] = finalKfs[percent] || {};\n      var isFirst = !path;\n      var timingFunction = shapeKfs[percent][animationTimingFunctionAttrName];\n\n      if (isFirst) {\n        path = new PathProxy();\n      }\n\n      var len_1 = path.len();\n      path.reset();\n      finalKfs[percent].d = buildPathString(el, shapeKfs[percent], path);\n      var newLen = path.len();\n\n      if (!isFirst && len_1 !== newLen) {\n        canAnimateShape = false;\n        break;\n      }\n\n      if (timingFunction) {\n        finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\n      }\n    }\n\n    ;\n\n    if (!canAnimateShape) {\n      for (var percent in finalKfs) {\n        delete finalKfs[percent].d;\n      }\n    }\n\n    if (!onlyShape) {\n      for (var i = 0; i < len; i++) {\n        var animator = animators[i];\n        var targetProp = animator.targetName;\n\n        if (targetProp === 'style') {\n          saveAnimatorTrackToCssKfs(animator, finalKfs, function (propName) {\n            return ANIMATE_STYLE_MAP[propName];\n          });\n        }\n      }\n    }\n\n    var percents = keys(finalKfs);\n    var allTransformOriginSame = true;\n    var transformOrigin;\n\n    for (var i = 1; i < percents.length; i++) {\n      var p0 = percents[i - 1];\n      var p1 = percents[i];\n\n      if (finalKfs[p0][transformOriginKey] !== finalKfs[p1][transformOriginKey]) {\n        allTransformOriginSame = false;\n        break;\n      }\n\n      transformOrigin = finalKfs[p0][transformOriginKey];\n    }\n\n    if (allTransformOriginSame && transformOrigin) {\n      for (var percent in finalKfs) {\n        if (finalKfs[percent][transformOriginKey]) {\n          delete finalKfs[percent][transformOriginKey];\n        }\n      }\n\n      attrs[transformOriginKey] = transformOrigin;\n    }\n\n    if (filter(percents, function (percent) {\n      return keys(finalKfs[percent]).length > 0;\n    }).length) {\n      var animationName = addAnimation(finalKfs, scope);\n      return animationName + \" \" + groupAnimator[0] + \" both\";\n    }\n  }\n\n  for (var key in groupAnimators) {\n    var animationCfg = createSingleCSSAnimation(groupAnimators[key]);\n\n    if (animationCfg) {\n      cssAnimations.push(animationCfg);\n    }\n  }\n\n  if (cssAnimations.length) {\n    var className = scope.zrId + '-cls-' + scope.cssClassIdx++;\n    scope.cssNodes['.' + className] = {\n      animation: cssAnimations.join(',')\n    };\n    attrs[\"class\"] = className;\n  }\n}","map":{"version":3,"names":["copyTransform","createBrushScope","SVGPathRebuilder","PathProxy","getPathPrecision","getSRTTransformString","each","extend","filter","isNumber","isString","keys","CompoundPath","createCubicEasingFunc","EASING_MAP","cubicIn","cubicOut","cubicInOut","quadraticIn","quadraticOut","quadraticInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","transformOriginKey","buildPathString","el","kfShape","path","shape","buildPath","svgPathBuilder","reset","rebuildPath","generateStr","getStr","setTransformOrigin","target","transform","originX","originY","ANIMATE_STYLE_MAP","fill","opacity","lineWidth","lineDashOffset","addAnimation","cssAnim","scope","animationName","zrId","cssAnimIdx","cssAnims","createCompoundPathCSSAnimation","attrs","paths","composedAnim","cssAnimationCfg","cssAnimationName","subScope","animation","createCSSAnimation","cssNodes","animNames","len","length","lastAnim","percent","kf","d","className","val","indexOf","replace","getEasingFunc","easing","onlyShape","animators","cssAnimations","animationCfg","push","groupAnimators","i","animator","cfgArr","getMaxTime","getClip","delay","getDelay","getLoop","cfg","join","createSingleCSSAnimation","groupAnimator","transformKfs","shapeKfs","finalKfs","animationTimingFunctionAttrName","saveAnimatorTrackToCssKfs","cssKfs","toCssAttrName","tracks","getTracks","maxTime","k","track","needsAnimate","kfs","keyframes","attrName","propName","Math","round","time","kfEasing","rawValue","targetProp","targetName","str","timingFunction","canAnimateShape","isFirst","len_1","newLen","percents","allTransformOriginSame","transformOrigin","p0","p1","key","cssClassIdx"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/svg/cssAnimation.js"],"sourcesContent":["import { copyTransform } from '../core/Transformable.js';\nimport { createBrushScope } from './core.js';\nimport SVGPathRebuilder from './SVGPathRebuilder.js';\nimport PathProxy from '../core/PathProxy.js';\nimport { getPathPrecision, getSRTTransformString } from './helper.js';\nimport { each, extend, filter, isNumber, isString, keys } from '../core/util.js';\nimport CompoundPath from '../graphic/CompoundPath.js';\nimport { createCubicEasingFunc } from '../animation/cubicEasing.js';\nexport var EASING_MAP = {\n    cubicIn: '0.32,0,0.67,0',\n    cubicOut: '0.33,1,0.68,1',\n    cubicInOut: '0.65,0,0.35,1',\n    quadraticIn: '0.11,0,0.5,0',\n    quadraticOut: '0.5,1,0.89,1',\n    quadraticInOut: '0.45,0,0.55,1',\n    quarticIn: '0.5,0,0.75,0',\n    quarticOut: '0.25,1,0.5,1',\n    quarticInOut: '0.76,0,0.24,1',\n    quinticIn: '0.64,0,0.78,0',\n    quinticOut: '0.22,1,0.36,1',\n    quinticInOut: '0.83,0,0.17,1',\n    sinusoidalIn: '0.12,0,0.39,0',\n    sinusoidalOut: '0.61,1,0.88,1',\n    sinusoidalInOut: '0.37,0,0.63,1',\n    exponentialIn: '0.7,0,0.84,0',\n    exponentialOut: '0.16,1,0.3,1',\n    exponentialInOut: '0.87,0,0.13,1',\n    circularIn: '0.55,0,1,0.45',\n    circularOut: '0,0.55,0.45,1',\n    circularInOut: '0.85,0,0.15,1'\n};\nvar transformOriginKey = 'transform-origin';\nfunction buildPathString(el, kfShape, path) {\n    var shape = extend({}, el.shape);\n    extend(shape, kfShape);\n    el.buildPath(path, shape);\n    var svgPathBuilder = new SVGPathRebuilder();\n    svgPathBuilder.reset(getPathPrecision(el));\n    path.rebuildPath(svgPathBuilder, 1);\n    svgPathBuilder.generateStr();\n    return svgPathBuilder.getStr();\n}\nfunction setTransformOrigin(target, transform) {\n    var originX = transform.originX, originY = transform.originY;\n    if (originX || originY) {\n        target[transformOriginKey] = originX + \"px \" + originY + \"px\";\n    }\n}\nexport var ANIMATE_STYLE_MAP = {\n    fill: 'fill',\n    opacity: 'opacity',\n    lineWidth: 'stroke-width',\n    lineDashOffset: 'stroke-dashoffset'\n};\nfunction addAnimation(cssAnim, scope) {\n    var animationName = scope.zrId + '-ani-' + scope.cssAnimIdx++;\n    scope.cssAnims[animationName] = cssAnim;\n    return animationName;\n}\nfunction createCompoundPathCSSAnimation(el, attrs, scope) {\n    var paths = el.shape.paths;\n    var composedAnim = {};\n    var cssAnimationCfg;\n    var cssAnimationName;\n    each(paths, function (path) {\n        var subScope = createBrushScope(scope.zrId);\n        subScope.animation = true;\n        createCSSAnimation(path, {}, subScope, true);\n        var cssAnims = subScope.cssAnims;\n        var cssNodes = subScope.cssNodes;\n        var animNames = keys(cssAnims);\n        var len = animNames.length;\n        if (!len) {\n            return;\n        }\n        cssAnimationName = animNames[len - 1];\n        var lastAnim = cssAnims[cssAnimationName];\n        for (var percent in lastAnim) {\n            var kf = lastAnim[percent];\n            composedAnim[percent] = composedAnim[percent] || { d: '' };\n            composedAnim[percent].d += kf.d || '';\n        }\n        for (var className in cssNodes) {\n            var val = cssNodes[className].animation;\n            if (val.indexOf(cssAnimationName) >= 0) {\n                cssAnimationCfg = val;\n            }\n        }\n    });\n    if (!cssAnimationCfg) {\n        return;\n    }\n    attrs.d = false;\n    var animationName = addAnimation(composedAnim, scope);\n    return cssAnimationCfg.replace(cssAnimationName, animationName);\n}\nfunction getEasingFunc(easing) {\n    return isString(easing)\n        ? EASING_MAP[easing]\n            ? \"cubic-bezier(\" + EASING_MAP[easing] + \")\"\n            : createCubicEasingFunc(easing) ? easing : ''\n        : '';\n}\nexport function createCSSAnimation(el, attrs, scope, onlyShape) {\n    var animators = el.animators;\n    var len = animators.length;\n    var cssAnimations = [];\n    if (el instanceof CompoundPath) {\n        var animationCfg = createCompoundPathCSSAnimation(el, attrs, scope);\n        if (animationCfg) {\n            cssAnimations.push(animationCfg);\n        }\n        else if (!len) {\n            return;\n        }\n    }\n    else if (!len) {\n        return;\n    }\n    var groupAnimators = {};\n    for (var i = 0; i < len; i++) {\n        var animator = animators[i];\n        var cfgArr = [animator.getMaxTime() / 1000 + 's'];\n        var easing = getEasingFunc(animator.getClip().easing);\n        var delay = animator.getDelay();\n        if (easing) {\n            cfgArr.push(easing);\n        }\n        else {\n            cfgArr.push('linear');\n        }\n        if (delay) {\n            cfgArr.push(delay / 1000 + 's');\n        }\n        if (animator.getLoop()) {\n            cfgArr.push('infinite');\n        }\n        var cfg = cfgArr.join(' ');\n        groupAnimators[cfg] = groupAnimators[cfg] || [cfg, []];\n        groupAnimators[cfg][1].push(animator);\n    }\n    function createSingleCSSAnimation(groupAnimator) {\n        var animators = groupAnimator[1];\n        var len = animators.length;\n        var transformKfs = {};\n        var shapeKfs = {};\n        var finalKfs = {};\n        var animationTimingFunctionAttrName = 'animation-timing-function';\n        function saveAnimatorTrackToCssKfs(animator, cssKfs, toCssAttrName) {\n            var tracks = animator.getTracks();\n            var maxTime = animator.getMaxTime();\n            for (var k = 0; k < tracks.length; k++) {\n                var track = tracks[k];\n                if (track.needsAnimate()) {\n                    var kfs = track.keyframes;\n                    var attrName = track.propName;\n                    toCssAttrName && (attrName = toCssAttrName(attrName));\n                    if (attrName) {\n                        for (var i = 0; i < kfs.length; i++) {\n                            var kf = kfs[i];\n                            var percent = Math.round(kf.time / maxTime * 100) + '%';\n                            var kfEasing = getEasingFunc(kf.easing);\n                            var rawValue = kf.rawValue;\n                            if (isString(rawValue) || isNumber(rawValue)) {\n                                cssKfs[percent] = cssKfs[percent] || {};\n                                cssKfs[percent][attrName] = kf.rawValue;\n                                if (kfEasing) {\n                                    cssKfs[percent][animationTimingFunctionAttrName] = kfEasing;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < len; i++) {\n            var animator = animators[i];\n            var targetProp = animator.targetName;\n            if (!targetProp) {\n                !onlyShape && saveAnimatorTrackToCssKfs(animator, transformKfs);\n            }\n            else if (targetProp === 'shape') {\n                saveAnimatorTrackToCssKfs(animator, shapeKfs);\n            }\n        }\n        for (var percent in transformKfs) {\n            var transform = {};\n            copyTransform(transform, el);\n            extend(transform, transformKfs[percent]);\n            var str = getSRTTransformString(transform);\n            var timingFunction = transformKfs[percent][animationTimingFunctionAttrName];\n            finalKfs[percent] = str ? {\n                transform: str\n            } : {};\n            setTransformOrigin(finalKfs[percent], transform);\n            if (timingFunction) {\n                finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\n            }\n        }\n        ;\n        var path;\n        var canAnimateShape = true;\n        for (var percent in shapeKfs) {\n            finalKfs[percent] = finalKfs[percent] || {};\n            var isFirst = !path;\n            var timingFunction = shapeKfs[percent][animationTimingFunctionAttrName];\n            if (isFirst) {\n                path = new PathProxy();\n            }\n            var len_1 = path.len();\n            path.reset();\n            finalKfs[percent].d = buildPathString(el, shapeKfs[percent], path);\n            var newLen = path.len();\n            if (!isFirst && len_1 !== newLen) {\n                canAnimateShape = false;\n                break;\n            }\n            if (timingFunction) {\n                finalKfs[percent][animationTimingFunctionAttrName] = timingFunction;\n            }\n        }\n        ;\n        if (!canAnimateShape) {\n            for (var percent in finalKfs) {\n                delete finalKfs[percent].d;\n            }\n        }\n        if (!onlyShape) {\n            for (var i = 0; i < len; i++) {\n                var animator = animators[i];\n                var targetProp = animator.targetName;\n                if (targetProp === 'style') {\n                    saveAnimatorTrackToCssKfs(animator, finalKfs, function (propName) { return ANIMATE_STYLE_MAP[propName]; });\n                }\n            }\n        }\n        var percents = keys(finalKfs);\n        var allTransformOriginSame = true;\n        var transformOrigin;\n        for (var i = 1; i < percents.length; i++) {\n            var p0 = percents[i - 1];\n            var p1 = percents[i];\n            if (finalKfs[p0][transformOriginKey] !== finalKfs[p1][transformOriginKey]) {\n                allTransformOriginSame = false;\n                break;\n            }\n            transformOrigin = finalKfs[p0][transformOriginKey];\n        }\n        if (allTransformOriginSame && transformOrigin) {\n            for (var percent in finalKfs) {\n                if (finalKfs[percent][transformOriginKey]) {\n                    delete finalKfs[percent][transformOriginKey];\n                }\n            }\n            attrs[transformOriginKey] = transformOrigin;\n        }\n        if (filter(percents, function (percent) { return keys(finalKfs[percent]).length > 0; }).length) {\n            var animationName = addAnimation(finalKfs, scope);\n            return animationName + \" \" + groupAnimator[0] + \" both\";\n        }\n    }\n    for (var key in groupAnimators) {\n        var animationCfg = createSingleCSSAnimation(groupAnimators[key]);\n        if (animationCfg) {\n            cssAnimations.push(animationCfg);\n        }\n    }\n    if (cssAnimations.length) {\n        var className = scope.zrId + '-cls-' + scope.cssClassIdx++;\n        scope.cssNodes['.' + className] = {\n            animation: cssAnimations.join(',')\n        };\n        attrs[\"class\"] = className;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}