{"ast":null,"code":"import * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { TooltipComponent } from 'echarts/components';\nimport { MarkLineComponent } from 'echarts/components';\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition, TooltipComponent, MarkLineComponent]);\nexport default {\n  props: ['datalist'],\n\n  data() {\n    return {\n      myuChart: null\n    };\n  },\n\n  mounted() {\n    let chartDom = document.getElementById('main');\n    this.myChart = echarts.init(chartDom);\n    let option = {\n      xAxis: {\n        type: 'category',\n        axisPointer: {\n          snap: true\n        },\n        data: this.datalist.map(item => item.time)\n      },\n      yAxis: {\n        axisPointer: {\n          snap: true\n        }\n      },\n      series: [{\n        type: \"line\",\n        data: this.datalist.map(item => item.value),\n        areaStyle: {},\n        markLine: {\n          Symbol: ['none', 'none'],\n          data: [{\n            name: '阈值',\n            yAxis: 200\n          }],\n          lineStyle: {\n            color: '#f00',\n            width: 2,\n            type: 'dashed'\n          }\n        }\n      }],\n      tooltip: {\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      }\n    };\n    option && this.myChart.setOption(option);\n\n    window.onresize = function () {\n      this.myChart.resize();\n    };\n  },\n\n  watch: {\n    datalist: {\n      handler() {\n        this.myChart.setOption({\n          xAxis: {\n            data: this.datalist.map(item => item.time)\n          },\n          series: [{\n            data: this.datalist.map(item => item.value)\n          }]\n        });\n      }\n\n    }\n  }\n};","map":{"version":3,"mappings":"AAMA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,iBAAT,QAAiC,oBAAjC;AAGAN,OAAO,CAACO,GAAR,CAAY,CAACN,aAAD,EAAgBC,SAAhB,EAA2BE,cAA3B,EAA2CD,mBAA3C,EAAgEE,gBAAhE,EAAkFC,iBAAlF,CAAZ;AAGA,eAAe;EACXE,KAAK,EAAE,CAAC,UAAD,CADI;;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE;IADP,CAAP;EAGH,CANU;;EAOXC,OAAO,GAAG;IACN,IAAIC,QAAO,GAAIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;IACA,KAAKC,OAAL,GAAef,OAAO,CAACgB,IAAR,CAAaJ,QAAb,CAAf;IACA,IAAIK,MAAK,GAAI;MACTC,KAAK,EAAE;QACHC,IAAI,EAAE,UADH;QAEHC,WAAW,EAAE;UACTC,IAAI,EAAE;QADG,CAFV;QAKHZ,IAAI,EAAE,KAAKa,QAAL,CAAcC,GAAd,CAAkBC,IAAG,IAAKA,IAAI,CAACC,IAA/B;MALH,CADE;MAQTC,KAAK,EAAE;QACHN,WAAW,EAAE;UACTC,IAAI,EAAE;QADG;MADV,CARE;MAaTM,MAAM,EAAE,CACJ;QACIR,IAAI,EAAE,MADV;QAEIV,IAAI,EAAE,KAAKa,QAAL,CAAcC,GAAd,CAAkBC,IAAG,IAAKA,IAAI,CAACI,KAA/B,CAFV;QAGIC,SAAS,EAAE,EAHf;QAIIC,QAAQ,EAAE;UACNC,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CADF;UAENtB,IAAI,EAAE,CAAC;YACHuB,IAAI,EAAE,IADH;YAEHN,KAAK,EAAE;UAFJ,CAAD,CAFA;UAMNO,SAAS,EAAE;YACPC,KAAK,EAAE,MADA;YAEPC,KAAK,EAAE,CAFA;YAGPhB,IAAI,EAAE;UAHC;QANL;MAJd,CADI,CAbC;MAgCTiB,OAAO,EAAE;QACLhB,WAAW,EAAE;UACTD,IAAI,EAAE,OADG;UAETkB,KAAK,EAAE;YACHC,eAAe,EAAE;UADd;QAFE;MADR;IAhCA,CAAb;IA2CArB,MAAK,IAAK,KAAKF,OAAL,CAAawB,SAAb,CAAuBtB,MAAvB,CAAV;;IAGAuB,MAAM,CAACC,QAAP,GAAkB,YAAW;MACzB,KAAK1B,OAAL,CAAa2B,MAAb;IACH,CAFD;EAGH,CA3DU;;EA4DXC,KAAK,EAAE;IACHrB,QAAQ,EAAE;MACNsB,OAAO,GAAG;QACN,KAAK7B,OAAL,CAAawB,SAAb,CAAuB;UACnBrB,KAAK,EAAE;YACHT,IAAI,EAAE,KAAKa,QAAL,CAAcC,GAAd,CAAkBC,IAAG,IAAKA,IAAI,CAACC,IAA/B;UADH,CADY;UAInBE,MAAM,EAAE,CACZ;YACIlB,IAAI,EAAE,KAAKa,QAAL,CAAcC,GAAd,CAAkBC,IAAG,IAAKA,IAAI,CAACI,KAA/B;UADV,CADY;QAJW,CAAvB;MAUJ;;IAZM;EADP;AA5DI,CAAf","names":["echarts","GridComponent","LineChart","UniversalTransition","CanvasRenderer","TooltipComponent","MarkLineComponent","use","props","data","myuChart","mounted","chartDom","document","getElementById","myChart","init","option","xAxis","type","axisPointer","snap","datalist","map","item","time","yAxis","series","value","areaStyle","markLine","Symbol","name","lineStyle","color","width","tooltip","label","backgroundColor","setOption","window","onresize","resize","watch","handler"],"sourceRoot":"","sources":["/home/siyi/Projects/radi-demo/radi-showing/src/components/ChartRadi.vue"],"sourcesContent":["<template>\n  <div id=\"main\" style=\"width: 100%; height: 600px;\"></div>\n</template>\n\n\n<script>\nimport * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { TooltipComponent } from 'echarts/components';\nimport { MarkLineComponent} from 'echarts/components';\n\n\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition, TooltipComponent, MarkLineComponent]);\n\n\nexport default {\n    props: ['datalist'],\n    data() {\n        return {\n            myuChart: null,\n        }\n    },\n    mounted() {\n        let chartDom = document.getElementById('main');\n        this.myChart = echarts.init(chartDom);\n        let option = {\n            xAxis: {\n                type: 'category',\n                axisPointer: {\n                    snap: true,\n                },\n                data: this.datalist.map(item => item.time),\n            },\n            yAxis: {\n                axisPointer: {\n                    snap: true,\n                },\n            },\n            series: [\n                {\n                    type: \"line\",\n                    data: this.datalist.map(item => item.value),\n                    areaStyle: {},\n                    markLine: {\n                        Symbol: ['none', 'none'],\n                        data: [{\n                            name: '阈值',\n                            yAxis: 200\n                        }],\n                        lineStyle: {\n                            color: '#f00',\n                            width: 2,\n                            type: 'dashed'\n                        },\n                    }\n                }\n            ],\n            tooltip: {\n                axisPointer: {\n                    type: 'cross',\n                    label: {\n                        backgroundColor: '#6a7985',\n                    }\n                }\n            }\n        }\n\n        \n        option && this.myChart.setOption(option);\n\n\n        window.onresize = function() {\n            this.myChart.resize();\n        };\n    },\n    watch: {\n        datalist: {\n            handler() {\n                this.myChart.setOption({\n                    xAxis: {\n                        data: this.datalist.map(item => item.time),\n                    },\n                    series: [\n                {\n                    data: this.datalist.map(item => item.value),\n                    },\n            ],\n                })\n            }\n        }\n    }\n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}