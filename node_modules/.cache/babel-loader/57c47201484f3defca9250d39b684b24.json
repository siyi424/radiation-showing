{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport { extend, each, map } from 'zrender/lib/core/util.js';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut, traverseElements } from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation, labelInner } from '../../label/labelStyle.js';\nimport { throttle } from '../../util/throttle.js';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport Sausage from '../../util/shape/sausage.js';\nimport ChartView from '../../view/Chart.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { warn } from '../../util/log.js';\nimport { createSectorCalculateTextPosition, setSectorTextRotation } from '../../label/sectorLabel.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      // Clear previously rendered progressive elements.\n      this._progressiveEls = null;\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Reset\n    this._progressiveEls = []; // Do not support progressive in normal mode.\n\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype.eachRendered = function (cb) {\n    traverseElements(this._progressiveEls || this.group, cb);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex) || !isValidLayout[coord.type](layout)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n\n      if (realtimeSortCfg) {\n        /**\n         * Force label animation because even if the element is\n         * ignored because it's clipped, it may not be clipped after\n         * changing order. Then, if not using forceLabelAnimation,\n         * the label animation was never started, in which case,\n         * the label will be the final value and doesn't have label\n         * animation.\n         */\n        el.forceLabelAnimation = true;\n      }\n\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex) || !isValidLayout[coord.type](layout)) {\n        group.remove(el);\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } else {\n        saveOldStyle(el);\n      }\n\n      if (realtimeSortCfg) {\n        el.forceLabelAnimation = true;\n      }\n\n      if (isChangeOrder) {\n        var textEl = el.getTextContent();\n\n        if (textEl) {\n          var labelInnerStore = labelInner(textEl);\n\n          if (labelInnerStore.prevValue != null) {\n            /**\n             * Set preValue to be value so that no new label\n             * should be started, otherwise, it will take a full\n             * `animationDurationUpdate` time to finish the\n             * animation, which is not expected.\n             */\n            labelInnerStore.prevValue = labelInnerStore.value;\n          }\n        }\n      } // Not change anything if only order changed.\n      // Especially not change label.\n      else {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, this._progressiveEls, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n    var group = this.group;\n\n    if (clipPath) {\n      group.setClipPath(clipPath);\n    } else {\n      group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n        var shape = el && el.shape;\n        return shape && // The result should be consistent with the initial sort by data value.\n        // Do not support the case that both positive and negative exist.\n        Math.abs(baseAxis.isHorizontal() ? shape.height : shape.width) // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n        || 0;\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: layout,\n      z2: 1\n    });\n    sector.name = 'item';\n    var positionMap = createPolarPositionMapping(isRadial);\n    sector.calculateTextPosition = createSectorCalculateTextPosition(positionMap, {\n      isRoundCap: ShapeClass === Sausage\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nfunction checkPropertiesNotValid(obj, props) {\n  for (var i = 0; i < props.length; i++) {\n    if (!isFinite(obj[props[i]])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar rectPropties = ['x', 'y', 'width', 'height'];\nvar polarPropties = ['cx', 'cy', 'r', 'startAngle', 'endAngle'];\nvar isValidLayout = {\n  cartesian2d: function (layout) {\n    return !checkPropertiesNotValid(layout, rectPropties);\n  },\n  polar: function (layout) {\n    return !checkPropertiesNotValid(layout, polarPropties);\n  }\n};\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle,\n      clockwise: layout.clockwise\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction createPolarPositionMapping(isRadial) {\n  return function (isRadial) {\n    var arcOrAngle = isRadial ? 'Arc' : 'Angle';\n    return function (position) {\n      switch (position) {\n        case 'start':\n        case 'insideStart':\n        case 'end':\n        case 'insideEnd':\n          return position + arcOrAngle;\n\n        default:\n          return position;\n      }\n    };\n  }(isRadial);\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(['itemStyle', 'borderRadius']) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isPolar ? isHorizontalOrRadial ? layout.r >= layout.r0 ? 'endArc' : 'startArc' : layout.endAngle >= layout.startAngle ? 'endAngle' : 'startAngle' : isHorizontalOrRadial ? layout.height >= 0 ? 'bottom' : 'top' : layout.width >= 0 ? 'right' : 'left';\n  var labelStatesModels = getLabelStatesModels(itemModel);\n  setLabelStyle(el, labelStatesModels, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    inheritColor: style.fill,\n    defaultOpacity: style.opacity,\n    defaultOutsidePosition: labelPositionOutside\n  });\n  var label = el.getTextContent();\n\n  if (isPolar && label) {\n    var position = itemModel.get(['label', 'position']);\n    el.textConfig.inside = position === 'middle' ? true : null;\n    setSectorTextRotation(el, position === 'outside' ? labelPositionOutside : position, createPolarPositionMapping(isHorizontalOrRadial), itemModel.get(['label', 'rotate']));\n  }\n\n  setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n    return getDefaultInterpolatedLabel(data, value);\n  });\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  // Has no border.\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\n\n  if (!borderColor || borderColor === 'none') {\n    return 0;\n  }\n\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var baseDimIdx = this.baseDimIdx;\n    var valueDimIdx = 1 - this.baseDimIdx;\n    var startPoint = [];\n    var size = [];\n    var barWidth = this.barWidth;\n\n    for (var i = 0; i < points.length; i += 3) {\n      size[baseDimIdx] = barWidth;\n      size[valueDimIdx] = points[i + 2];\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      startPoint[valueDimIdx] = points[i + valueDimIdx];\n      ctx.rect(startPoint[0], startPoint[1], size[0], size[1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, progressiveEls, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('size');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var bgPoints = data.getLayout('largeBackgroundPoints');\n\n  if (bgPoints) {\n    var bgEl = new LargePath({\n      shape: {\n        points: bgPoints\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.baseDimIdx = baseDimIdx;\n    bgEl.largeDataIndices = largeDataIndices;\n    bgEl.barWidth = barWidth;\n    bgEl.useStyle(backgroundModel.getItemStyle());\n    group.add(bgEl);\n    progressiveEls && progressiveEls.push(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    z2: 1\n  });\n  el.baseDimIdx = baseDimIdx;\n  el.largeDataIndices = largeDataIndices;\n  el.barWidth = barWidth;\n  group.add(el);\n  el.useStyle(data.getVisual('style')); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n\n  progressiveEls && progressiveEls.push(el);\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.largeDataIndices;\n  var startPoint = [];\n  var size = [];\n  var barWidth = largePath.barWidth;\n\n  for (var i = 0, len = points.length / 3; i < len; i++) {\n    var ii = i * 3;\n    size[baseDimIdx] = barWidth;\n    size[valueDimIdx] = points[ii + 2];\n    startPoint[baseDimIdx] = points[ii + baseDimIdx];\n    startPoint[valueDimIdx] = points[ii + valueDimIdx];\n\n    if (size[valueDimIdx] < 0) {\n      startPoint[valueDimIdx] += size[valueDimIdx];\n      size[valueDimIdx] = -size[valueDimIdx];\n    }\n\n    if (x >= startPoint[0] && x <= startPoint[0] + size[0] && y >= startPoint[1] && y <= startPoint[1] + size[1]) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;","map":{"version":3,"names":["__extends","Path","Group","extend","each","map","Rect","Sector","updateProps","initProps","removeElementWithFadeOut","traverseElements","getECData","setStatesStylesFromModel","toggleHoverEmphasis","setLabelStyle","getLabelStatesModels","setLabelValueAnimation","labelInner","throttle","createClipPath","Sausage","ChartView","isCoordinateSystemType","getDefaultLabel","getDefaultInterpolatedLabel","warn","createSectorCalculateTextPosition","setSectorTextRotation","saveOldStyle","mathMax","Math","max","mathMin","min","getClipArea","coord","data","coordSysClipArea","getArea","baseAxis","getBaseAxis","type","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","BarView","_super","_this","call","_isFirstFrame","prototype","render","seriesModel","ecModel","api","payload","_model","_removeOnRenderedListener","_updateDrawMode","coordinateSystemType","get","_progressiveEls","_isLargeDraw","_renderLarge","_renderNormal","process","env","NODE_ENV","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","eachRendered","cb","group","isLargeDraw","pipelineContext","large","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","realtimeSortCfg","shouldRealtimeSort","_enableRealtimeSort","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","dataIndex","bgLayout","bgEl","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isValidLayout","isClipped","clip","el","elementCreator","model","forceLabelAnimation","updateStyle","attr","shape","updateRealtimeAnimation","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","createBackgroundShape","getItemGraphicEl","remove","textEl","getTextContent","labelInnerStore","prevValue","value","execute","bgGroup","_backgroundGroup","removeAll","i","createLarge","_removeBackground","clipPath","setClipPath","count","_dispatchInitSort","orderMapping_1","idx","abs","_onRendered","_updateSortWithinSameData","getZr","on","_dataSort","orderMapping","info","mapDimension","ordinalNumber","dataIdx","mappedValue","NaN","push","sort","a","b","ordinalNumbers","item","_isOrderChangedWithinSameData","scale","ordinalDataDim","lastValue","Number","MAX_VALUE","tickNum","len","getOrdinalMeta","categories","rawIdx","rawIndexOf","getRawOrdinalNumber","MIN_VALUE","indexOfRawIndex","_isOrderDifferentInView","orderInfo","extent","getExtent","tickMax","sortInfo","dispatchAction","componentType","axisId","index","sortResult","otherAxis","dispose","off","eachItemGraphicEl","cartesian2d","coordSysBoundingRect","signWidth","signHeight","coordSysX2","coordSysY2","x2","y2","xClipped","yClipped","polar","signR","r0","r","tmp","clipped","axisModel","isUpdate","rect","z2","__dataIndex","name","rectShape","animateProperty","isRadial","ShapeClass","sector","positionMap","createPolarPositionMapping","calculateTextPosition","isRoundCap","sectorShape","animateTarget","startAngle","coordSys","realtimeSortOption","getOtherAxis","seriesAnimationModel","seriesTarget","axisTarget","axisAnimationModel","checkPropertiesNotValid","obj","props","isFinite","rectPropties","polarPropties","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","endAngle","clockwise","isZeroOnPolar","arcOrAngle","position","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","labelFetcher","labelDataIndex","defaultText","inheritColor","fill","defaultOpacity","opacity","defaultOutsidePosition","label","textConfig","inside","getRawValue","emphasisModel","stroke","states","state","rawLayout","borderColor","lineWidth","isNaN","LagePathShape","LargePath","opts","getDefaultShape","buildPath","ctx","points","baseDimIdx","valueDimIdx","startPoint","size","barWidth","progressiveEls","incremental","largeDataIndices","bgPoints","silent","getVisual","seriesIndex","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","ii","coordLayout","PI","ElementClz"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/bar/BarView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport { extend, each, map } from 'zrender/lib/core/util.js';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut, traverseElements } from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation, labelInner } from '../../label/labelStyle.js';\nimport { throttle } from '../../util/throttle.js';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport Sausage from '../../util/shape/sausage.js';\nimport ChartView from '../../view/Chart.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { warn } from '../../util/log.js';\nimport { createSectorCalculateTextPosition, setSectorTextRotation } from '../../label/sectorLabel.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      // Clear previously rendered progressive elements.\n      this._progressiveEls = null;\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Reset\n    this._progressiveEls = []; // Do not support progressive in normal mode.\n\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype.eachRendered = function (cb) {\n    traverseElements(this._progressiveEls || this.group, cb);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex) || !isValidLayout[coord.type](layout)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n\n      if (realtimeSortCfg) {\n        /**\n         * Force label animation because even if the element is\n         * ignored because it's clipped, it may not be clipped after\n         * changing order. Then, if not using forceLabelAnimation,\n         * the label animation was never started, in which case,\n         * the label will be the final value and doesn't have label\n         * animation.\n         */\n        el.forceLabelAnimation = true;\n      }\n\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex) || !isValidLayout[coord.type](layout)) {\n        group.remove(el);\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } else {\n        saveOldStyle(el);\n      }\n\n      if (realtimeSortCfg) {\n        el.forceLabelAnimation = true;\n      }\n\n      if (isChangeOrder) {\n        var textEl = el.getTextContent();\n\n        if (textEl) {\n          var labelInnerStore = labelInner(textEl);\n\n          if (labelInnerStore.prevValue != null) {\n            /**\n             * Set preValue to be value so that no new label\n             * should be started, otherwise, it will take a full\n             * `animationDurationUpdate` time to finish the\n             * animation, which is not expected.\n             */\n            labelInnerStore.prevValue = labelInnerStore.value;\n          }\n        }\n      } // Not change anything if only order changed.\n      // Especially not change label.\n      else {\n          updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n        }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, this._progressiveEls, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n    var group = this.group;\n\n    if (clipPath) {\n      group.setClipPath(clipPath);\n    } else {\n      group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n        var shape = el && el.shape;\n        return shape && // The result should be consistent with the initial sort by data value.\n        // Do not support the case that both positive and negative exist.\n        Math.abs(baseAxis.isHorizontal() ? shape.height : shape.width) // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n        || 0;\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: layout,\n      z2: 1\n    });\n    sector.name = 'item';\n    var positionMap = createPolarPositionMapping(isRadial);\n    sector.calculateTextPosition = createSectorCalculateTextPosition(positionMap, {\n      isRoundCap: ShapeClass === Sausage\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nfunction checkPropertiesNotValid(obj, props) {\n  for (var i = 0; i < props.length; i++) {\n    if (!isFinite(obj[props[i]])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar rectPropties = ['x', 'y', 'width', 'height'];\nvar polarPropties = ['cx', 'cy', 'r', 'startAngle', 'endAngle'];\nvar isValidLayout = {\n  cartesian2d: function (layout) {\n    return !checkPropertiesNotValid(layout, rectPropties);\n  },\n  polar: function (layout) {\n    return !checkPropertiesNotValid(layout, polarPropties);\n  }\n};\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle,\n      clockwise: layout.clockwise\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction createPolarPositionMapping(isRadial) {\n  return function (isRadial) {\n    var arcOrAngle = isRadial ? 'Arc' : 'Angle';\n    return function (position) {\n      switch (position) {\n        case 'start':\n        case 'insideStart':\n        case 'end':\n        case 'insideEnd':\n          return position + arcOrAngle;\n\n        default:\n          return position;\n      }\n    };\n  }(isRadial);\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(['itemStyle', 'borderRadius']) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isPolar ? isHorizontalOrRadial ? layout.r >= layout.r0 ? 'endArc' : 'startArc' : layout.endAngle >= layout.startAngle ? 'endAngle' : 'startAngle' : isHorizontalOrRadial ? layout.height >= 0 ? 'bottom' : 'top' : layout.width >= 0 ? 'right' : 'left';\n  var labelStatesModels = getLabelStatesModels(itemModel);\n  setLabelStyle(el, labelStatesModels, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    inheritColor: style.fill,\n    defaultOpacity: style.opacity,\n    defaultOutsidePosition: labelPositionOutside\n  });\n  var label = el.getTextContent();\n\n  if (isPolar && label) {\n    var position = itemModel.get(['label', 'position']);\n    el.textConfig.inside = position === 'middle' ? true : null;\n    setSectorTextRotation(el, position === 'outside' ? labelPositionOutside : position, createPolarPositionMapping(isHorizontalOrRadial), itemModel.get(['label', 'rotate']));\n  }\n\n  setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n    return getDefaultInterpolatedLabel(data, value);\n  });\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  // Has no border.\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\n\n  if (!borderColor || borderColor === 'none') {\n    return 0;\n  }\n\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var baseDimIdx = this.baseDimIdx;\n    var valueDimIdx = 1 - this.baseDimIdx;\n    var startPoint = [];\n    var size = [];\n    var barWidth = this.barWidth;\n\n    for (var i = 0; i < points.length; i += 3) {\n      size[baseDimIdx] = barWidth;\n      size[valueDimIdx] = points[i + 2];\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      startPoint[valueDimIdx] = points[i + valueDimIdx];\n      ctx.rect(startPoint[0], startPoint[1], size[0], size[1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, progressiveEls, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('size');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var bgPoints = data.getLayout('largeBackgroundPoints');\n\n  if (bgPoints) {\n    var bgEl = new LargePath({\n      shape: {\n        points: bgPoints\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.baseDimIdx = baseDimIdx;\n    bgEl.largeDataIndices = largeDataIndices;\n    bgEl.barWidth = barWidth;\n    bgEl.useStyle(backgroundModel.getItemStyle());\n    group.add(bgEl);\n    progressiveEls && progressiveEls.push(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    z2: 1\n  });\n  el.baseDimIdx = baseDimIdx;\n  el.largeDataIndices = largeDataIndices;\n  el.barWidth = barWidth;\n  group.add(el);\n  el.useStyle(data.getVisual('style')); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n\n  progressiveEls && progressiveEls.push(el);\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.largeDataIndices;\n  var startPoint = [];\n  var size = [];\n  var barWidth = largePath.barWidth;\n\n  for (var i = 0, len = points.length / 3; i < len; i++) {\n    var ii = i * 3;\n    size[baseDimIdx] = barWidth;\n    size[valueDimIdx] = points[ii + 2];\n    startPoint[baseDimIdx] = points[ii + baseDimIdx];\n    startPoint[valueDimIdx] = points[ii + valueDimIdx];\n\n    if (size[valueDimIdx] < 0) {\n      startPoint[valueDimIdx] += size[valueDimIdx];\n      size[valueDimIdx] = -size[valueDimIdx];\n    }\n\n    if (x >= startPoint[0] && x <= startPoint[0] + size[0] && y >= startPoint[1] && y <= startPoint[1] + size[1]) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}