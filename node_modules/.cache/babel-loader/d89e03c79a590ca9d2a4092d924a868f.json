{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\n\nvar SingleAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisPointer, _super);\n\n  function SingleAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var position = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: position[0],\n      y: position[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  };\n\n  return SingleAxisPointer;\n}(BaseAxisPointer);\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nexport default SingleAxisPointer;","map":{"version":3,"names":["__extends","BaseAxisPointer","viewHelper","singleAxisHelper","XY","WH","SingleAxisPointer","_super","apply","arguments","prototype","makeElOption","elOption","value","axisModel","axisPointerModel","api","axis","coordSys","coordinateSystem","otherExtent","getGlobalExtent","getPointDimIndex","pixelValue","dataToPoint","axisPointerType","get","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","type","pointer","layoutInfo","layout","buildCartesianSingleLabelElOption","getHandleTransform","labelInside","labelMargin","position","getTransformedPosition","x","y","rotation","labelDirection","Math","PI","updateHandleTransform","transform","delta","dimIndex","axisExtent","currPosition","min","max","cursorOtherValue","cursorPoint","tooltipOption","verticalAlign","line","targetShape","makeLineShape","subPixelOptimize","shape","shadow","bandWidth","getBandWidth","span","makeRectShape","isHorizontal","rect","getRect"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/axisPointer/SingleAxisPointer.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper.js';\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\n\nvar SingleAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(SingleAxisPointer, _super);\n\n  function SingleAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  };\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    }); // @ts-ignore\n\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\n    var position = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\n    return {\n      x: position[0],\n      y: position[1],\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  };\n  /**\n   * @override\n   */\n\n\n  SingleAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = [transform.x, transform.y];\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      x: currPosition[0],\n      y: currPosition[1],\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  };\n\n  return SingleAxisPointer;\n}(BaseAxisPointer);\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nexport default SingleAxisPointer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}