{"ast":null,"code":"import * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\nimport { onMounted } from 'vue';\nexport default {\n  props: ['dataset'],\n\n  setup() {\n    onMounted(() => {\n      var chartDom = document.getElementById('main');\n      var myChart = echarts.init(chartDom);\n      var option;\n      var base = +new Date(2014, 9, 3);\n      var oneDay = 24 * 3600 * 1000;\n      var date = [];\n      var data = [Math.random() * 150];\n      var now = new Date(base);\n\n      function addData(shift) {\n        now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n        date.push(now);\n        data.push((Math.random() - 0.4) * 10 + data[data.length - 1]);\n\n        if (shift) {\n          date.shift();\n          data.shift();\n        }\n\n        now = new Date(+new Date(now) + oneDay);\n      }\n\n      for (var i = 1; i < 100; i++) {\n        addData();\n      }\n\n      option = {\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: date\n        },\n        yAxis: {\n          boundaryGap: [0, '50%'],\n          type: 'value'\n        },\n        series: [{\n          name: '成交',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          stack: 'a',\n          areaStyle: {\n            normal: {}\n          },\n          data: data\n        }]\n      };\n      setInterval(function () {\n        addData(true);\n        myChart.setOption({\n          xAxis: {\n            data: date\n          },\n          series: [{\n            name: '成交',\n            data: data\n          }]\n        });\n      }, 500);\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    });\n  },\n\n  components: {},\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"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","names":["echarts","GridComponent","LineChart","UniversalTransition","CanvasRenderer","use","onMounted","props","setup","chartDom","document","getElementById","myChart","init","option","base","Date","oneDay","date","data","Math","random","now","addData","shift","getFullYear","getMonth","getDate","join","push","length","i","xAxis","type","boundaryGap","yAxis","series","name","smooth","symbol","stack","areaStyle","normal","setInterval","setOption","window","onresize","resize","components","mounted"],"sourceRoot":"","sources":["/home/siyi/Projects/radi-demo/radi-showing/src/components/ChartRadi.vue"],"sourcesContent":["<template>\n  <div id=\"main\" style=\"width: 100%; height: 600px;\"></div>\n</template>\n\n\n<script>\nimport * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\n\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\n\n\nimport {onMounted} from 'vue';\n\nexport default {\n    props: ['dataset'],\n\n    setup() {\n        onMounted(() => {\n            var chartDom = document.getElementById('main');\nvar myChart = echarts.init(chartDom);\nvar option;\n\nvar base = +new Date(2014, 9, 3);\nvar oneDay = 24 * 3600 * 1000;\nvar date = [];\nvar data = [Math.random() * 150];\nvar now = new Date(base);\nfunction addData(shift) {\n  now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n  date.push(now);\n  data.push((Math.random() - 0.4) * 10 + data[data.length - 1]);\n  if (shift) {\n    date.shift();\n    data.shift();\n  }\n  now = new Date(+new Date(now) + oneDay);\n}\nfor (var i = 1; i < 100; i++) {\n  addData();\n}\noption = {\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: date\n  },\n  yAxis: {\n    boundaryGap: [0, '50%'],\n    type: 'value'\n  },\n  series: [\n    {\n      name: '成交',\n      type: 'line',\n      smooth: true,\n      symbol: 'none',\n      stack: 'a',\n      areaStyle: {\n        normal: {}\n      },\n      data: data\n    }\n  ]\n};\nsetInterval(function () {\n  addData(true);\n  myChart.setOption({\n    xAxis: {\n      data: date\n    },\n    series: [\n      {\n        name: '成交',\n        data: data\n      }\n    ]\n  });\n}, 500);\n\n\n            window.onresize = function() {\n                myChart.resize();\n            };\n\n        })\n    },\n\n    components: {},\n    mounted() {},\n\n    \n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}