{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesData from '../../data/SeriesData.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { defaultEmphasis } from '../../util/model.js';\nimport Model from '../../model/Model.js';\nimport createGraphFromNodeEdge from '../helper/createGraphFromNodeEdge.js';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider.js';\nimport SeriesModel from '../../model/Series.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nimport { defaultSeriesFormatTooltip } from '../../component/tooltip/seriesFormatTooltip.js';\nimport { initCurvenessList, createEdgeMapForCurveness } from '../helper/multipleGraphEdgeHelper.js';\n\nvar GraphSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(GraphSeriesModel, _super);\n\n  function GraphSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  GraphSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments);\n\n    var self = this;\n\n    function getCategoriesData() {\n      return self._categoriesData;\n    } // Provide data for legend select\n\n\n    this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  };\n\n  GraphSeriesModel.prototype.mergeOption = function (option) {\n    _super.prototype.mergeOption.apply(this, arguments);\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  };\n\n  GraphSeriesModel.prototype.mergeDefaultAndTheme = function (option) {\n    _super.prototype.mergeDefaultAndTheme.apply(this, arguments);\n\n    defaultEmphasis(option, 'edgeLabel', ['show']);\n  };\n\n  GraphSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      // auto curveness\n      initCurvenessList(this);\n      var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\n      zrUtil.each(graph.edges, function (edge) {\n        createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\n      }, this);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      }); // TODO Inherit resolveParentPath by default in Model#getModel?\n\n      var oldGetModel = Model.prototype.getModel;\n\n      function newGetModel(path, parentModel) {\n        var model = oldGetModel.call(this, path, parentModel);\n        model.resolveParentPath = resolveParentPath;\n        return model;\n      }\n\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.resolveParentPath = resolveParentPath;\n        model.getModel = newGetModel;\n        return model;\n      });\n\n      function resolveParentPath(pathArr) {\n        if (pathArr && (pathArr[0] === 'label' || pathArr[1] === 'label')) {\n          var newPathArr = pathArr.slice();\n\n          if (pathArr[0] === 'label') {\n            newPathArr[0] = 'edgeLabel';\n          } else if (pathArr[1] === 'label') {\n            newPathArr[1] = 'edgeLabel';\n          }\n\n          return newPathArr;\n        }\n\n        return pathArr;\n      }\n    }\n  };\n\n  GraphSeriesModel.prototype.getGraph = function () {\n    return this.getData().graph;\n  };\n\n  GraphSeriesModel.prototype.getEdgeData = function () {\n    return this.getGraph().edgeData;\n  };\n\n  GraphSeriesModel.prototype.getCategoriesData = function () {\n    return this._categoriesData;\n  };\n\n  GraphSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var nameArr = [];\n      sourceName != null && nameArr.push(sourceName);\n      targetName != null && nameArr.push(targetName);\n      return createTooltipMarkup('nameValue', {\n        name: nameArr.join(' > '),\n        value: params.value,\n        noValue: params.value == null\n      });\n    } // dataType === 'node' or empty\n\n\n    var nodeMarkup = defaultSeriesFormatTooltip({\n      series: this,\n      dataIndex: dataIndex,\n      multipleSeries: multipleSeries\n    });\n    return nodeMarkup;\n  };\n\n  GraphSeriesModel.prototype._updateCategoriesData = function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new SeriesData(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx);\n    });\n  };\n\n  GraphSeriesModel.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  GraphSeriesModel.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  GraphSeriesModel.prototype.isAnimationEnabled = function () {\n    return _super.prototype.isAnimationEnabled.call(this) // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get(['force', 'layoutAnimation']));\n  };\n\n  GraphSeriesModel.type = 'series.graph';\n  GraphSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\n  GraphSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    layout: null,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Initial friction\n      friction: 0.6,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle',\n      distance: 5\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      opacity: 0.5\n    },\n    emphasis: {\n      scale: true,\n      label: {\n        show: true\n      }\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    }\n  };\n  return GraphSeriesModel;\n}(SeriesModel);\n\nexport default GraphSeriesModel;","map":{"version":3,"names":["__extends","SeriesData","zrUtil","defaultEmphasis","Model","createGraphFromNodeEdge","LegendVisualProvider","SeriesModel","createTooltipMarkup","defaultSeriesFormatTooltip","initCurvenessList","createEdgeMapForCurveness","GraphSeriesModel","_super","_this","apply","arguments","type","hasSymbolVisual","prototype","init","option","self","getCategoriesData","_categoriesData","legendVisualProvider","fillDataTextStyle","edges","links","_updateCategoriesData","mergeOption","mergeDefaultAndTheme","getInitialData","ecModel","nodes","data","graph","beforeLink","each","edge","node1","node2","dataIndex","nodeData","edgeData","wrapMethod","model","categoriesModels","_categoriesModels","categoryIdx","getShallow","categoryModel","parentModel","oldGetModel","getModel","newGetModel","path","call","resolveParentPath","pathArr","newPathArr","slice","getGraph","getData","getEdgeData","formatTooltip","multipleSeries","dataType","params","getDataParams","getEdgeByIndex","sourceName","getName","targetName","nameArr","push","name","join","value","noValue","nodeMarkup","series","categories","map","category","extend","categoriesData","initData","mapArray","idx","getItemModel","setZoom","zoom","setCenter","center","isAnimationEnabled","get","dependencies","defaultOption","z","coordinateSystem","legendHoverLink","layout","circular","rotateLabel","force","initLayout","repulsion","gravity","friction","edgeLength","layoutAnimation","left","top","symbol","symbolSize","edgeSymbol","edgeSymbolSize","edgeLabel","position","distance","draggable","roam","nodeScaleRatio","label","show","formatter","itemStyle","lineStyle","color","width","opacity","emphasis","scale","select","borderColor"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/graph/GraphSeries.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesData from '../../data/SeriesData.js';\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { defaultEmphasis } from '../../util/model.js';\nimport Model from '../../model/Model.js';\nimport createGraphFromNodeEdge from '../helper/createGraphFromNodeEdge.js';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider.js';\nimport SeriesModel from '../../model/Series.js';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup.js';\nimport { defaultSeriesFormatTooltip } from '../../component/tooltip/seriesFormatTooltip.js';\nimport { initCurvenessList, createEdgeMapForCurveness } from '../helper/multipleGraphEdgeHelper.js';\n\nvar GraphSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(GraphSeriesModel, _super);\n\n  function GraphSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GraphSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n\n  GraphSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments);\n\n    var self = this;\n\n    function getCategoriesData() {\n      return self._categoriesData;\n    } // Provide data for legend select\n\n\n    this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  };\n\n  GraphSeriesModel.prototype.mergeOption = function (option) {\n    _super.prototype.mergeOption.apply(this, arguments);\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  };\n\n  GraphSeriesModel.prototype.mergeDefaultAndTheme = function (option) {\n    _super.prototype.mergeDefaultAndTheme.apply(this, arguments);\n\n    defaultEmphasis(option, 'edgeLabel', ['show']);\n  };\n\n  GraphSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      // auto curveness\n      initCurvenessList(this);\n      var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\n      zrUtil.each(graph.edges, function (edge) {\n        createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\n      }, this);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      }); // TODO Inherit resolveParentPath by default in Model#getModel?\n\n      var oldGetModel = Model.prototype.getModel;\n\n      function newGetModel(path, parentModel) {\n        var model = oldGetModel.call(this, path, parentModel);\n        model.resolveParentPath = resolveParentPath;\n        return model;\n      }\n\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.resolveParentPath = resolveParentPath;\n        model.getModel = newGetModel;\n        return model;\n      });\n\n      function resolveParentPath(pathArr) {\n        if (pathArr && (pathArr[0] === 'label' || pathArr[1] === 'label')) {\n          var newPathArr = pathArr.slice();\n\n          if (pathArr[0] === 'label') {\n            newPathArr[0] = 'edgeLabel';\n          } else if (pathArr[1] === 'label') {\n            newPathArr[1] = 'edgeLabel';\n          }\n\n          return newPathArr;\n        }\n\n        return pathArr;\n      }\n    }\n  };\n\n  GraphSeriesModel.prototype.getGraph = function () {\n    return this.getData().graph;\n  };\n\n  GraphSeriesModel.prototype.getEdgeData = function () {\n    return this.getGraph().edgeData;\n  };\n\n  GraphSeriesModel.prototype.getCategoriesData = function () {\n    return this._categoriesData;\n  };\n\n  GraphSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var nameArr = [];\n      sourceName != null && nameArr.push(sourceName);\n      targetName != null && nameArr.push(targetName);\n      return createTooltipMarkup('nameValue', {\n        name: nameArr.join(' > '),\n        value: params.value,\n        noValue: params.value == null\n      });\n    } // dataType === 'node' or empty\n\n\n    var nodeMarkup = defaultSeriesFormatTooltip({\n      series: this,\n      dataIndex: dataIndex,\n      multipleSeries: multipleSeries\n    });\n    return nodeMarkup;\n  };\n\n  GraphSeriesModel.prototype._updateCategoriesData = function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new SeriesData(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx);\n    });\n  };\n\n  GraphSeriesModel.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  GraphSeriesModel.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  GraphSeriesModel.prototype.isAnimationEnabled = function () {\n    return _super.prototype.isAnimationEnabled.call(this) // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get(['force', 'layoutAnimation']));\n  };\n\n  GraphSeriesModel.type = 'series.graph';\n  GraphSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\n  GraphSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    layout: null,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Initial friction\n      friction: 0.6,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle',\n      distance: 5\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      opacity: 0.5\n    },\n    emphasis: {\n      scale: true,\n      label: {\n        show: true\n      }\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    }\n  };\n  return GraphSeriesModel;\n}(SeriesModel);\n\nexport default GraphSeriesModel;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,0BAAxB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,uBAAP,MAAoC,sCAApC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,SAASC,0BAAT,QAA2C,gDAA3C;AACA,SAASC,iBAAT,EAA4BC,yBAA5B,QAA6D,sCAA7D;;AAEA,IAAIC,gBAAgB;AACpB;AACA,UAAUC,MAAV,EAAkB;EAChBb,SAAS,CAACY,gBAAD,EAAmBC,MAAnB,CAAT;;EAEA,SAASD,gBAAT,GAA4B;IAC1B,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;IAEAF,KAAK,CAACG,IAAN,GAAaL,gBAAgB,CAACK,IAA9B;IACAH,KAAK,CAACI,eAAN,GAAwB,IAAxB;IACA,OAAOJ,KAAP;EACD;;EAEDF,gBAAgB,CAACO,SAAjB,CAA2BC,IAA3B,GAAkC,UAAUC,MAAV,EAAkB;IAClDR,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsBL,KAAtB,CAA4B,IAA5B,EAAkCC,SAAlC;;IAEA,IAAIM,IAAI,GAAG,IAAX;;IAEA,SAASC,iBAAT,GAA6B;MAC3B,OAAOD,IAAI,CAACE,eAAZ;IACD,CAPiD,CAOhD;;;IAGF,KAAKC,oBAAL,GAA4B,IAAInB,oBAAJ,CAAyBiB,iBAAzB,EAA4CA,iBAA5C,CAA5B;IACA,KAAKG,iBAAL,CAAuBL,MAAM,CAACM,KAAP,IAAgBN,MAAM,CAACO,KAA9C;;IAEA,KAAKC,qBAAL;EACD,CAdD;;EAgBAjB,gBAAgB,CAACO,SAAjB,CAA2BW,WAA3B,GAAyC,UAAUT,MAAV,EAAkB;IACzDR,MAAM,CAACM,SAAP,CAAiBW,WAAjB,CAA6Bf,KAA7B,CAAmC,IAAnC,EAAyCC,SAAzC;;IAEA,KAAKU,iBAAL,CAAuBL,MAAM,CAACM,KAAP,IAAgBN,MAAM,CAACO,KAA9C;;IAEA,KAAKC,qBAAL;EACD,CAND;;EAQAjB,gBAAgB,CAACO,SAAjB,CAA2BY,oBAA3B,GAAkD,UAAUV,MAAV,EAAkB;IAClER,MAAM,CAACM,SAAP,CAAiBY,oBAAjB,CAAsChB,KAAtC,CAA4C,IAA5C,EAAkDC,SAAlD;;IAEAb,eAAe,CAACkB,MAAD,EAAS,WAAT,EAAsB,CAAC,MAAD,CAAtB,CAAf;EACD,CAJD;;EAMAT,gBAAgB,CAACO,SAAjB,CAA2Ba,cAA3B,GAA4C,UAAUX,MAAV,EAAkBY,OAAlB,EAA2B;IACrE,IAAIN,KAAK,GAAGN,MAAM,CAACM,KAAP,IAAgBN,MAAM,CAACO,KAAvB,IAAgC,EAA5C;IACA,IAAIM,KAAK,GAAGb,MAAM,CAACc,IAAP,IAAed,MAAM,CAACa,KAAtB,IAA+B,EAA3C;IACA,IAAIZ,IAAI,GAAG,IAAX;;IAEA,IAAIY,KAAK,IAAIP,KAAb,EAAoB;MAClB;MACAjB,iBAAiB,CAAC,IAAD,CAAjB;MACA,IAAI0B,KAAK,GAAG/B,uBAAuB,CAAC6B,KAAD,EAAQP,KAAR,EAAe,IAAf,EAAqB,IAArB,EAA2BU,UAA3B,CAAnC;MACAnC,MAAM,CAACoC,IAAP,CAAYF,KAAK,CAACT,KAAlB,EAAyB,UAAUY,IAAV,EAAgB;QACvC5B,yBAAyB,CAAC4B,IAAI,CAACC,KAAN,EAAaD,IAAI,CAACE,KAAlB,EAAyB,IAAzB,EAA+BF,IAAI,CAACG,SAApC,CAAzB;MACD,CAFD,EAEG,IAFH;MAGA,OAAON,KAAK,CAACD,IAAb;IACD;;IAED,SAASE,UAAT,CAAoBM,QAApB,EAA8BC,QAA9B,EAAwC;MACtC;MACAD,QAAQ,CAACE,UAAT,CAAoB,cAApB,EAAoC,UAAUC,KAAV,EAAiB;QACnD,IAAIC,gBAAgB,GAAGzB,IAAI,CAAC0B,iBAA5B;QACA,IAAIC,WAAW,GAAGH,KAAK,CAACI,UAAN,CAAiB,UAAjB,CAAlB;QACA,IAAIC,aAAa,GAAGJ,gBAAgB,CAACE,WAAD,CAApC;;QAEA,IAAIE,aAAJ,EAAmB;UACjBA,aAAa,CAACC,WAAd,GAA4BN,KAAK,CAACM,WAAlC;UACAN,KAAK,CAACM,WAAN,GAAoBD,aAApB;QACD;;QAED,OAAOL,KAAP;MACD,CAXD,EAFsC,CAalC;;MAEJ,IAAIO,WAAW,GAAGjD,KAAK,CAACe,SAAN,CAAgBmC,QAAlC;;MAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BJ,WAA3B,EAAwC;QACtC,IAAIN,KAAK,GAAGO,WAAW,CAACI,IAAZ,CAAiB,IAAjB,EAAuBD,IAAvB,EAA6BJ,WAA7B,CAAZ;QACAN,KAAK,CAACY,iBAAN,GAA0BA,iBAA1B;QACA,OAAOZ,KAAP;MACD;;MAEDF,QAAQ,CAACC,UAAT,CAAoB,cAApB,EAAoC,UAAUC,KAAV,EAAiB;QACnDA,KAAK,CAACY,iBAAN,GAA0BA,iBAA1B;QACAZ,KAAK,CAACQ,QAAN,GAAiBC,WAAjB;QACA,OAAOT,KAAP;MACD,CAJD;;MAMA,SAASY,iBAAT,CAA2BC,OAA3B,EAAoC;QAClC,IAAIA,OAAO,KAAKA,OAAO,CAAC,CAAD,CAAP,KAAe,OAAf,IAA0BA,OAAO,CAAC,CAAD,CAAP,KAAe,OAA9C,CAAX,EAAmE;UACjE,IAAIC,UAAU,GAAGD,OAAO,CAACE,KAAR,EAAjB;;UAEA,IAAIF,OAAO,CAAC,CAAD,CAAP,KAAe,OAAnB,EAA4B;YAC1BC,UAAU,CAAC,CAAD,CAAV,GAAgB,WAAhB;UACD,CAFD,MAEO,IAAID,OAAO,CAAC,CAAD,CAAP,KAAe,OAAnB,EAA4B;YACjCC,UAAU,CAAC,CAAD,CAAV,GAAgB,WAAhB;UACD;;UAED,OAAOA,UAAP;QACD;;QAED,OAAOD,OAAP;MACD;IACF;EACF,CA5DD;;EA8DA/C,gBAAgB,CAACO,SAAjB,CAA2B2C,QAA3B,GAAsC,YAAY;IAChD,OAAO,KAAKC,OAAL,GAAe3B,KAAtB;EACD,CAFD;;EAIAxB,gBAAgB,CAACO,SAAjB,CAA2B6C,WAA3B,GAAyC,YAAY;IACnD,OAAO,KAAKF,QAAL,GAAgBlB,QAAvB;EACD,CAFD;;EAIAhC,gBAAgB,CAACO,SAAjB,CAA2BI,iBAA3B,GAA+C,YAAY;IACzD,OAAO,KAAKC,eAAZ;EACD,CAFD;;EAIAZ,gBAAgB,CAACO,SAAjB,CAA2B8C,aAA3B,GAA2C,UAAUvB,SAAV,EAAqBwB,cAArB,EAAqCC,QAArC,EAA+C;IACxF,IAAIA,QAAQ,KAAK,MAAjB,EAAyB;MACvB,IAAIxB,QAAQ,GAAG,KAAKoB,OAAL,EAAf;MACA,IAAIK,MAAM,GAAG,KAAKC,aAAL,CAAmB3B,SAAnB,EAA8ByB,QAA9B,CAAb;MACA,IAAI5B,IAAI,GAAGI,QAAQ,CAACP,KAAT,CAAekC,cAAf,CAA8B5B,SAA9B,CAAX;MACA,IAAI6B,UAAU,GAAG5B,QAAQ,CAAC6B,OAAT,CAAiBjC,IAAI,CAACC,KAAL,CAAWE,SAA5B,CAAjB;MACA,IAAI+B,UAAU,GAAG9B,QAAQ,CAAC6B,OAAT,CAAiBjC,IAAI,CAACE,KAAL,CAAWC,SAA5B,CAAjB;MACA,IAAIgC,OAAO,GAAG,EAAd;MACAH,UAAU,IAAI,IAAd,IAAsBG,OAAO,CAACC,IAAR,CAAaJ,UAAb,CAAtB;MACAE,UAAU,IAAI,IAAd,IAAsBC,OAAO,CAACC,IAAR,CAAaF,UAAb,CAAtB;MACA,OAAOjE,mBAAmB,CAAC,WAAD,EAAc;QACtCoE,IAAI,EAAEF,OAAO,CAACG,IAAR,CAAa,KAAb,CADgC;QAEtCC,KAAK,EAAEV,MAAM,CAACU,KAFwB;QAGtCC,OAAO,EAAEX,MAAM,CAACU,KAAP,IAAgB;MAHa,CAAd,CAA1B;IAKD,CAfuF,CAetF;;;IAGF,IAAIE,UAAU,GAAGvE,0BAA0B,CAAC;MAC1CwE,MAAM,EAAE,IADkC;MAE1CvC,SAAS,EAAEA,SAF+B;MAG1CwB,cAAc,EAAEA;IAH0B,CAAD,CAA3C;IAKA,OAAOc,UAAP;EACD,CAxBD;;EA0BApE,gBAAgB,CAACO,SAAjB,CAA2BU,qBAA3B,GAAmD,YAAY;IAC7D,IAAIqD,UAAU,GAAGhF,MAAM,CAACiF,GAAP,CAAW,KAAK9D,MAAL,CAAY6D,UAAZ,IAA0B,EAArC,EAAyC,UAAUE,QAAV,EAAoB;MAC5E;MACA,OAAOA,QAAQ,CAACN,KAAT,IAAkB,IAAlB,GAAyBM,QAAzB,GAAoClF,MAAM,CAACmF,MAAP,CAAc;QACvDP,KAAK,EAAE;MADgD,CAAd,EAExCM,QAFwC,CAA3C;IAGD,CALgB,CAAjB;IAMA,IAAIE,cAAc,GAAG,IAAIrF,UAAJ,CAAe,CAAC,OAAD,CAAf,EAA0B,IAA1B,CAArB;IACAqF,cAAc,CAACC,QAAf,CAAwBL,UAAxB;IACA,KAAK1D,eAAL,GAAuB8D,cAAvB;IACA,KAAKtC,iBAAL,GAAyBsC,cAAc,CAACE,QAAf,CAAwB,UAAUC,GAAV,EAAe;MAC9D,OAAOH,cAAc,CAACI,YAAf,CAA4BD,GAA5B,CAAP;IACD,CAFwB,CAAzB;EAGD,CAbD;;EAeA7E,gBAAgB,CAACO,SAAjB,CAA2BwE,OAA3B,GAAqC,UAAUC,IAAV,EAAgB;IACnD,KAAKvE,MAAL,CAAYuE,IAAZ,GAAmBA,IAAnB;EACD,CAFD;;EAIAhF,gBAAgB,CAACO,SAAjB,CAA2B0E,SAA3B,GAAuC,UAAUC,MAAV,EAAkB;IACvD,KAAKzE,MAAL,CAAYyE,MAAZ,GAAqBA,MAArB;EACD,CAFD;;EAIAlF,gBAAgB,CAACO,SAAjB,CAA2B4E,kBAA3B,GAAgD,YAAY;IAC1D,OAAOlF,MAAM,CAACM,SAAP,CAAiB4E,kBAAjB,CAAoCtC,IAApC,CAAyC,IAAzC,EAA+C;IAA/C,GACJ,EAAE,KAAKuC,GAAL,CAAS,QAAT,MAAuB,OAAvB,IAAkC,KAAKA,GAAL,CAAS,CAAC,OAAD,EAAU,iBAAV,CAAT,CAApC,CADH;EAED,CAHD;;EAKApF,gBAAgB,CAACK,IAAjB,GAAwB,cAAxB;EACAL,gBAAgB,CAACqF,YAAjB,GAAgC,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,YAAzB,EAAuC,UAAvC,CAAhC;EACArF,gBAAgB,CAACsF,aAAjB,GAAiC;IAC/B;IACAC,CAAC,EAAE,CAF4B;IAG/BC,gBAAgB,EAAE,MAHa;IAI/B;IACA;IACA;IACA;IACA;IACAC,eAAe,EAAE,IATc;IAU/BC,MAAM,EAAE,IAVuB;IAW/B;IACAC,QAAQ,EAAE;MACRC,WAAW,EAAE;IADL,CAZqB;IAe/B;IACAC,KAAK,EAAE;MACLC,UAAU,EAAE,IADP;MAEL;MACAC,SAAS,EAAE,CAAC,CAAD,EAAI,EAAJ,CAHN;MAILC,OAAO,EAAE,GAJJ;MAKL;MACAC,QAAQ,EAAE,GANL;MAOL;MACAC,UAAU,EAAE,EARP;MASLC,eAAe,EAAE;IATZ,CAhBwB;IA2B/BC,IAAI,EAAE,QA3ByB;IA4B/BC,GAAG,EAAE,QA5B0B;IA6B/B;IACA;IACA;IACA;IACAC,MAAM,EAAE,QAjCuB;IAkC/BC,UAAU,EAAE,EAlCmB;IAmC/BC,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,CAnCmB;IAoC/BC,cAAc,EAAE,EApCe;IAqC/BC,SAAS,EAAE;MACTC,QAAQ,EAAE,QADD;MAETC,QAAQ,EAAE;IAFD,CArCoB;IAyC/BC,SAAS,EAAE,KAzCoB;IA0C/BC,IAAI,EAAE,KA1CyB;IA2C/B;IACA5B,MAAM,EAAE,IA5CuB;IA6C/BF,IAAI,EAAE,CA7CyB;IA8C/B;IACA+B,cAAc,EAAE,GA/Ce;IAgD/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,EAAE;MACLC,IAAI,EAAE,KADD;MAELC,SAAS,EAAE;IAFN,CAzDwB;IA6D/BC,SAAS,EAAE,EA7DoB;IA8D/BC,SAAS,EAAE;MACTC,KAAK,EAAE,MADE;MAETC,KAAK,EAAE,CAFE;MAGTC,OAAO,EAAE;IAHA,CA9DoB;IAmE/BC,QAAQ,EAAE;MACRC,KAAK,EAAE,IADC;MAERT,KAAK,EAAE;QACLC,IAAI,EAAE;MADD;IAFC,CAnEqB;IAyE/BS,MAAM,EAAE;MACNP,SAAS,EAAE;QACTQ,WAAW,EAAE;MADJ;IADL;EAzEuB,CAAjC;EA+EA,OAAO3H,gBAAP;AACD,CA3PD,CA2PEL,WA3PF,CAFA;;AA+PA,eAAeK,gBAAf"},"metadata":{},"sourceType":"module"}