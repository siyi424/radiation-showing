{"ast":null,"code":"import * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { TooltipComponent } from 'echarts/components'; // import { MarkLine} from 'echarts/components';\n\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition, TooltipComponent]);\nexport default {\n  props: ['datalist'],\n\n  mounted() {\n    let chartDom = document.getElementById('main');\n    let myChart = echarts.init(chartDom);\n    let option = {\n      xAxis: {\n        type: 'category',\n        axisPointer: {\n          snap: true\n        },\n        data: this.datalist.map(item => item.time)\n      },\n      yAxis: {\n        axisPointer: {\n          snap: true\n        }\n      },\n      series: [{\n        type: \"line\",\n        data: this.datalist.map(item => item.value),\n        areaStyle: {},\n        markline: {\n          Symbol: ['none', 'none'],\n          label: {\n            show: false,\n            position: 'start',\n            formatter: 'b'\n          },\n          data: [{\n            name: '阈值',\n            yAxis: 200\n          }],\n          lineStyle: {\n            color: '#f00'\n          }\n        }\n      }],\n      tooltip: {\n        axisPointer: {\n          type: 'cross',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        }\n      }\n    };\n    option && myChart.setOption(option);\n\n    window.onresize = function () {\n      myChart.resize();\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAMA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,gBAAT,QAAiC,oBAAjC,C,CACA;;AAGAL,OAAO,CAACM,GAAR,CAAY,CAACL,aAAD,EAAgBC,SAAhB,EAA2BE,cAA3B,EAA2CD,mBAA3C,EAAgEE,gBAAhE,CAAZ;AAGA,eAAe;EACXE,KAAK,EAAE,CAAC,UAAD,CADI;;EAEXC,OAAO,GAAG;IACN,IAAIC,QAAO,GAAIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAf;IACA,IAAIC,OAAM,GAAIZ,OAAO,CAACa,IAAR,CAAaJ,QAAb,CAAd;IACA,IAAIK,MAAK,GAAI;MACTC,KAAK,EAAE;QACHC,IAAI,EAAE,UADH;QAEHC,WAAW,EAAE;UACTC,IAAI,EAAE;QADG,CAFV;QAKHC,IAAI,EAAE,KAAKC,QAAL,CAAcC,GAAd,CAAkBC,IAAG,IAAKA,IAAI,CAACC,IAA/B;MALH,CADE;MAQTC,KAAK,EAAE;QACHP,WAAW,EAAE;UACTC,IAAI,EAAE;QADG;MADV,CARE;MAaTO,MAAM,EAAE,CACJ;QACIT,IAAI,EAAE,MADV;QAEIG,IAAI,EAAE,KAAKC,QAAL,CAAcC,GAAd,CAAkBC,IAAG,IAAKA,IAAI,CAACI,KAA/B,CAFV;QAGIC,SAAS,EAAE,EAHf;QAIIC,QAAQ,EAAE;UACNC,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,CADF;UAENC,KAAK,EAAE;YACHC,IAAI,EAAE,KADH;YAEHC,QAAQ,EAAE,OAFP;YAGHC,SAAS,EAAE;UAHR,CAFD;UAONd,IAAI,EAAE,CAAC;YACHe,IAAI,EAAE,IADH;YAEHV,KAAK,EAAE;UAFJ,CAAD,CAPA;UAWNW,SAAS,EAAE;YACPC,KAAK,EAAE;UADA;QAXL;MAJd,CADI,CAbC;MAmCTC,OAAO,EAAE;QACLpB,WAAW,EAAE;UACTD,IAAI,EAAE,OADG;UAETc,KAAK,EAAE;YACHQ,eAAe,EAAE;UADd;QAFE;MADR;IAnCA,CAAb;IA8CAxB,MAAK,IAAKF,OAAO,CAAC2B,SAAR,CAAkBzB,MAAlB,CAAV;;IAGA0B,MAAM,CAACC,QAAP,GAAkB,YAAW;MACzB7B,OAAO,CAAC8B,MAAR;IACH,CAFD;EAGJ;;AAzDW,CAAf","names":["echarts","GridComponent","LineChart","UniversalTransition","CanvasRenderer","TooltipComponent","use","props","mounted","chartDom","document","getElementById","myChart","init","option","xAxis","type","axisPointer","snap","data","datalist","map","item","time","yAxis","series","value","areaStyle","markline","Symbol","label","show","position","formatter","name","lineStyle","color","tooltip","backgroundColor","setOption","window","onresize","resize"],"sourceRoot":"","sources":["/home/siyi/Projects/radi-demo/radi-showing/src/components/ChartRadi.vue"],"sourcesContent":["<template>\n  <div id=\"main\" style=\"width: 100%; height: 600px;\"></div>\n</template>\n\n\n<script>\nimport * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { TooltipComponent } from 'echarts/components';\n// import { MarkLine} from 'echarts/components';\n\n\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition, TooltipComponent]);\n\n\nexport default {\n    props: ['datalist'],\n    mounted() {\n        let chartDom = document.getElementById('main');\n        let myChart = echarts.init(chartDom);\n        let option = {\n            xAxis: {\n                type: 'category',\n                axisPointer: {\n                    snap: true,\n                },\n                data: this.datalist.map(item => item.time),\n            },\n            yAxis: {\n                axisPointer: {\n                    snap: true,\n                },\n            },\n            series: [\n                {\n                    type: \"line\",\n                    data: this.datalist.map(item => item.value),\n                    areaStyle: {},\n                    markline: {\n                        Symbol: ['none', 'none'],\n                        label: {\n                            show: false,\n                            position: 'start',\n                            formatter: 'b'\n                        },\n                        data: [{\n                            name: '阈值',\n                            yAxis: 200\n                        }],\n                        lineStyle: {\n                            color: '#f00'\n                        }\n                    }\n                }\n            ],\n            tooltip: {\n                axisPointer: {\n                    type: 'cross',\n                    label: {\n                        backgroundColor: '#6a7985',\n                    }\n                }\n            }\n        }\n\n        \n        option && myChart.setOption(option);\n\n\n        window.onresize = function() {\n            myChart.resize();\n        };\n    }\n\n    \n    \n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}