{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as axisPointerModelHelper from '../axisPointer/modelHelper.js';\nimport ComponentView from '../../view/Component.js';\nvar axisPointerClazz = {};\n/**\n * Base class of AxisView.\n */\n\nvar AxisView =\n/** @class */\nfunction (_super) {\n  __extends(AxisView, _super);\n\n  function AxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisView.type;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n    _super.prototype.render.apply(this, arguments);\n\n    this._doUpdateAxisPointerClass(axisModel, api, true);\n  };\n  /**\n   * Action handler.\n   */\n\n\n  AxisView.prototype.updateAxisPointer = function (axisModel, ecModel, api, payload) {\n    this._doUpdateAxisPointerClass(axisModel, api, false);\n  };\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.remove = function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n  };\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.dispose = function (ecModel, api) {\n    this._disposeAxisPointer(api);\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  AxisView.prototype._doUpdateAxisPointerClass = function (axisModel, api, forceRender) {\n    var Clazz = AxisView.getAxisPointerClass(this.axisPointerClass);\n\n    if (!Clazz) {\n      return;\n    }\n\n    var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n    axisPointerModel ? (this._axisPointer || (this._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : this._disposeAxisPointer(api);\n  };\n\n  AxisView.prototype._disposeAxisPointer = function (api) {\n    this._axisPointer && this._axisPointer.dispose(api);\n    this._axisPointer = null;\n  };\n\n  AxisView.registerAxisPointerClass = function (type, clazz) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (axisPointerClazz[type]) {\n        throw new Error('axisPointer ' + type + ' exists');\n      }\n    }\n\n    axisPointerClazz[type] = clazz;\n  };\n\n  ;\n\n  AxisView.getAxisPointerClass = function (type) {\n    return type && axisPointerClazz[type];\n  };\n\n  ;\n  AxisView.type = 'axis';\n  return AxisView;\n}(ComponentView);\n\nexport default AxisView;","map":{"version":3,"names":["__extends","axisPointerModelHelper","ComponentView","axisPointerClazz","AxisView","_super","_this","apply","arguments","type","prototype","render","axisModel","ecModel","api","payload","axisPointerClass","fixValue","_doUpdateAxisPointerClass","updateAxisPointer","remove","axisPointer","_axisPointer","dispose","_disposeAxisPointer","forceRender","Clazz","getAxisPointerClass","axisPointerModel","getAxisPointerModel","registerAxisPointerClass","clazz","process","env","NODE_ENV","Error"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/axis/AxisView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as axisPointerModelHelper from '../axisPointer/modelHelper.js';\nimport ComponentView from '../../view/Component.js';\nvar axisPointerClazz = {};\n/**\n * Base class of AxisView.\n */\n\nvar AxisView =\n/** @class */\nfunction (_super) {\n  __extends(AxisView, _super);\n\n  function AxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AxisView.type;\n    return _this;\n  }\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.render = function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n    _super.prototype.render.apply(this, arguments);\n\n    this._doUpdateAxisPointerClass(axisModel, api, true);\n  };\n  /**\n   * Action handler.\n   */\n\n\n  AxisView.prototype.updateAxisPointer = function (axisModel, ecModel, api, payload) {\n    this._doUpdateAxisPointerClass(axisModel, api, false);\n  };\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.remove = function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n  };\n  /**\n   * @override\n   */\n\n\n  AxisView.prototype.dispose = function (ecModel, api) {\n    this._disposeAxisPointer(api);\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  AxisView.prototype._doUpdateAxisPointerClass = function (axisModel, api, forceRender) {\n    var Clazz = AxisView.getAxisPointerClass(this.axisPointerClass);\n\n    if (!Clazz) {\n      return;\n    }\n\n    var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n    axisPointerModel ? (this._axisPointer || (this._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : this._disposeAxisPointer(api);\n  };\n\n  AxisView.prototype._disposeAxisPointer = function (api) {\n    this._axisPointer && this._axisPointer.dispose(api);\n    this._axisPointer = null;\n  };\n\n  AxisView.registerAxisPointerClass = function (type, clazz) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (axisPointerClazz[type]) {\n        throw new Error('axisPointer ' + type + ' exists');\n      }\n    }\n\n    axisPointerClazz[type] = clazz;\n  };\n\n  ;\n\n  AxisView.getAxisPointerClass = function (type) {\n    return type && axisPointerClazz[type];\n  };\n\n  ;\n  AxisView.type = 'axis';\n  return AxisView;\n}(ComponentView);\n\nexport default AxisView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}