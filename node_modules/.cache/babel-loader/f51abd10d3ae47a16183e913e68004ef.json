{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\n\nvar PolarAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(PolarAxisPointer, _super);\n\n  function PolarAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  PolarAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue = axis.dataToCoord(value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get(['label', 'margin']);\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  };\n\n  return PolarAxisPointer;\n}(BaseAxisPointer);\n\n;\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0; // @ts-ignore\n\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nexport default PolarAxisPointer;","map":{"version":3,"names":["__extends","BaseAxisPointer","graphic","viewHelper","matrix","AxisBuilder","PolarAxisPointer","_super","apply","arguments","prototype","makeElOption","elOption","value","axisModel","axisPointerModel","api","axis","dim","animationThreshold","Math","PI","polar","otherAxis","getOtherAxis","otherExtent","getExtent","coordValue","dataToCoord","axisPointerType","get","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","style","graphicKey","type","pointer","labelMargin","labelPos","getLabelPosition","buildLabelElOption","coord","axisAngle","getAngleAxis","radiusExtent","getRadiusAxis","position","align","verticalAlign","transform","create","rotate","translate","cx","cy","applyTransform","labelRotation","getModel","labelLayout","innerTextLayout","textAlign","textVerticalAlign","r","coordToPoint","abs","line","shape","makeLineShape","shadow","bandWidth","max","getBandWidth","radian","makeSectorShape"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/axisPointer/PolarAxisPointer.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseAxisPointer from './BaseAxisPointer.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as viewHelper from './viewHelper.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport AxisBuilder from '../axis/AxisBuilder.js';\n\nvar PolarAxisPointer =\n/** @class */\nfunction (_super) {\n  __extends(PolarAxisPointer, _super);\n\n  function PolarAxisPointer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @override\n   */\n\n\n  PolarAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue = axis.dataToCoord(value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get(['label', 'margin']);\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  };\n\n  return PolarAxisPointer;\n}(BaseAxisPointer);\n\n;\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0; // @ts-ignore\n\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nexport default PolarAxisPointer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}