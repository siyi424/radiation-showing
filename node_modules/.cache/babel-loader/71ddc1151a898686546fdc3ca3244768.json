{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar linesVisual = {\n  seriesType: 'lines',\n  reset: function (seriesModel) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nexport default linesVisual;","map":{"version":3,"names":["normalize","a","Array","linesVisual","seriesType","reset","seriesModel","symbolType","get","symbolSize","data","getData","setVisual","dataEach","idx","itemModel","getItemModel","getShallow","setItemVisual","hasItemOption"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/lines/linesVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar linesVisual = {\n  seriesType: 'lines',\n  reset: function (seriesModel) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nexport default linesVisual;"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;EACpB,IAAI,EAAEA,CAAC,YAAYC,KAAf,CAAJ,EAA2B;IACzBD,CAAC,GAAG,CAACA,CAAD,EAAIA,CAAJ,CAAJ;EACD;;EAED,OAAOA,CAAP;AACD;;AAED,IAAIE,WAAW,GAAG;EAChBC,UAAU,EAAE,OADI;EAEhBC,KAAK,EAAE,UAAUC,WAAV,EAAuB;IAC5B,IAAIC,UAAU,GAAGP,SAAS,CAACM,WAAW,CAACE,GAAZ,CAAgB,QAAhB,CAAD,CAA1B;IACA,IAAIC,UAAU,GAAGT,SAAS,CAACM,WAAW,CAACE,GAAZ,CAAgB,YAAhB,CAAD,CAA1B;IACA,IAAIE,IAAI,GAAGJ,WAAW,CAACK,OAAZ,EAAX;IACAD,IAAI,CAACE,SAAL,CAAe,YAAf,EAA6BL,UAAU,IAAIA,UAAU,CAAC,CAAD,CAArD;IACAG,IAAI,CAACE,SAAL,CAAe,UAAf,EAA2BL,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAnD;IACAG,IAAI,CAACE,SAAL,CAAe,gBAAf,EAAiCH,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAzD;IACAC,IAAI,CAACE,SAAL,CAAe,cAAf,EAA+BH,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAvD;;IAEA,SAASI,QAAT,CAAkBH,IAAlB,EAAwBI,GAAxB,EAA6B;MAC3B,IAAIC,SAAS,GAAGL,IAAI,CAACM,YAAL,CAAkBF,GAAlB,CAAhB;MACA,IAAIP,UAAU,GAAGP,SAAS,CAACe,SAAS,CAACE,UAAV,CAAqB,QAArB,EAA+B,IAA/B,CAAD,CAA1B;MACA,IAAIR,UAAU,GAAGT,SAAS,CAACe,SAAS,CAACE,UAAV,CAAqB,YAArB,EAAmC,IAAnC,CAAD,CAA1B;MACAV,UAAU,CAAC,CAAD,CAAV,IAAiBG,IAAI,CAACQ,aAAL,CAAmBJ,GAAnB,EAAwB,YAAxB,EAAsCP,UAAU,CAAC,CAAD,CAAhD,CAAjB;MACAA,UAAU,CAAC,CAAD,CAAV,IAAiBG,IAAI,CAACQ,aAAL,CAAmBJ,GAAnB,EAAwB,UAAxB,EAAoCP,UAAU,CAAC,CAAD,CAA9C,CAAjB;MACAE,UAAU,CAAC,CAAD,CAAV,IAAiBC,IAAI,CAACQ,aAAL,CAAmBJ,GAAnB,EAAwB,gBAAxB,EAA0CL,UAAU,CAAC,CAAD,CAApD,CAAjB;MACAA,UAAU,CAAC,CAAD,CAAV,IAAiBC,IAAI,CAACQ,aAAL,CAAmBJ,GAAnB,EAAwB,cAAxB,EAAwCL,UAAU,CAAC,CAAD,CAAlD,CAAjB;IACD;;IAED,OAAO;MACLI,QAAQ,EAAEH,IAAI,CAACS,aAAL,GAAqBN,QAArB,GAAgC;IADrC,CAAP;EAGD;AAxBe,CAAlB;AA0BA,eAAeV,WAAf"},"metadata":{},"sourceType":"module"}