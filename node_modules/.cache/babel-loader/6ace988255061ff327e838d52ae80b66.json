{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner, normalizeToArray } from '../../util/model.js';\nvar innerColor = makeInner();\nvar innerDecal = makeInner();\n\nvar PaletteMixin =\n/** @class */\nfunction () {\n  function PaletteMixin() {}\n\n  PaletteMixin.prototype.getColorFromPalette = function (name, scope, requestNum) {\n    var defaultPalette = normalizeToArray(this.get('color', true));\n    var layeredPalette = this.get('colorLayer', true);\n    return getFromPalette(this, innerColor, defaultPalette, layeredPalette, name, scope, requestNum);\n  };\n\n  PaletteMixin.prototype.clearColorPalette = function () {\n    clearPalette(this, innerColor);\n  };\n\n  return PaletteMixin;\n}();\n\nexport function getDecalFromPalette(ecModel, name, scope, requestNum) {\n  var defaultDecals = normalizeToArray(ecModel.get(['aria', 'decal', 'decals']));\n  return getFromPalette(ecModel, innerDecal, defaultDecals, null, name, scope, requestNum);\n}\n\nfunction getNearestPalette(palettes, requestColorNum) {\n  var paletteNum = palettes.length; // TODO palettes must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (palettes[i].length > requestColorNum) {\n      return palettes[i];\n    }\n  }\n\n  return palettes[paletteNum - 1];\n}\n/**\n * @param name MUST NOT be null/undefined. Otherwise call this function\n *             twise with the same parameters will get different result.\n * @param scope default this.\n * @return Can be null/undefined\n */\n\n\nfunction getFromPalette(that, inner, defaultPalette, layeredPalette, name, scope, requestNum) {\n  scope = scope || that;\n  var scopeFields = inner(scope);\n  var paletteIdx = scopeFields.paletteIdx || 0;\n  var paletteNameMap = scopeFields.paletteNameMap = scopeFields.paletteNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n  if (paletteNameMap.hasOwnProperty(name)) {\n    return paletteNameMap[name];\n  }\n\n  var palette = requestNum == null || !layeredPalette ? defaultPalette : getNearestPalette(layeredPalette, requestNum); // In case can't find in layered color palette.\n\n  palette = palette || defaultPalette;\n\n  if (!palette || !palette.length) {\n    return;\n  }\n\n  var pickedPaletteItem = palette[paletteIdx];\n\n  if (name) {\n    paletteNameMap[name] = pickedPaletteItem;\n  }\n\n  scopeFields.paletteIdx = (paletteIdx + 1) % palette.length;\n  return pickedPaletteItem;\n}\n\nfunction clearPalette(that, inner) {\n  inner(that).paletteIdx = 0;\n  inner(that).paletteNameMap = {};\n}\n\nexport { PaletteMixin };","map":{"version":3,"names":["makeInner","normalizeToArray","innerColor","innerDecal","PaletteMixin","prototype","getColorFromPalette","name","scope","requestNum","defaultPalette","get","layeredPalette","getFromPalette","clearColorPalette","clearPalette","getDecalFromPalette","ecModel","defaultDecals","getNearestPalette","palettes","requestColorNum","paletteNum","length","i","that","inner","scopeFields","paletteIdx","paletteNameMap","hasOwnProperty","palette","pickedPaletteItem"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/model/mixin/palette.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner, normalizeToArray } from '../../util/model.js';\nvar innerColor = makeInner();\nvar innerDecal = makeInner();\n\nvar PaletteMixin =\n/** @class */\nfunction () {\n  function PaletteMixin() {}\n\n  PaletteMixin.prototype.getColorFromPalette = function (name, scope, requestNum) {\n    var defaultPalette = normalizeToArray(this.get('color', true));\n    var layeredPalette = this.get('colorLayer', true);\n    return getFromPalette(this, innerColor, defaultPalette, layeredPalette, name, scope, requestNum);\n  };\n\n  PaletteMixin.prototype.clearColorPalette = function () {\n    clearPalette(this, innerColor);\n  };\n\n  return PaletteMixin;\n}();\n\nexport function getDecalFromPalette(ecModel, name, scope, requestNum) {\n  var defaultDecals = normalizeToArray(ecModel.get(['aria', 'decal', 'decals']));\n  return getFromPalette(ecModel, innerDecal, defaultDecals, null, name, scope, requestNum);\n}\n\nfunction getNearestPalette(palettes, requestColorNum) {\n  var paletteNum = palettes.length; // TODO palettes must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (palettes[i].length > requestColorNum) {\n      return palettes[i];\n    }\n  }\n\n  return palettes[paletteNum - 1];\n}\n/**\n * @param name MUST NOT be null/undefined. Otherwise call this function\n *             twise with the same parameters will get different result.\n * @param scope default this.\n * @return Can be null/undefined\n */\n\n\nfunction getFromPalette(that, inner, defaultPalette, layeredPalette, name, scope, requestNum) {\n  scope = scope || that;\n  var scopeFields = inner(scope);\n  var paletteIdx = scopeFields.paletteIdx || 0;\n  var paletteNameMap = scopeFields.paletteNameMap = scopeFields.paletteNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n  if (paletteNameMap.hasOwnProperty(name)) {\n    return paletteNameMap[name];\n  }\n\n  var palette = requestNum == null || !layeredPalette ? defaultPalette : getNearestPalette(layeredPalette, requestNum); // In case can't find in layered color palette.\n\n  palette = palette || defaultPalette;\n\n  if (!palette || !palette.length) {\n    return;\n  }\n\n  var pickedPaletteItem = palette[paletteIdx];\n\n  if (name) {\n    paletteNameMap[name] = pickedPaletteItem;\n  }\n\n  scopeFields.paletteIdx = (paletteIdx + 1) % palette.length;\n  return pickedPaletteItem;\n}\n\nfunction clearPalette(that, inner) {\n  inner(that).paletteIdx = 0;\n  inner(that).paletteNameMap = {};\n}\n\nexport { PaletteMixin };"],"mappings":"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"},"metadata":{},"sourceType":"module"}