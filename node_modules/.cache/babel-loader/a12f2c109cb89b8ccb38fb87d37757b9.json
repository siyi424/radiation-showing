{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { getPrecision, round, nice, quantityExponent } from '../util/number.js';\nexport function isValueNice(val) {\n  var exp10 = Math.pow(10, quantityExponent(Math.abs(val)));\n  var f = Math.abs(val / exp10);\n  return f === 0 || f === 1 || f === 2 || f === 3 || f === 5;\n}\nexport function isIntervalOrLogScale(scale) {\n  return scale.type === 'interval' || scale.type === 'log';\n}\n/**\n * @param extent Both extent[0] and extent[1] should be valid number.\n *               Should be extent[0] < extent[1].\n * @param splitNumber splitNumber should be >= 1.\n */\n\nexport function intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [round(Math.ceil(extent[0] / interval) * interval, precision), round(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\nexport function increaseInterval(interval) {\n  var exp10 = Math.pow(10, quantityExponent(interval)); // Increase interval\n\n  var f = interval / exp10;\n\n  if (!f) {\n    f = 1;\n  } else if (f === 2) {\n    f = 3;\n  } else if (f === 3) {\n    f = 5;\n  } else {\n    // f is 1 or 5\n    f *= 2;\n  }\n\n  return round(f * exp10);\n}\n/**\n * @return interval precision\n */\n\nexport function getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return getPrecision(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nexport function fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\nexport function contain(val, extent) {\n  return val >= extent[0] && val <= extent[1];\n}\nexport function normalize(val, extent) {\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n}\nexport function scale(val, extent) {\n  return val * (extent[1] - extent[0]) + extent[0];\n}","map":{"version":3,"names":["getPrecision","round","nice","quantityExponent","isValueNice","val","exp10","Math","pow","abs","f","isIntervalOrLogScale","scale","type","intervalScaleNiceTicks","extent","splitNumber","minInterval","maxInterval","result","span","interval","precision","intervalPrecision","getIntervalPrecision","niceTickExtent","ceil","floor","fixExtent","increaseInterval","clamp","idx","max","min","isFinite","contain","normalize"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/scale/helper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { getPrecision, round, nice, quantityExponent } from '../util/number.js';\nexport function isValueNice(val) {\n  var exp10 = Math.pow(10, quantityExponent(Math.abs(val)));\n  var f = Math.abs(val / exp10);\n  return f === 0 || f === 1 || f === 2 || f === 3 || f === 5;\n}\nexport function isIntervalOrLogScale(scale) {\n  return scale.type === 'interval' || scale.type === 'log';\n}\n/**\n * @param extent Both extent[0] and extent[1] should be valid number.\n *               Should be extent[0] < extent[1].\n * @param splitNumber splitNumber should be >= 1.\n */\n\nexport function intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [round(Math.ceil(extent[0] / interval) * interval, precision), round(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\nexport function increaseInterval(interval) {\n  var exp10 = Math.pow(10, quantityExponent(interval)); // Increase interval\n\n  var f = interval / exp10;\n\n  if (!f) {\n    f = 1;\n  } else if (f === 2) {\n    f = 3;\n  } else if (f === 3) {\n    f = 5;\n  } else {\n    // f is 1 or 5\n    f *= 2;\n  }\n\n  return round(f * exp10);\n}\n/**\n * @return interval precision\n */\n\nexport function getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return getPrecision(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nexport function fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\nexport function contain(val, extent) {\n  return val >= extent[0] && val <= extent[1];\n}\nexport function normalize(val, extent) {\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n}\nexport function scale(val, extent) {\n  return val * (extent[1] - extent[0]) + extent[0];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}