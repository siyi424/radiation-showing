{"ast":null,"code":"import * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\nimport { onMounted } from 'vue';\nexport default {\n  props: ['dataset'],\n\n  setup() {\n    onMounted(() => {\n      let chartDom = document.getElementById('main');\n      let myChart = echarts.init(chartDom);\n      let option = null;\n      let base = +new Date(2014, 9, 3);\n      let oneDay = 24 * 3600 * 1000;\n      let date = [];\n      let data = [Math.random() * 150];\n      let now = new Date(base);\n\n      function addData(shift) {\n        now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n        date.push(now);\n        data.push((Math.random() - 0.4) * 10 + data[data.length - 1]);\n\n        if (shift) {\n          date.shift();\n          data.shift();\n        }\n\n        now = new Date(+new Date(now) + oneDay);\n      }\n\n      for (let i = 1; i < 100; i++) {\n        addData();\n      }\n\n      option = {\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: date\n        },\n        yAxis: {\n          boundaryGap: [0, '50%'],\n          type: 'value'\n        },\n        series: [{\n          name: '成交',\n          type: 'line',\n          smooth: true,\n          symbol: 'none',\n          stack: 'a',\n          areaStyle: {\n            normal: {}\n          },\n          data: data\n        }]\n      };\n      setInterval(function () {\n        addData(true);\n        myChart.setOption({\n          xAxis: {\n            data: date\n          },\n          series: [{\n            name: '成交',\n            data: data\n          }]\n        });\n      }, 500);\n      option && myChart.setOption(option);\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    });\n  },\n\n  components: {},\n\n  mounted() {}\n\n};","map":{"version":3,"mappings":"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","names":["echarts","GridComponent","LineChart","UniversalTransition","CanvasRenderer","use","onMounted","props","setup","chartDom","document","getElementById","myChart","init","option","base","Date","oneDay","date","data","Math","random","now","addData","shift","getFullYear","getMonth","getDate","join","push","length","i","xAxis","type","boundaryGap","yAxis","series","name","smooth","symbol","stack","areaStyle","normal","setInterval","setOption","window","onresize","resize","components","mounted"],"sourceRoot":"","sources":["/home/siyi/Projects/radi-demo/radi-showing/src/components/ChartRadi.vue"],"sourcesContent":["<template>\n  <div id=\"main\" style=\"width: 100%; height: 600px;\"></div>\n</template>\n\n\n<script>\nimport * as echarts from 'echarts/core';\nimport { GridComponent } from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\n\n\necharts.use([GridComponent, LineChart, CanvasRenderer, UniversalTransition]);\n\n\nimport {onMounted} from 'vue';\n\nexport default {\n    props: ['dataset'],\n\n    setup() {\n        onMounted(() => {\n            let chartDom = document.getElementById('main');\n            let myChart = echarts.init(chartDom);\n            let option = null;\n\n            let base = +new Date(2014, 9, 3);\n            let oneDay = 24 * 3600 * 1000;\n            let date = [];\n            let data = [Math.random() * 150];\n            let now = new Date(base);\n\n\n            function addData(shift) {\n            now = [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/');\n            date.push(now);\n            data.push((Math.random() - 0.4) * 10 + data[data.length - 1]);\n            if (shift) {\n                date.shift();\n                data.shift();\n            }\n            now = new Date(+new Date(now) + oneDay);\n            }\n            for (let i = 1; i < 100; i++) {\n            addData();\n            }\n            option = {\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: date\n            },\n            yAxis: {\n                boundaryGap: [0, '50%'],\n                type: 'value'\n            },\n            series: [\n                {\n                name: '成交',\n                type: 'line',\n                smooth: true,\n                symbol: 'none',\n                stack: 'a',\n                areaStyle: {\n                    normal: {}\n                },\n                data: data\n                }\n            ]\n            };\n            setInterval(function () {\n            addData(true);\n            myChart.setOption({\n                xAxis: {\n                data: date\n                },\n                series: [\n                {\n                    name: '成交',\n                    data: data\n                }\n                ]\n            });\n            }, 500);\n\n            option && myChart.setOption(option);\n\n\n            window.onresize = function() {\n                myChart.resize();\n            };\n\n        })\n    },\n\n    components: {},\n    mounted() {},\n\n    \n}\n</script>\n\n"]},"metadata":{},"sourceType":"module"}