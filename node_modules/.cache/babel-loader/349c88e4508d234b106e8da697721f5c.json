{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isFunction, isString } from 'zrender/lib/core/util.js';\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame) {\n  return Math.round(frame.length / 2);\n};\n\nexport default function dataSample(seriesType) {\n  return {\n    seriesType: seriesType,\n    // FIXME:TS never used, so comment it\n    // modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem;\n      var count = data.count(); // Only cartesian2d support down sampling. Disable it when there is few data.\n\n      if (count > 10 && coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent();\n        var dpr = api.getDevicePixelRatio(); // Coordinste system has been resized\n\n        var size = Math.abs(extent[1] - extent[0]) * (dpr || 1);\n        var rate = Math.round(count / size);\n\n        if (isFinite(rate) && rate > 1) {\n          if (sampling === 'lttb') {\n            seriesModel.setData(data.lttbDownSample(data.mapDimension(valueAxis.dim), 1 / rate));\n          }\n\n          var sampler = void 0;\n\n          if (isString(sampling)) {\n            sampler = samplers[sampling];\n          } else if (isFunction(sampling)) {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}","map":{"version":3,"names":["isFunction","isString","samplers","average","frame","sum","count","i","length","isNaN","NaN","max","Infinity","isFinite","min","nearest","indexSampler","Math","round","dataSample","seriesType","reset","seriesModel","ecModel","api","data","getData","sampling","get","coordSys","coordinateSystem","type","baseAxis","getBaseAxis","valueAxis","getOtherAxis","extent","getExtent","dpr","getDevicePixelRatio","size","abs","rate","setData","lttbDownSample","mapDimension","dim","sampler","downSample"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/processor/dataSample.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isFunction, isString } from 'zrender/lib/core/util.js';\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame) {\n  return Math.round(frame.length / 2);\n};\n\nexport default function dataSample(seriesType) {\n  return {\n    seriesType: seriesType,\n    // FIXME:TS never used, so comment it\n    // modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem;\n      var count = data.count(); // Only cartesian2d support down sampling. Disable it when there is few data.\n\n      if (count > 10 && coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent();\n        var dpr = api.getDevicePixelRatio(); // Coordinste system has been resized\n\n        var size = Math.abs(extent[1] - extent[0]) * (dpr || 1);\n        var rate = Math.round(count / size);\n\n        if (isFinite(rate) && rate > 1) {\n          if (sampling === 'lttb') {\n            seriesModel.setData(data.lttbDownSample(data.mapDimension(valueAxis.dim), 1 / rate));\n          }\n\n          var sampler = void 0;\n\n          if (isString(sampling)) {\n            sampler = samplers[sampling];\n          } else if (isFunction(sampling)) {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}