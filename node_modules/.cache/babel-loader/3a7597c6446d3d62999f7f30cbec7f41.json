{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as util from '../core/util.js';\nimport { devicePixelRatio } from '../config.js';\nimport Eventful from '../core/Eventful.js';\nimport { getCanvasGradient } from './helper.js';\nimport { createCanvasPattern } from './graphic.js';\nimport BoundingRect from '../core/BoundingRect.js';\nimport { REDRAW_BIT } from '../graphic/constants.js';\nimport { platformApi } from '../core/platform.js';\n\nfunction createDom(id, painter, dpr) {\n  var newDom = platformApi.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style;\n\n  if (newDomStyle) {\n    newDomStyle.position = 'absolute';\n    newDomStyle.left = '0';\n    newDomStyle.top = '0';\n    newDomStyle.width = width + 'px';\n    newDomStyle.height = height + 'px';\n    newDom.setAttribute('data-zr-dom-id', id);\n  }\n\n  newDom.width = width * dpr;\n  newDom.height = height * dpr;\n  return newDom;\n}\n\n;\n\nvar Layer = function (_super) {\n  __extends(Layer, _super);\n\n  function Layer(id, painter, dpr) {\n    var _this = _super.call(this) || this;\n\n    _this.motionBlur = false;\n    _this.lastFrameAlpha = 0.7;\n    _this.dpr = 1;\n    _this.virtual = false;\n    _this.config = {};\n    _this.incremental = false;\n    _this.zlevel = 0;\n    _this.maxRepaintRectCount = 5;\n    _this.__dirty = true;\n    _this.__firstTimePaint = true;\n    _this.__used = false;\n    _this.__drawIndex = 0;\n    _this.__startIndex = 0;\n    _this.__endIndex = 0;\n    _this.__prevStartIndex = null;\n    _this.__prevEndIndex = null;\n    var dom;\n    dpr = dpr || devicePixelRatio;\n\n    if (typeof id === 'string') {\n      dom = createDom(id, painter, dpr);\n    } else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n    _this.id = id;\n    _this.dom = dom;\n    var domStyle = dom.style;\n\n    if (domStyle) {\n      util.disableUserSelect(dom);\n\n      dom.onselectstart = function () {\n        return false;\n      };\n\n      domStyle.padding = '0';\n      domStyle.margin = '0';\n      domStyle.borderWidth = '0';\n    }\n\n    _this.painter = painter;\n    _this.dpr = dpr;\n    return _this;\n  }\n\n  Layer.prototype.getElementCount = function () {\n    return this.__endIndex - this.__startIndex;\n  };\n\n  Layer.prototype.afterBrush = function () {\n    this.__prevStartIndex = this.__startIndex;\n    this.__prevEndIndex = this.__endIndex;\n  };\n\n  Layer.prototype.initContext = function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.dpr = this.dpr;\n  };\n\n  Layer.prototype.setUnpainted = function () {\n    this.__firstTimePaint = true;\n  };\n\n  Layer.prototype.createBackBuffer = function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n\n    if (dpr !== 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  };\n\n  Layer.prototype.createRepaintRects = function (displayList, prevList, viewWidth, viewHeight) {\n    if (this.__firstTimePaint) {\n      this.__firstTimePaint = false;\n      return null;\n    }\n\n    var mergedRepaintRects = [];\n    var maxRepaintRectCount = this.maxRepaintRectCount;\n    var full = false;\n    var pendingRect = new BoundingRect(0, 0, 0, 0);\n\n    function addRectToMergePool(rect) {\n      if (!rect.isFinite() || rect.isZero()) {\n        return;\n      }\n\n      if (mergedRepaintRects.length === 0) {\n        var boundingRect = new BoundingRect(0, 0, 0, 0);\n        boundingRect.copy(rect);\n        mergedRepaintRects.push(boundingRect);\n      } else {\n        var isMerged = false;\n        var minDeltaArea = Infinity;\n        var bestRectToMergeIdx = 0;\n\n        for (var i = 0; i < mergedRepaintRects.length; ++i) {\n          var mergedRect = mergedRepaintRects[i];\n\n          if (mergedRect.intersect(rect)) {\n            var pendingRect_1 = new BoundingRect(0, 0, 0, 0);\n            pendingRect_1.copy(mergedRect);\n            pendingRect_1.union(rect);\n            mergedRepaintRects[i] = pendingRect_1;\n            isMerged = true;\n            break;\n          } else if (full) {\n            pendingRect.copy(rect);\n            pendingRect.union(mergedRect);\n            var aArea = rect.width * rect.height;\n            var bArea = mergedRect.width * mergedRect.height;\n            var pendingArea = pendingRect.width * pendingRect.height;\n            var deltaArea = pendingArea - aArea - bArea;\n\n            if (deltaArea < minDeltaArea) {\n              minDeltaArea = deltaArea;\n              bestRectToMergeIdx = i;\n            }\n          }\n        }\n\n        if (full) {\n          mergedRepaintRects[bestRectToMergeIdx].union(rect);\n          isMerged = true;\n        }\n\n        if (!isMerged) {\n          var boundingRect = new BoundingRect(0, 0, 0, 0);\n          boundingRect.copy(rect);\n          mergedRepaintRects.push(boundingRect);\n        }\n\n        if (!full) {\n          full = mergedRepaintRects.length >= maxRepaintRectCount;\n        }\n      }\n    }\n\n    for (var i = this.__startIndex; i < this.__endIndex; ++i) {\n      var el = displayList[i];\n\n      if (el) {\n        var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n        var prevRect = el.__isRendered && (el.__dirty & REDRAW_BIT || !shouldPaint) ? el.getPrevPaintRect() : null;\n\n        if (prevRect) {\n          addRectToMergePool(prevRect);\n        }\n\n        var curRect = shouldPaint && (el.__dirty & REDRAW_BIT || !el.__isRendered) ? el.getPaintRect() : null;\n\n        if (curRect) {\n          addRectToMergePool(curRect);\n        }\n      }\n    }\n\n    for (var i = this.__prevStartIndex; i < this.__prevEndIndex; ++i) {\n      var el = prevList[i];\n      var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n\n      if (el && (!shouldPaint || !el.__zr) && el.__isRendered) {\n        var prevRect = el.getPrevPaintRect();\n\n        if (prevRect) {\n          addRectToMergePool(prevRect);\n        }\n      }\n    }\n\n    var hasIntersections;\n\n    do {\n      hasIntersections = false;\n\n      for (var i = 0; i < mergedRepaintRects.length;) {\n        if (mergedRepaintRects[i].isZero()) {\n          mergedRepaintRects.splice(i, 1);\n          continue;\n        }\n\n        for (var j = i + 1; j < mergedRepaintRects.length;) {\n          if (mergedRepaintRects[i].intersect(mergedRepaintRects[j])) {\n            hasIntersections = true;\n            mergedRepaintRects[i].union(mergedRepaintRects[j]);\n            mergedRepaintRects.splice(j, 1);\n          } else {\n            j++;\n          }\n        }\n\n        i++;\n      }\n    } while (hasIntersections);\n\n    this._paintRects = mergedRepaintRects;\n    return mergedRepaintRects;\n  };\n\n  Layer.prototype.debugGetPaintRects = function () {\n    return (this._paintRects || []).slice();\n  };\n\n  Layer.prototype.resize = function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n\n    if (domStyle) {\n      domStyle.width = width + 'px';\n      domStyle.height = height + 'px';\n    }\n\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr !== 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  };\n\n  Layer.prototype.clear = function (clearAll, clearColor, repaintRects) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    clearColor = clearColor || this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n    var self = this;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    var domBack = this.domBack;\n\n    function doClear(x, y, width, height) {\n      ctx.clearRect(x, y, width, height);\n\n      if (clearColor && clearColor !== 'transparent') {\n        var clearColorGradientOrPattern = void 0;\n\n        if (util.isGradientObject(clearColor)) {\n          clearColorGradientOrPattern = clearColor.__canvasGradient || getCanvasGradient(ctx, clearColor, {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          });\n          clearColor.__canvasGradient = clearColorGradientOrPattern;\n        } else if (util.isImagePatternObject(clearColor)) {\n          clearColorGradientOrPattern = createCanvasPattern(ctx, clearColor, {\n            dirty: function () {\n              self.setUnpainted();\n\n              self.__painter.refresh();\n            }\n          });\n        }\n\n        ctx.save();\n        ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n        ctx.fillRect(x, y, width, height);\n        ctx.restore();\n      }\n\n      if (haveMotionBLur) {\n        ctx.save();\n        ctx.globalAlpha = lastFrameAlpha;\n        ctx.drawImage(domBack, x, y, width, height);\n        ctx.restore();\n      }\n    }\n\n    ;\n\n    if (!repaintRects || haveMotionBLur) {\n      doClear(0, 0, width, height);\n    } else if (repaintRects.length) {\n      util.each(repaintRects, function (rect) {\n        doClear(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n      });\n    }\n  };\n\n  return Layer;\n}(Eventful);\n\nexport default Layer;","map":{"version":3,"names":["__extends","util","devicePixelRatio","Eventful","getCanvasGradient","createCanvasPattern","BoundingRect","REDRAW_BIT","platformApi","createDom","id","painter","dpr","newDom","createCanvas","width","getWidth","height","getHeight","newDomStyle","style","position","left","top","setAttribute","Layer","_super","_this","call","motionBlur","lastFrameAlpha","virtual","config","incremental","zlevel","maxRepaintRectCount","__dirty","__firstTimePaint","__used","__drawIndex","__startIndex","__endIndex","__prevStartIndex","__prevEndIndex","dom","isObject","domStyle","disableUserSelect","onselectstart","padding","margin","borderWidth","prototype","getElementCount","afterBrush","initContext","ctx","getContext","setUnpainted","createBackBuffer","domBack","ctxBack","scale","createRepaintRects","displayList","prevList","viewWidth","viewHeight","mergedRepaintRects","full","pendingRect","addRectToMergePool","rect","isFinite","isZero","length","boundingRect","copy","push","isMerged","minDeltaArea","Infinity","bestRectToMergeIdx","i","mergedRect","intersect","pendingRect_1","union","aArea","bArea","pendingArea","deltaArea","el","shouldPaint","shouldBePainted","prevRect","__isRendered","getPrevPaintRect","curRect","getPaintRect","__zr","hasIntersections","splice","j","_paintRects","debugGetPaintRects","slice","resize","clear","clearAll","clearColor","repaintRects","haveMotionBLur","self","globalCompositeOperation","drawImage","doClear","x","y","clearRect","clearColorGradientOrPattern","isGradientObject","__canvasGradient","isImagePatternObject","dirty","__painter","refresh","save","fillStyle","fillRect","restore","globalAlpha","each"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/canvas/Layer.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport * as util from '../core/util.js';\nimport { devicePixelRatio } from '../config.js';\nimport Eventful from '../core/Eventful.js';\nimport { getCanvasGradient } from './helper.js';\nimport { createCanvasPattern } from './graphic.js';\nimport BoundingRect from '../core/BoundingRect.js';\nimport { REDRAW_BIT } from '../graphic/constants.js';\nimport { platformApi } from '../core/platform.js';\nfunction createDom(id, painter, dpr) {\n    var newDom = platformApi.createCanvas();\n    var width = painter.getWidth();\n    var height = painter.getHeight();\n    var newDomStyle = newDom.style;\n    if (newDomStyle) {\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = '0';\n        newDomStyle.top = '0';\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.setAttribute('data-zr-dom-id', id);\n    }\n    newDom.width = width * dpr;\n    newDom.height = height * dpr;\n    return newDom;\n}\n;\nvar Layer = (function (_super) {\n    __extends(Layer, _super);\n    function Layer(id, painter, dpr) {\n        var _this = _super.call(this) || this;\n        _this.motionBlur = false;\n        _this.lastFrameAlpha = 0.7;\n        _this.dpr = 1;\n        _this.virtual = false;\n        _this.config = {};\n        _this.incremental = false;\n        _this.zlevel = 0;\n        _this.maxRepaintRectCount = 5;\n        _this.__dirty = true;\n        _this.__firstTimePaint = true;\n        _this.__used = false;\n        _this.__drawIndex = 0;\n        _this.__startIndex = 0;\n        _this.__endIndex = 0;\n        _this.__prevStartIndex = null;\n        _this.__prevEndIndex = null;\n        var dom;\n        dpr = dpr || devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, painter, dpr);\n        }\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        _this.id = id;\n        _this.dom = dom;\n        var domStyle = dom.style;\n        if (domStyle) {\n            util.disableUserSelect(dom);\n            dom.onselectstart = function () { return false; };\n            domStyle.padding = '0';\n            domStyle.margin = '0';\n            domStyle.borderWidth = '0';\n        }\n        _this.painter = painter;\n        _this.dpr = dpr;\n        return _this;\n    }\n    Layer.prototype.getElementCount = function () {\n        return this.__endIndex - this.__startIndex;\n    };\n    Layer.prototype.afterBrush = function () {\n        this.__prevStartIndex = this.__startIndex;\n        this.__prevEndIndex = this.__endIndex;\n    };\n    Layer.prototype.initContext = function () {\n        this.ctx = this.dom.getContext('2d');\n        this.ctx.dpr = this.dpr;\n    };\n    Layer.prototype.setUnpainted = function () {\n        this.__firstTimePaint = true;\n    };\n    Layer.prototype.createBackBuffer = function () {\n        var dpr = this.dpr;\n        this.domBack = createDom('back-' + this.id, this.painter, dpr);\n        this.ctxBack = this.domBack.getContext('2d');\n        if (dpr !== 1) {\n            this.ctxBack.scale(dpr, dpr);\n        }\n    };\n    Layer.prototype.createRepaintRects = function (displayList, prevList, viewWidth, viewHeight) {\n        if (this.__firstTimePaint) {\n            this.__firstTimePaint = false;\n            return null;\n        }\n        var mergedRepaintRects = [];\n        var maxRepaintRectCount = this.maxRepaintRectCount;\n        var full = false;\n        var pendingRect = new BoundingRect(0, 0, 0, 0);\n        function addRectToMergePool(rect) {\n            if (!rect.isFinite() || rect.isZero()) {\n                return;\n            }\n            if (mergedRepaintRects.length === 0) {\n                var boundingRect = new BoundingRect(0, 0, 0, 0);\n                boundingRect.copy(rect);\n                mergedRepaintRects.push(boundingRect);\n            }\n            else {\n                var isMerged = false;\n                var minDeltaArea = Infinity;\n                var bestRectToMergeIdx = 0;\n                for (var i = 0; i < mergedRepaintRects.length; ++i) {\n                    var mergedRect = mergedRepaintRects[i];\n                    if (mergedRect.intersect(rect)) {\n                        var pendingRect_1 = new BoundingRect(0, 0, 0, 0);\n                        pendingRect_1.copy(mergedRect);\n                        pendingRect_1.union(rect);\n                        mergedRepaintRects[i] = pendingRect_1;\n                        isMerged = true;\n                        break;\n                    }\n                    else if (full) {\n                        pendingRect.copy(rect);\n                        pendingRect.union(mergedRect);\n                        var aArea = rect.width * rect.height;\n                        var bArea = mergedRect.width * mergedRect.height;\n                        var pendingArea = pendingRect.width * pendingRect.height;\n                        var deltaArea = pendingArea - aArea - bArea;\n                        if (deltaArea < minDeltaArea) {\n                            minDeltaArea = deltaArea;\n                            bestRectToMergeIdx = i;\n                        }\n                    }\n                }\n                if (full) {\n                    mergedRepaintRects[bestRectToMergeIdx].union(rect);\n                    isMerged = true;\n                }\n                if (!isMerged) {\n                    var boundingRect = new BoundingRect(0, 0, 0, 0);\n                    boundingRect.copy(rect);\n                    mergedRepaintRects.push(boundingRect);\n                }\n                if (!full) {\n                    full = mergedRepaintRects.length >= maxRepaintRectCount;\n                }\n            }\n        }\n        for (var i = this.__startIndex; i < this.__endIndex; ++i) {\n            var el = displayList[i];\n            if (el) {\n                var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n                var prevRect = el.__isRendered && ((el.__dirty & REDRAW_BIT) || !shouldPaint)\n                    ? el.getPrevPaintRect()\n                    : null;\n                if (prevRect) {\n                    addRectToMergePool(prevRect);\n                }\n                var curRect = shouldPaint && ((el.__dirty & REDRAW_BIT) || !el.__isRendered)\n                    ? el.getPaintRect()\n                    : null;\n                if (curRect) {\n                    addRectToMergePool(curRect);\n                }\n            }\n        }\n        for (var i = this.__prevStartIndex; i < this.__prevEndIndex; ++i) {\n            var el = prevList[i];\n            var shouldPaint = el.shouldBePainted(viewWidth, viewHeight, true, true);\n            if (el && (!shouldPaint || !el.__zr) && el.__isRendered) {\n                var prevRect = el.getPrevPaintRect();\n                if (prevRect) {\n                    addRectToMergePool(prevRect);\n                }\n            }\n        }\n        var hasIntersections;\n        do {\n            hasIntersections = false;\n            for (var i = 0; i < mergedRepaintRects.length;) {\n                if (mergedRepaintRects[i].isZero()) {\n                    mergedRepaintRects.splice(i, 1);\n                    continue;\n                }\n                for (var j = i + 1; j < mergedRepaintRects.length;) {\n                    if (mergedRepaintRects[i].intersect(mergedRepaintRects[j])) {\n                        hasIntersections = true;\n                        mergedRepaintRects[i].union(mergedRepaintRects[j]);\n                        mergedRepaintRects.splice(j, 1);\n                    }\n                    else {\n                        j++;\n                    }\n                }\n                i++;\n            }\n        } while (hasIntersections);\n        this._paintRects = mergedRepaintRects;\n        return mergedRepaintRects;\n    };\n    Layer.prototype.debugGetPaintRects = function () {\n        return (this._paintRects || []).slice();\n    };\n    Layer.prototype.resize = function (width, height) {\n        var dpr = this.dpr;\n        var dom = this.dom;\n        var domStyle = dom.style;\n        var domBack = this.domBack;\n        if (domStyle) {\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n        }\n        dom.width = width * dpr;\n        dom.height = height * dpr;\n        if (domBack) {\n            domBack.width = width * dpr;\n            domBack.height = height * dpr;\n            if (dpr !== 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        }\n    };\n    Layer.prototype.clear = function (clearAll, clearColor, repaintRects) {\n        var dom = this.dom;\n        var ctx = this.ctx;\n        var width = dom.width;\n        var height = dom.height;\n        clearColor = clearColor || this.clearColor;\n        var haveMotionBLur = this.motionBlur && !clearAll;\n        var lastFrameAlpha = this.lastFrameAlpha;\n        var dpr = this.dpr;\n        var self = this;\n        if (haveMotionBLur) {\n            if (!this.domBack) {\n                this.createBackBuffer();\n            }\n            this.ctxBack.globalCompositeOperation = 'copy';\n            this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n        }\n        var domBack = this.domBack;\n        function doClear(x, y, width, height) {\n            ctx.clearRect(x, y, width, height);\n            if (clearColor && clearColor !== 'transparent') {\n                var clearColorGradientOrPattern = void 0;\n                if (util.isGradientObject(clearColor)) {\n                    clearColorGradientOrPattern = clearColor.__canvasGradient\n                        || getCanvasGradient(ctx, clearColor, {\n                            x: 0,\n                            y: 0,\n                            width: width,\n                            height: height\n                        });\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                else if (util.isImagePatternObject(clearColor)) {\n                    clearColorGradientOrPattern = createCanvasPattern(ctx, clearColor, {\n                        dirty: function () {\n                            self.setUnpainted();\n                            self.__painter.refresh();\n                        }\n                    });\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(x, y, width, height);\n                ctx.restore();\n            }\n            if (haveMotionBLur) {\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, x, y, width, height);\n                ctx.restore();\n            }\n        }\n        ;\n        if (!repaintRects || haveMotionBLur) {\n            doClear(0, 0, width, height);\n        }\n        else if (repaintRects.length) {\n            util.each(repaintRects, function (rect) {\n                doClear(rect.x * dpr, rect.y * dpr, rect.width * dpr, rect.height * dpr);\n            });\n        }\n    };\n    return Layer;\n}(Eventful));\nexport default Layer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}