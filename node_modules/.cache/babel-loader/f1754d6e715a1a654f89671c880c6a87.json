{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as pathTool from 'zrender/lib/tool/path.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as vector from 'zrender/lib/core/vector.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Transformable from 'zrender/lib/core/Transformable.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport ZRText from 'zrender/lib/graphic/Text.js';\nimport Circle from 'zrender/lib/graphic/shape/Circle.js';\nimport Ellipse from 'zrender/lib/graphic/shape/Ellipse.js';\nimport Sector from 'zrender/lib/graphic/shape/Sector.js';\nimport Ring from 'zrender/lib/graphic/shape/Ring.js';\nimport Polygon from 'zrender/lib/graphic/shape/Polygon.js';\nimport Polyline from 'zrender/lib/graphic/shape/Polyline.js';\nimport Rect from 'zrender/lib/graphic/shape/Rect.js';\nimport Line from 'zrender/lib/graphic/shape/Line.js';\nimport BezierCurve from 'zrender/lib/graphic/shape/BezierCurve.js';\nimport Arc from 'zrender/lib/graphic/shape/Arc.js';\nimport CompoundPath from 'zrender/lib/graphic/CompoundPath.js';\nimport LinearGradient from 'zrender/lib/graphic/LinearGradient.js';\nimport RadialGradient from 'zrender/lib/graphic/RadialGradient.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport OrientedBoundingRect from 'zrender/lib/core/OrientedBoundingRect.js';\nimport Point from 'zrender/lib/core/Point.js';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable.js';\nimport * as subPixelOptimizeUtil from 'zrender/lib/graphic/helper/subPixelOptimize.js';\nimport { extend, isArrayLike, map, defaults, isString, keys, each, hasOwn, isArray } from 'zrender/lib/core/util.js';\nimport { getECData } from './innerStore.js';\nimport { updateProps, initProps, removeElement, removeElementWithFadeOut, isElementRemoved } from '../animation/basicTrasition.js';\n/**\n * @deprecated export for compatitable reason\n */\n\nexport { updateProps, initProps, removeElement, removeElementWithFadeOut, isElementRemoved };\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar _customShapeMap = {};\n/**\n * Extend shape with parameters\n */\n\nexport function extendShape(opts) {\n  return Path.extend(opts);\n}\nvar extendPathFromString = pathTool.extendFromString;\n/**\n * Extend path\n */\n\nexport function extendPath(pathData, opts) {\n  return extendPathFromString(pathData, opts);\n}\n/**\n * Register a user defined shape.\n * The shape class can be fetched by `getShapeClass`\n * This method will overwrite the registered shapes, including\n * the registered built-in shapes, if using the same `name`.\n * The shape can be used in `custom series` and\n * `graphic component` by declaring `{type: name}`.\n *\n * @param name\n * @param ShapeClass Can be generated by `extendShape`.\n */\n\nexport function registerShape(name, ShapeClass) {\n  _customShapeMap[name] = ShapeClass;\n}\n/**\n * Find shape class registered by `registerShape`. Usually used in\n * fetching user defined shape.\n *\n * [Caution]:\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\n * to use user registered shapes.\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\n * `registerShape` by default. That enables users to get both built-in\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\n * the built-in shapes by using names like 'circle', 'rect' via calling\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\n * in case that it is overwritten by users, except that some features, like\n * `custom series`, `graphic component`, do it deliberately.\n *\n * (2) In the features like `custom series`, `graphic component`, the user input\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\n * are reserved names, that is, if some user register a shape named `'image'`,\n * the shape will not be used. If we intending to add some more reserved names\n * in feature, that might bring break changes (disable some existing user shape\n * names). But that case probably rearly happen. So we dont make more mechanism\n * to resolve this issue here.\n *\n * @param name\n * @return The shape class. If not found, return nothing.\n */\n\nexport function getShapeClass(name) {\n  if (_customShapeMap.hasOwnProperty(name)) {\n    return _customShapeMap[name];\n  }\n}\n/**\n * Create a path element from path data string\n * @param pathData\n * @param opts\n * @param rect\n * @param layout 'center' or 'cover' default to be cover\n */\n\nexport function makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param imageUrl image url\n * @param opts options\n * @param rect constrain rect\n * @param layout 'center' or 'cover'. Default to be 'cover'\n */\n\nexport function makeImage(imageUrl, rect, layout) {\n  var zrImg = new ZRImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        zrImg.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return zrImg;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  rect         element local bounding box\n * @param  boundingRect constraint bounding box\n * @return element position containing x, y, width, and height\n */\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nexport var mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param path\n * @param rect\n */\n\nexport function resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n */\n\nexport function subPixelOptimizeLine(param) {\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n */\n\nexport function subPixelOptimizeRect(param) {\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param position Coordinate, such as x, y\n * @param lineWidth Should be nonnegative integer.\n * @param positiveOrNegative Default false (negative).\n * @return Optimized position.\n */\n\nexport var subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param target\n * @param [ancestor]\n */\n\nexport function getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param target [x, y]\n * @param transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param invert Whether use invert matrix.\n * @return [x, y]\n */\n\nexport function applyTransform(target, transform, invert) {\n  if (transform && !isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param direction 'left' 'right' 'top' 'bottom'\n * @param transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param invert Whether use invert matrix.\n * @return Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\nexport function transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n\nfunction isNotGroup(el) {\n  return !el.isGroup;\n}\n\nfunction isPath(el) {\n  return el.shape != null;\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nexport function groupTransition(g1, g2, animatableModel) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (isNotGroup(el) && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      x: el.x,\n      y: el.y,\n      rotation: el.rotation\n    };\n\n    if (isPath(el)) {\n      obj.shape = extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (isNotGroup(el) && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, getECData(el).dataIndex);\n      }\n    }\n  });\n}\nexport function clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * Return a new clipped rect. If rect size are negative, return undefined.\n */\n\nexport function clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\nexport function createIcon(iconStr, // Support 'image://' or 'path://' or direct svg path.\nopt, rect) {\n  var innerOpts = extend({\n    rectHover: true\n  }, opt);\n  var style = innerOpts.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), defaults(style, rect), new ZRImage(innerOpts)) : makePath(iconStr.replace('path://', ''), innerOpts, rect, 'center');\n  }\n}\n/**\n * Return `true` if the given line (line `a`) and the given polygon\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n */\n\nexport function linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n}\n/**\n * Return `true` if the given two lines (line `a` and line `b`)\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n */\n\nexport function lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\n  var mx = a2x - a1x;\n  var my = a2y - a1y;\n  var nx = b2x - b1x;\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\n\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\n\n  if (nearZero(nmCrossProduct)) {\n    return false;\n  } // `vec_m` and `vec_n` are intersect iff\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\n\n\n  var b1a1x = a1x - b1x;\n  var b1a1y = a1y - b1y;\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\n\n  if (q < 0 || q > 1) {\n    return false;\n  }\n\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\n\n  if (p < 0 || p > 1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Cross product of 2-dimension vector.\n */\n\nfunction crossProduct2d(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nexport function setTooltipConfig(opt) {\n  var itemTooltipOption = opt.itemTooltipOption;\n  var componentModel = opt.componentModel;\n  var itemName = opt.itemName;\n  var itemTooltipOptionObj = isString(itemTooltipOption) ? {\n    formatter: itemTooltipOption\n  } : itemTooltipOption;\n  var mainType = componentModel.mainType;\n  var componentIndex = componentModel.componentIndex;\n  var formatterParams = {\n    componentType: mainType,\n    name: itemName,\n    $vars: ['name']\n  };\n  formatterParams[mainType + 'Index'] = componentIndex;\n  var formatterParamsExtra = opt.formatterParamsExtra;\n\n  if (formatterParamsExtra) {\n    each(keys(formatterParamsExtra), function (key) {\n      if (!hasOwn(formatterParams, key)) {\n        formatterParams[key] = formatterParamsExtra[key];\n        formatterParams.$vars.push(key);\n      }\n    });\n  }\n\n  var ecData = getECData(opt.el);\n  ecData.componentMainType = mainType;\n  ecData.componentIndex = componentIndex;\n  ecData.tooltipConfig = {\n    name: itemName,\n    option: defaults({\n      content: itemName,\n      formatterParams: formatterParams\n    }, itemTooltipOptionObj)\n  };\n}\n\nfunction traverseElement(el, cb) {\n  var stopped; // TODO\n  // Polyfill for fixing zrender group traverse don't visit it's root issue.\n\n  if (el.isGroup) {\n    stopped = cb(el);\n  }\n\n  if (!stopped) {\n    el.traverse(cb);\n  }\n}\n\nexport function traverseElements(els, cb) {\n  if (els) {\n    if (isArray(els)) {\n      for (var i = 0; i < els.length; i++) {\n        traverseElement(els[i], cb);\n      }\n    } else {\n      traverseElement(els, cb);\n    }\n  }\n} // Register built-in shapes. These shapes might be overwirtten\n// by users, although we do not recommend that.\n\nregisterShape('circle', Circle);\nregisterShape('ellipse', Ellipse);\nregisterShape('sector', Sector);\nregisterShape('ring', Ring);\nregisterShape('polygon', Polygon);\nregisterShape('polyline', Polyline);\nregisterShape('rect', Rect);\nregisterShape('line', Line);\nregisterShape('bezierCurve', BezierCurve);\nregisterShape('arc', Arc);\nexport { Group, ZRImage as Image, ZRText as Text, Circle, Ellipse, Sector, Ring, Polygon, Polyline, Rect, Line, BezierCurve, Arc, IncrementalDisplayable, CompoundPath, LinearGradient, RadialGradient, BoundingRect, OrientedBoundingRect, Point, Path };","map":{"version":3,"names":["pathTool","matrix","vector","Path","Transformable","ZRImage","Group","ZRText","Circle","Ellipse","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","OrientedBoundingRect","Point","IncrementalDisplayable","subPixelOptimizeUtil","extend","isArrayLike","map","defaults","isString","keys","each","hasOwn","isArray","getECData","updateProps","initProps","removeElement","removeElementWithFadeOut","isElementRemoved","mathMax","Math","max","mathMin","min","_customShapeMap","extendShape","opts","extendPathFromString","extendFromString","extendPath","pathData","registerShape","name","ShapeClass","getShapeClass","hasOwnProperty","makePath","rect","layout","path","createFromString","centerGraphic","getBoundingRect","resizePath","makeImage","imageUrl","zrImg","style","image","x","y","width","height","onload","img","boundingRect","setStyle","aspect","cx","cy","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","shape","subPixelOptimizeRect","subPixelOptimize","getTransform","target","ancestor","mat","identity","mul","getLocalTransform","parent","transform","invert","transformDirection","direction","hBase","abs","vBase","vertex","isNotGroup","el","isGroup","isPath","groupTransition","g1","g2","animatableModel","getElMap","g","elMap","traverse","anid","getAnimatableProps","obj","rotation","elMap1","oldEl","newProp","attr","dataIndex","clipPointsByRect","points","point","clipRectByRect","targetRect","x2","y2","createIcon","iconStr","opt","innerOpts","rectHover","strokeNoScale","indexOf","slice","replace","linePolygonIntersect","a1x","a1y","a2x","a2y","i","p2","length","p","lineLineIntersect","b1x","b1y","b2x","b2y","mx","my","nx","ny","nmCrossProduct","crossProduct2d","nearZero","b1a1x","b1a1y","q","x1","y1","val","setTooltipConfig","itemTooltipOption","componentModel","itemName","itemTooltipOptionObj","formatter","mainType","componentIndex","formatterParams","componentType","$vars","formatterParamsExtra","key","push","ecData","componentMainType","tooltipConfig","option","content","traverseElement","cb","stopped","traverseElements","els","Image","Text"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/util/graphic.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as pathTool from 'zrender/lib/tool/path.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport * as vector from 'zrender/lib/core/vector.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Transformable from 'zrender/lib/core/Transformable.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport ZRText from 'zrender/lib/graphic/Text.js';\nimport Circle from 'zrender/lib/graphic/shape/Circle.js';\nimport Ellipse from 'zrender/lib/graphic/shape/Ellipse.js';\nimport Sector from 'zrender/lib/graphic/shape/Sector.js';\nimport Ring from 'zrender/lib/graphic/shape/Ring.js';\nimport Polygon from 'zrender/lib/graphic/shape/Polygon.js';\nimport Polyline from 'zrender/lib/graphic/shape/Polyline.js';\nimport Rect from 'zrender/lib/graphic/shape/Rect.js';\nimport Line from 'zrender/lib/graphic/shape/Line.js';\nimport BezierCurve from 'zrender/lib/graphic/shape/BezierCurve.js';\nimport Arc from 'zrender/lib/graphic/shape/Arc.js';\nimport CompoundPath from 'zrender/lib/graphic/CompoundPath.js';\nimport LinearGradient from 'zrender/lib/graphic/LinearGradient.js';\nimport RadialGradient from 'zrender/lib/graphic/RadialGradient.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport OrientedBoundingRect from 'zrender/lib/core/OrientedBoundingRect.js';\nimport Point from 'zrender/lib/core/Point.js';\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable.js';\nimport * as subPixelOptimizeUtil from 'zrender/lib/graphic/helper/subPixelOptimize.js';\nimport { extend, isArrayLike, map, defaults, isString, keys, each, hasOwn, isArray } from 'zrender/lib/core/util.js';\nimport { getECData } from './innerStore.js';\nimport { updateProps, initProps, removeElement, removeElementWithFadeOut, isElementRemoved } from '../animation/basicTrasition.js';\n/**\n * @deprecated export for compatitable reason\n */\n\nexport { updateProps, initProps, removeElement, removeElementWithFadeOut, isElementRemoved };\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar _customShapeMap = {};\n/**\n * Extend shape with parameters\n */\n\nexport function extendShape(opts) {\n  return Path.extend(opts);\n}\nvar extendPathFromString = pathTool.extendFromString;\n/**\n * Extend path\n */\n\nexport function extendPath(pathData, opts) {\n  return extendPathFromString(pathData, opts);\n}\n/**\n * Register a user defined shape.\n * The shape class can be fetched by `getShapeClass`\n * This method will overwrite the registered shapes, including\n * the registered built-in shapes, if using the same `name`.\n * The shape can be used in `custom series` and\n * `graphic component` by declaring `{type: name}`.\n *\n * @param name\n * @param ShapeClass Can be generated by `extendShape`.\n */\n\nexport function registerShape(name, ShapeClass) {\n  _customShapeMap[name] = ShapeClass;\n}\n/**\n * Find shape class registered by `registerShape`. Usually used in\n * fetching user defined shape.\n *\n * [Caution]:\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\n * to use user registered shapes.\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\n * `registerShape` by default. That enables users to get both built-in\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\n * the built-in shapes by using names like 'circle', 'rect' via calling\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\n * in case that it is overwritten by users, except that some features, like\n * `custom series`, `graphic component`, do it deliberately.\n *\n * (2) In the features like `custom series`, `graphic component`, the user input\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\n * are reserved names, that is, if some user register a shape named `'image'`,\n * the shape will not be used. If we intending to add some more reserved names\n * in feature, that might bring break changes (disable some existing user shape\n * names). But that case probably rearly happen. So we dont make more mechanism\n * to resolve this issue here.\n *\n * @param name\n * @return The shape class. If not found, return nothing.\n */\n\nexport function getShapeClass(name) {\n  if (_customShapeMap.hasOwnProperty(name)) {\n    return _customShapeMap[name];\n  }\n}\n/**\n * Create a path element from path data string\n * @param pathData\n * @param opts\n * @param rect\n * @param layout 'center' or 'cover' default to be cover\n */\n\nexport function makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param imageUrl image url\n * @param opts options\n * @param rect constrain rect\n * @param layout 'center' or 'cover'. Default to be 'cover'\n */\n\nexport function makeImage(imageUrl, rect, layout) {\n  var zrImg = new ZRImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        zrImg.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return zrImg;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  rect         element local bounding box\n * @param  boundingRect constraint bounding box\n * @return element position containing x, y, width, and height\n */\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nexport var mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param path\n * @param rect\n */\n\nexport function resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n */\n\nexport function subPixelOptimizeLine(param) {\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n */\n\nexport function subPixelOptimizeRect(param) {\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param position Coordinate, such as x, y\n * @param lineWidth Should be nonnegative integer.\n * @param positiveOrNegative Default false (negative).\n * @return Optimized position.\n */\n\nexport var subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param target\n * @param [ancestor]\n */\n\nexport function getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param target [x, y]\n * @param transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param invert Whether use invert matrix.\n * @return [x, y]\n */\n\nexport function applyTransform(target, transform, invert) {\n  if (transform && !isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param direction 'left' 'right' 'top' 'bottom'\n * @param transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param invert Whether use invert matrix.\n * @return Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\nexport function transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n\nfunction isNotGroup(el) {\n  return !el.isGroup;\n}\n\nfunction isPath(el) {\n  return el.shape != null;\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nexport function groupTransition(g1, g2, animatableModel) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (isNotGroup(el) && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      x: el.x,\n      y: el.y,\n      rotation: el.rotation\n    };\n\n    if (isPath(el)) {\n      obj.shape = extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (isNotGroup(el) && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, getECData(el).dataIndex);\n      }\n    }\n  });\n}\nexport function clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * Return a new clipped rect. If rect size are negative, return undefined.\n */\n\nexport function clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\nexport function createIcon(iconStr, // Support 'image://' or 'path://' or direct svg path.\nopt, rect) {\n  var innerOpts = extend({\n    rectHover: true\n  }, opt);\n  var style = innerOpts.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), defaults(style, rect), new ZRImage(innerOpts)) : makePath(iconStr.replace('path://', ''), innerOpts, rect, 'center');\n  }\n}\n/**\n * Return `true` if the given line (line `a`) and the given polygon\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n */\n\nexport function linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n}\n/**\n * Return `true` if the given two lines (line `a` and line `b`)\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n */\n\nexport function lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\n  var mx = a2x - a1x;\n  var my = a2y - a1y;\n  var nx = b2x - b1x;\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\n\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\n\n  if (nearZero(nmCrossProduct)) {\n    return false;\n  } // `vec_m` and `vec_n` are intersect iff\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\n\n\n  var b1a1x = a1x - b1x;\n  var b1a1y = a1y - b1y;\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\n\n  if (q < 0 || q > 1) {\n    return false;\n  }\n\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\n\n  if (p < 0 || p > 1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Cross product of 2-dimension vector.\n */\n\nfunction crossProduct2d(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nexport function setTooltipConfig(opt) {\n  var itemTooltipOption = opt.itemTooltipOption;\n  var componentModel = opt.componentModel;\n  var itemName = opt.itemName;\n  var itemTooltipOptionObj = isString(itemTooltipOption) ? {\n    formatter: itemTooltipOption\n  } : itemTooltipOption;\n  var mainType = componentModel.mainType;\n  var componentIndex = componentModel.componentIndex;\n  var formatterParams = {\n    componentType: mainType,\n    name: itemName,\n    $vars: ['name']\n  };\n  formatterParams[mainType + 'Index'] = componentIndex;\n  var formatterParamsExtra = opt.formatterParamsExtra;\n\n  if (formatterParamsExtra) {\n    each(keys(formatterParamsExtra), function (key) {\n      if (!hasOwn(formatterParams, key)) {\n        formatterParams[key] = formatterParamsExtra[key];\n        formatterParams.$vars.push(key);\n      }\n    });\n  }\n\n  var ecData = getECData(opt.el);\n  ecData.componentMainType = mainType;\n  ecData.componentIndex = componentIndex;\n  ecData.tooltipConfig = {\n    name: itemName,\n    option: defaults({\n      content: itemName,\n      formatterParams: formatterParams\n    }, itemTooltipOptionObj)\n  };\n}\n\nfunction traverseElement(el, cb) {\n  var stopped; // TODO\n  // Polyfill for fixing zrender group traverse don't visit it's root issue.\n\n  if (el.isGroup) {\n    stopped = cb(el);\n  }\n\n  if (!stopped) {\n    el.traverse(cb);\n  }\n}\n\nexport function traverseElements(els, cb) {\n  if (els) {\n    if (isArray(els)) {\n      for (var i = 0; i < els.length; i++) {\n        traverseElement(els[i], cb);\n      }\n    } else {\n      traverseElement(els, cb);\n    }\n  }\n} // Register built-in shapes. These shapes might be overwirtten\n// by users, although we do not recommend that.\n\nregisterShape('circle', Circle);\nregisterShape('ellipse', Ellipse);\nregisterShape('sector', Sector);\nregisterShape('ring', Ring);\nregisterShape('polygon', Polygon);\nregisterShape('polyline', Polyline);\nregisterShape('rect', Rect);\nregisterShape('line', Line);\nregisterShape('bezierCurve', BezierCurve);\nregisterShape('arc', Arc);\nexport { Group, ZRImage as Image, ZRText as Text, Circle, Ellipse, Sector, Ring, Polygon, Polyline, Rect, Line, BezierCurve, Arc, IncrementalDisplayable, CompoundPath, LinearGradient, RadialGradient, BoundingRect, OrientedBoundingRect, Point, Path };"],"mappings":"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"},"metadata":{},"sourceType":"module"}