{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { getECData } from '../../util/innerStore.js';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._off = 0;\n    _this.hoverDataIdx = -1;\n    return _this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.reset = function () {\n    this.notClear = false;\n    this._off = 0;\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD;\n    var softClipShape = this.softClipShape;\n    var i; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n    var softClipShape = this.softClipShape;\n    var i;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  LargeSymbolPath.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      // Cache found data index.\n      var dataIdx = this.hoverDataIdx = this.findDataIndex(x, y);\n      return dataIdx >= 0;\n    }\n\n    this.hoverDataIdx = -1;\n    return false;\n  };\n\n  LargeSymbolPath.prototype.getBoundingRect = function () {\n    // Ignore stroke for large symbol draw.\n    var rect = this._rect;\n\n    if (!rect) {\n      var shape = this.shape;\n      var points = shape.points;\n      var size = shape.size;\n      var w = size[0];\n      var h = size[1];\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < points.length;) {\n        var x = points[i++];\n        var y = points[i++];\n        minX = Math.min(x, minX);\n        maxX = Math.max(x, maxX);\n        minY = Math.min(y, minY);\n        maxY = Math.max(y, maxY);\n      }\n\n      rect = this._rect = new graphic.BoundingRect(minX - w / 2, minY - h / 2, maxX - minX + w, maxY - minY + h);\n    }\n\n    return rect;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this._clear();\n\n    var symbolEl = this._create();\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, opt);\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points); // Reset draw cursor.\n\n      child.reset();\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var lastAdded = this._newAdded[0];\n    var points = data.getLayout('points');\n    var oldPoints = lastAdded && lastAdded.shape.points; // Merging the exists. Each element has 1e4 points.\n    // Consider the performance balance between too much elements and too much points in one shape(may affect hover optimization)\n\n    if (oldPoints && oldPoints.length < 2e4) {\n      var oldLen = oldPoints.length;\n      var newPoints = new Float32Array(oldLen + points.length); // Concat two array\n\n      newPoints.set(oldPoints);\n      newPoints.set(points, oldLen); // Update endIndex\n\n      lastAdded.endIndex = taskParams.end;\n      lastAdded.setShape({\n        points: newPoints\n      });\n    } else {\n      // Clear\n      this._newAdded = [];\n\n      var symbolEl = this._create();\n\n      symbolEl.startIndex = taskParams.start;\n      symbolEl.endIndex = taskParams.end;\n      symbolEl.incremental = true;\n      symbolEl.setShape({\n        points: points\n      });\n\n      this._setCommon(symbolEl, data, opt);\n    }\n  };\n\n  LargeSymbolDraw.prototype.eachRendered = function (cb) {\n    this._newAdded[0] && cb(this._newAdded[0]);\n  };\n\n  LargeSymbolDraw.prototype._create = function () {\n    var symbolEl = new LargeSymbolPath({\n      cursor: 'default'\n    });\n    this.group.add(symbolEl);\n\n    this._newAdded.push(symbolEl);\n\n    return symbolEl;\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    var ecData = getECData(symbolEl); // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n\n    ecData.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      ecData.dataIndex = null;\n      var dataIndex = symbolEl.hoverDataIdx;\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        ecData.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype._clear = function () {\n    this._newAdded = [];\n    this.group.removeAll();\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;","map":{"version":3,"names":["__extends","graphic","createSymbol","getECData","BOOST_SIZE_THRESHOLD","LargeSymbolPathShape","LargeSymbolPath","_super","opts","_this","call","_off","hoverDataIdx","prototype","getDefaultShape","reset","notClear","buildPath","path","shape","points","size","symbolProxy","symbolProxyShape","ctx","getContext","canBoost","softClipShape","i","_ctx","length","x","y","isNaN","contain","width","height","incremental","afterBrush","fillRect","findDataIndex","w","Math","max","h","idx","x0","y0","localPos","transformCoordToLocal","rect","getBoundingRect","dataIdx","_rect","minX","Infinity","minY","maxX","maxY","min","BoundingRect","Path","LargeSymbolDraw","group","Group","updateData","data","opt","_clear","symbolEl","_create","setShape","getLayout","_setCommon","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","incrementalUpdate","taskParams","lastAdded","_newAdded","oldPoints","oldLen","newPoints","set","end","start","eachRendered","cb","cursor","add","push","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","globalStyle","visualColor","fill","ecData","seriesIndex","on","e","dataIndex","remove","removeAll"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { getECData } from '../../util/innerStore.js';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._off = 0;\n    _this.hoverDataIdx = -1;\n    return _this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.reset = function () {\n    this.notClear = false;\n    this._off = 0;\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD;\n    var softClipShape = this.softClipShape;\n    var i; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n    var softClipShape = this.softClipShape;\n    var i;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  LargeSymbolPath.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      // Cache found data index.\n      var dataIdx = this.hoverDataIdx = this.findDataIndex(x, y);\n      return dataIdx >= 0;\n    }\n\n    this.hoverDataIdx = -1;\n    return false;\n  };\n\n  LargeSymbolPath.prototype.getBoundingRect = function () {\n    // Ignore stroke for large symbol draw.\n    var rect = this._rect;\n\n    if (!rect) {\n      var shape = this.shape;\n      var points = shape.points;\n      var size = shape.size;\n      var w = size[0];\n      var h = size[1];\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < points.length;) {\n        var x = points[i++];\n        var y = points[i++];\n        minX = Math.min(x, minX);\n        maxX = Math.max(x, maxX);\n        minY = Math.min(y, minY);\n        maxY = Math.max(y, maxY);\n      }\n\n      rect = this._rect = new graphic.BoundingRect(minX - w / 2, minY - h / 2, maxX - minX + w, maxY - minY + h);\n    }\n\n    return rect;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this._clear();\n\n    var symbolEl = this._create();\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, opt);\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points); // Reset draw cursor.\n\n      child.reset();\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var lastAdded = this._newAdded[0];\n    var points = data.getLayout('points');\n    var oldPoints = lastAdded && lastAdded.shape.points; // Merging the exists. Each element has 1e4 points.\n    // Consider the performance balance between too much elements and too much points in one shape(may affect hover optimization)\n\n    if (oldPoints && oldPoints.length < 2e4) {\n      var oldLen = oldPoints.length;\n      var newPoints = new Float32Array(oldLen + points.length); // Concat two array\n\n      newPoints.set(oldPoints);\n      newPoints.set(points, oldLen); // Update endIndex\n\n      lastAdded.endIndex = taskParams.end;\n      lastAdded.setShape({\n        points: newPoints\n      });\n    } else {\n      // Clear\n      this._newAdded = [];\n\n      var symbolEl = this._create();\n\n      symbolEl.startIndex = taskParams.start;\n      symbolEl.endIndex = taskParams.end;\n      symbolEl.incremental = true;\n      symbolEl.setShape({\n        points: points\n      });\n\n      this._setCommon(symbolEl, data, opt);\n    }\n  };\n\n  LargeSymbolDraw.prototype.eachRendered = function (cb) {\n    this._newAdded[0] && cb(this._newAdded[0]);\n  };\n\n  LargeSymbolDraw.prototype._create = function () {\n    var symbolEl = new LargeSymbolPath({\n      cursor: 'default'\n    });\n    this.group.add(symbolEl);\n\n    this._newAdded.push(symbolEl);\n\n    return symbolEl;\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    var ecData = getECData(symbolEl); // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n\n    ecData.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      ecData.dataIndex = null;\n      var dataIndex = symbolEl.hoverDataIdx;\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        ecData.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype._clear = function () {\n    this._newAdded = [];\n    this.group.removeAll();\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;"],"mappings":"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"},"metadata":{},"sourceType":"module"}