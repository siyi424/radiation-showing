{"ast":null,"code":"import { create as v2Create, distSquare as v2DistSquare } from './vector.js';\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3;\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n\nexport function cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\nexport function cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\nexport function cubicRootAt(p0, p1, p2, p3, val, roots) {\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K;\n      var t2 = -K / 2;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\nexport function cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\nexport function cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012;\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123;\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\nexport function cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y;\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity;\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval;\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  }\n\n  return mathSqrt(d);\n}\nexport function cubicLength(x0, y0, x1, y1, x2, y2, x3, y3, iteration) {\n  var px = x0;\n  var py = y0;\n  var d = 0;\n  var step = 1 / iteration;\n\n  for (var i = 1; i <= iteration; i++) {\n    var t = i * step;\n    var x = cubicAt(x0, x1, x2, x3, t);\n    var y = cubicAt(y0, y1, y2, y3, t);\n    var dx = x - px;\n    var dy = y - py;\n    d += Math.sqrt(dx * dx + dy * dy);\n    px = x;\n    py = y;\n  }\n\n  return d;\n}\nexport function quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\nexport function quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\nexport function quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\nexport function quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\nexport function quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01;\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\nexport function quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y;\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity;\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval;\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  }\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  }\n\n  return mathSqrt(d);\n}\nexport function quadraticLength(x0, y0, x1, y1, x2, y2, iteration) {\n  var px = x0;\n  var py = y0;\n  var d = 0;\n  var step = 1 / iteration;\n\n  for (var i = 1; i <= iteration; i++) {\n    var t = i * step;\n    var x = quadraticAt(x0, x1, x2, t);\n    var y = quadraticAt(y0, y1, y2, t);\n    var dx = x - px;\n    var dy = y - py;\n    d += Math.sqrt(dx * dx + dy * dy);\n    px = x;\n    py = y;\n  }\n\n  return d;\n}","map":{"version":3,"names":["create","v2Create","distSquare","v2DistSquare","mathPow","Math","pow","mathSqrt","sqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","val","isNotAroundZero","cubicAt","p0","p1","p2","p3","t","onet","cubicDerivativeAt","cubicRootAt","roots","a","b","c","d","A","B","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","cos","sin","t3","cubicExtrema","extrema","cubicSubdivide","out","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x1","y1","x2","y2","x3","y3","x","y","interval","Infinity","prev","next","d1","d2","_t","i","cubicLength","iteration","px","py","step","dx","dy","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","quadraticLength"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/core/curve.js"],"sourcesContent":["import { create as v2Create, distSquare as v2DistSquare } from './vector.js';\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3;\nvar _v0 = v2Create();\nvar _v1 = v2Create();\nvar _v2 = v2Create();\nfunction isAroundZero(val) {\n    return val > -EPSILON && val < EPSILON;\n}\nfunction isNotAroundZero(val) {\n    return val > EPSILON || val < -EPSILON;\n}\nexport function cubicAt(p0, p1, p2, p3, t) {\n    var onet = 1 - t;\n    return onet * onet * (onet * p0 + 3 * t * p1)\n        + t * t * (t * p3 + 3 * onet * p2);\n}\nexport function cubicDerivativeAt(p0, p1, p2, p3, t) {\n    var onet = 1 - t;\n    return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n        + (p3 - p2) * t * t);\n}\nexport function cubicRootAt(p0, p1, p2, p3, val, roots) {\n    var a = p3 + 3 * (p1 - p2) - p0;\n    var b = 3 * (p2 - p1 * 2 + p0);\n    var c = 3 * (p1 - p0);\n    var d = p0 - val;\n    var A = b * b - 3 * a * c;\n    var B = b * c - 9 * a * d;\n    var C = c * c - 3 * b * d;\n    var n = 0;\n    if (isAroundZero(A) && isAroundZero(B)) {\n        if (isAroundZero(b)) {\n            roots[0] = 0;\n        }\n        else {\n            var t1 = -c / b;\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n        }\n    }\n    else {\n        var disc = B * B - 4 * A * C;\n        if (isAroundZero(disc)) {\n            var K = B / A;\n            var t1 = -b / a + K;\n            var t2 = -K / 2;\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n            if (t2 >= 0 && t2 <= 1) {\n                roots[n++] = t2;\n            }\n        }\n        else if (disc > 0) {\n            var discSqrt = mathSqrt(disc);\n            var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n            var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n            if (Y1 < 0) {\n                Y1 = -mathPow(-Y1, ONE_THIRD);\n            }\n            else {\n                Y1 = mathPow(Y1, ONE_THIRD);\n            }\n            if (Y2 < 0) {\n                Y2 = -mathPow(-Y2, ONE_THIRD);\n            }\n            else {\n                Y2 = mathPow(Y2, ONE_THIRD);\n            }\n            var t1 = (-b - (Y1 + Y2)) / (3 * a);\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n        }\n        else {\n            var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n            var theta = Math.acos(T) / 3;\n            var ASqrt = mathSqrt(A);\n            var tmp = Math.cos(theta);\n            var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n            var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n            var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n            if (t2 >= 0 && t2 <= 1) {\n                roots[n++] = t2;\n            }\n            if (t3 >= 0 && t3 <= 1) {\n                roots[n++] = t3;\n            }\n        }\n    }\n    return n;\n}\nexport function cubicExtrema(p0, p1, p2, p3, extrema) {\n    var b = 6 * p2 - 12 * p1 + 6 * p0;\n    var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n    var c = 3 * p1 - 3 * p0;\n    var n = 0;\n    if (isAroundZero(a)) {\n        if (isNotAroundZero(b)) {\n            var t1 = -c / b;\n            if (t1 >= 0 && t1 <= 1) {\n                extrema[n++] = t1;\n            }\n        }\n    }\n    else {\n        var disc = b * b - 4 * a * c;\n        if (isAroundZero(disc)) {\n            extrema[0] = -b / (2 * a);\n        }\n        else if (disc > 0) {\n            var discSqrt = mathSqrt(disc);\n            var t1 = (-b + discSqrt) / (2 * a);\n            var t2 = (-b - discSqrt) / (2 * a);\n            if (t1 >= 0 && t1 <= 1) {\n                extrema[n++] = t1;\n            }\n            if (t2 >= 0 && t2 <= 1) {\n                extrema[n++] = t2;\n            }\n        }\n    }\n    return n;\n}\nexport function cubicSubdivide(p0, p1, p2, p3, t, out) {\n    var p01 = (p1 - p0) * t + p0;\n    var p12 = (p2 - p1) * t + p1;\n    var p23 = (p3 - p2) * t + p2;\n    var p012 = (p12 - p01) * t + p01;\n    var p123 = (p23 - p12) * t + p12;\n    var p0123 = (p123 - p012) * t + p012;\n    out[0] = p0;\n    out[1] = p01;\n    out[2] = p012;\n    out[3] = p0123;\n    out[4] = p0123;\n    out[5] = p123;\n    out[6] = p23;\n    out[7] = p3;\n}\nexport function cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n    var t;\n    var interval = 0.005;\n    var d = Infinity;\n    var prev;\n    var next;\n    var d1;\n    var d2;\n    _v0[0] = x;\n    _v0[1] = y;\n    for (var _t = 0; _t < 1; _t += 0.05) {\n        _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n        _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n        d1 = v2DistSquare(_v0, _v1);\n        if (d1 < d) {\n            t = _t;\n            d = d1;\n        }\n    }\n    d = Infinity;\n    for (var i = 0; i < 32; i++) {\n        if (interval < EPSILON_NUMERIC) {\n            break;\n        }\n        prev = t - interval;\n        next = t + interval;\n        _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n        _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n        d1 = v2DistSquare(_v1, _v0);\n        if (prev >= 0 && d1 < d) {\n            t = prev;\n            d = d1;\n        }\n        else {\n            _v2[0] = cubicAt(x0, x1, x2, x3, next);\n            _v2[1] = cubicAt(y0, y1, y2, y3, next);\n            d2 = v2DistSquare(_v2, _v0);\n            if (next <= 1 && d2 < d) {\n                t = next;\n                d = d2;\n            }\n            else {\n                interval *= 0.5;\n            }\n        }\n    }\n    if (out) {\n        out[0] = cubicAt(x0, x1, x2, x3, t);\n        out[1] = cubicAt(y0, y1, y2, y3, t);\n    }\n    return mathSqrt(d);\n}\nexport function cubicLength(x0, y0, x1, y1, x2, y2, x3, y3, iteration) {\n    var px = x0;\n    var py = y0;\n    var d = 0;\n    var step = 1 / iteration;\n    for (var i = 1; i <= iteration; i++) {\n        var t = i * step;\n        var x = cubicAt(x0, x1, x2, x3, t);\n        var y = cubicAt(y0, y1, y2, y3, t);\n        var dx = x - px;\n        var dy = y - py;\n        d += Math.sqrt(dx * dx + dy * dy);\n        px = x;\n        py = y;\n    }\n    return d;\n}\nexport function quadraticAt(p0, p1, p2, t) {\n    var onet = 1 - t;\n    return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\nexport function quadraticDerivativeAt(p0, p1, p2, t) {\n    return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\nexport function quadraticRootAt(p0, p1, p2, val, roots) {\n    var a = p0 - 2 * p1 + p2;\n    var b = 2 * (p1 - p0);\n    var c = p0 - val;\n    var n = 0;\n    if (isAroundZero(a)) {\n        if (isNotAroundZero(b)) {\n            var t1 = -c / b;\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n        }\n    }\n    else {\n        var disc = b * b - 4 * a * c;\n        if (isAroundZero(disc)) {\n            var t1 = -b / (2 * a);\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n        }\n        else if (disc > 0) {\n            var discSqrt = mathSqrt(disc);\n            var t1 = (-b + discSqrt) / (2 * a);\n            var t2 = (-b - discSqrt) / (2 * a);\n            if (t1 >= 0 && t1 <= 1) {\n                roots[n++] = t1;\n            }\n            if (t2 >= 0 && t2 <= 1) {\n                roots[n++] = t2;\n            }\n        }\n    }\n    return n;\n}\nexport function quadraticExtremum(p0, p1, p2) {\n    var divider = p0 + p2 - 2 * p1;\n    if (divider === 0) {\n        return 0.5;\n    }\n    else {\n        return (p0 - p1) / divider;\n    }\n}\nexport function quadraticSubdivide(p0, p1, p2, t, out) {\n    var p01 = (p1 - p0) * t + p0;\n    var p12 = (p2 - p1) * t + p1;\n    var p012 = (p12 - p01) * t + p01;\n    out[0] = p0;\n    out[1] = p01;\n    out[2] = p012;\n    out[3] = p012;\n    out[4] = p12;\n    out[5] = p2;\n}\nexport function quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n    var t;\n    var interval = 0.005;\n    var d = Infinity;\n    _v0[0] = x;\n    _v0[1] = y;\n    for (var _t = 0; _t < 1; _t += 0.05) {\n        _v1[0] = quadraticAt(x0, x1, x2, _t);\n        _v1[1] = quadraticAt(y0, y1, y2, _t);\n        var d1 = v2DistSquare(_v0, _v1);\n        if (d1 < d) {\n            t = _t;\n            d = d1;\n        }\n    }\n    d = Infinity;\n    for (var i = 0; i < 32; i++) {\n        if (interval < EPSILON_NUMERIC) {\n            break;\n        }\n        var prev = t - interval;\n        var next = t + interval;\n        _v1[0] = quadraticAt(x0, x1, x2, prev);\n        _v1[1] = quadraticAt(y0, y1, y2, prev);\n        var d1 = v2DistSquare(_v1, _v0);\n        if (prev >= 0 && d1 < d) {\n            t = prev;\n            d = d1;\n        }\n        else {\n            _v2[0] = quadraticAt(x0, x1, x2, next);\n            _v2[1] = quadraticAt(y0, y1, y2, next);\n            var d2 = v2DistSquare(_v2, _v0);\n            if (next <= 1 && d2 < d) {\n                t = next;\n                d = d2;\n            }\n            else {\n                interval *= 0.5;\n            }\n        }\n    }\n    if (out) {\n        out[0] = quadraticAt(x0, x1, x2, t);\n        out[1] = quadraticAt(y0, y1, y2, t);\n    }\n    return mathSqrt(d);\n}\nexport function quadraticLength(x0, y0, x1, y1, x2, y2, iteration) {\n    var px = x0;\n    var py = y0;\n    var d = 0;\n    var step = 1 / iteration;\n    for (var i = 1; i <= iteration; i++) {\n        var t = i * step;\n        var x = quadraticAt(x0, x1, x2, t);\n        var y = quadraticAt(y0, y1, y2, t);\n        var dx = x - px;\n        var dy = y - py;\n        d += Math.sqrt(dx * dx + dy * dy);\n        px = x;\n        py = y;\n    }\n    return d;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}