{"ast":null,"code":"import * as matrix from './matrix.js';\nimport * as vector from './vector.js';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\n\nvar Transformable = function () {\n  function Transformable() {}\n\n  Transformable.prototype.getLocalTransform = function (m) {\n    return Transformable.getLocalTransform(this, m);\n  };\n\n  Transformable.prototype.setPosition = function (arr) {\n    this.x = arr[0];\n    this.y = arr[1];\n  };\n\n  Transformable.prototype.setScale = function (arr) {\n    this.scaleX = arr[0];\n    this.scaleY = arr[1];\n  };\n\n  Transformable.prototype.setSkew = function (arr) {\n    this.skewX = arr[0];\n    this.skewY = arr[1];\n  };\n\n  Transformable.prototype.setOrigin = function (arr) {\n    this.originX = arr[0];\n    this.originY = arr[1];\n  };\n\n  Transformable.prototype.needLocalTransform = function () {\n    return isNotAroundZero(this.rotation) || isNotAroundZero(this.x) || isNotAroundZero(this.y) || isNotAroundZero(this.scaleX - 1) || isNotAroundZero(this.scaleY - 1) || isNotAroundZero(this.skewX) || isNotAroundZero(this.skewY);\n  };\n\n  Transformable.prototype.updateTransform = function () {\n    var parentTransform = this.parent && this.parent.transform;\n    var needLocalTransform = this.needLocalTransform();\n    var m = this.transform;\n\n    if (!(needLocalTransform || parentTransform)) {\n      m && mIdentity(m);\n      return;\n    }\n\n    m = m || matrix.create();\n\n    if (needLocalTransform) {\n      this.getLocalTransform(m);\n    } else {\n      mIdentity(m);\n    }\n\n    if (parentTransform) {\n      if (needLocalTransform) {\n        matrix.mul(m, parentTransform, m);\n      } else {\n        matrix.copy(m, parentTransform);\n      }\n    }\n\n    this.transform = m;\n\n    this._resolveGlobalScaleRatio(m);\n  };\n\n  Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n    var globalScaleRatio = this.globalScaleRatio;\n\n    if (globalScaleRatio != null && globalScaleRatio !== 1) {\n      this.getGlobalScale(scaleTmp);\n      var relX = scaleTmp[0] < 0 ? -1 : 1;\n      var relY = scaleTmp[1] < 0 ? -1 : 1;\n      var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n      var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n      m[0] *= sx;\n      m[1] *= sx;\n      m[2] *= sy;\n      m[3] *= sy;\n    }\n\n    this.invTransform = this.invTransform || matrix.create();\n    matrix.invert(this.invTransform, m);\n  };\n\n  Transformable.prototype.getComputedTransform = function () {\n    var transformNode = this;\n    var ancestors = [];\n\n    while (transformNode) {\n      ancestors.push(transformNode);\n      transformNode = transformNode.parent;\n    }\n\n    while (transformNode = ancestors.pop()) {\n      transformNode.updateTransform();\n    }\n\n    return this.transform;\n  };\n\n  Transformable.prototype.setLocalTransform = function (m) {\n    if (!m) {\n      return;\n    }\n\n    var sx = m[0] * m[0] + m[1] * m[1];\n    var sy = m[2] * m[2] + m[3] * m[3];\n    var rotation = Math.atan2(m[1], m[0]);\n    var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n    sy = Math.sqrt(sy) * Math.cos(shearX);\n    sx = Math.sqrt(sx);\n    this.skewX = shearX;\n    this.skewY = 0;\n    this.rotation = -rotation;\n    this.x = +m[4];\n    this.y = +m[5];\n    this.scaleX = sx;\n    this.scaleY = sy;\n    this.originX = 0;\n    this.originY = 0;\n  };\n\n  Transformable.prototype.decomposeTransform = function () {\n    if (!this.transform) {\n      return;\n    }\n\n    var parent = this.parent;\n    var m = this.transform;\n\n    if (parent && parent.transform) {\n      matrix.mul(tmpTransform, parent.invTransform, m);\n      m = tmpTransform;\n    }\n\n    var ox = this.originX;\n    var oy = this.originY;\n\n    if (ox || oy) {\n      originTransform[4] = ox;\n      originTransform[5] = oy;\n      matrix.mul(tmpTransform, m, originTransform);\n      tmpTransform[4] -= ox;\n      tmpTransform[5] -= oy;\n      m = tmpTransform;\n    }\n\n    this.setLocalTransform(m);\n  };\n\n  Transformable.prototype.getGlobalScale = function (out) {\n    var m = this.transform;\n    out = out || [];\n\n    if (!m) {\n      out[0] = 1;\n      out[1] = 1;\n      return out;\n    }\n\n    out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n    out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n    if (m[0] < 0) {\n      out[0] = -out[0];\n    }\n\n    if (m[3] < 0) {\n      out[1] = -out[1];\n    }\n\n    return out;\n  };\n\n  Transformable.prototype.transformCoordToLocal = function (x, y) {\n    var v2 = [x, y];\n    var invTransform = this.invTransform;\n\n    if (invTransform) {\n      vector.applyTransform(v2, v2, invTransform);\n    }\n\n    return v2;\n  };\n\n  Transformable.prototype.transformCoordToGlobal = function (x, y) {\n    var v2 = [x, y];\n    var transform = this.transform;\n\n    if (transform) {\n      vector.applyTransform(v2, v2, transform);\n    }\n\n    return v2;\n  };\n\n  Transformable.prototype.getLineScale = function () {\n    var m = this.transform;\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  };\n\n  Transformable.prototype.copyTransform = function (source) {\n    copyTransform(this, source);\n  };\n\n  Transformable.getLocalTransform = function (target, m) {\n    m = m || [];\n    var ox = target.originX || 0;\n    var oy = target.originY || 0;\n    var sx = target.scaleX;\n    var sy = target.scaleY;\n    var ax = target.anchorX;\n    var ay = target.anchorY;\n    var rotation = target.rotation || 0;\n    var x = target.x;\n    var y = target.y;\n    var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n    var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n\n    if (ox || oy || ax || ay) {\n      var dx = ox + ax;\n      var dy = oy + ay;\n      m[4] = -dx * sx - skewX * dy * sy;\n      m[5] = -dy * sy - skewY * dx * sx;\n    } else {\n      m[4] = m[5] = 0;\n    }\n\n    m[0] = sx;\n    m[3] = sy;\n    m[1] = skewY * sx;\n    m[2] = skewX * sy;\n    rotation && matrix.rotate(m, m, rotation);\n    m[4] += ox + x;\n    m[5] += oy + y;\n    return m;\n  };\n\n  Transformable.initDefaultProps = function () {\n    var proto = Transformable.prototype;\n    proto.scaleX = proto.scaleY = proto.globalScaleRatio = 1;\n    proto.x = proto.y = proto.originX = proto.originY = proto.skewX = proto.skewY = proto.rotation = proto.anchorX = proto.anchorY = 0;\n  }();\n\n  return Transformable;\n}();\n\n;\nexport var TRANSFORMABLE_PROPS = ['x', 'y', 'originX', 'originY', 'anchorX', 'anchorY', 'rotation', 'scaleX', 'scaleY', 'skewX', 'skewY'];\nexport function copyTransform(target, source) {\n  for (var i = 0; i < TRANSFORMABLE_PROPS.length; i++) {\n    var propName = TRANSFORMABLE_PROPS[i];\n    target[propName] = source[propName];\n  }\n}\nexport default Transformable;","map":{"version":3,"names":["matrix","vector","mIdentity","identity","EPSILON","isNotAroundZero","val","scaleTmp","tmpTransform","originTransform","create","abs","Math","Transformable","prototype","getLocalTransform","m","setPosition","arr","x","y","setScale","scaleX","scaleY","setSkew","skewX","skewY","setOrigin","originX","originY","needLocalTransform","rotation","updateTransform","parentTransform","parent","transform","mul","copy","_resolveGlobalScaleRatio","globalScaleRatio","getGlobalScale","relX","relY","sx","sy","invTransform","invert","getComputedTransform","transformNode","ancestors","push","pop","setLocalTransform","atan2","shearX","PI","sqrt","cos","decomposeTransform","ox","oy","out","transformCoordToLocal","v2","applyTransform","transformCoordToGlobal","getLineScale","copyTransform","source","target","ax","anchorX","ay","anchorY","tan","dx","dy","rotate","initDefaultProps","proto","TRANSFORMABLE_PROPS","i","length","propName"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/core/Transformable.js"],"sourcesContent":["import * as matrix from './matrix.js';\nimport * as vector from './vector.js';\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\nfunction isNotAroundZero(val) {\n    return val > EPSILON || val < -EPSILON;\n}\nvar scaleTmp = [];\nvar tmpTransform = [];\nvar originTransform = matrix.create();\nvar abs = Math.abs;\nvar Transformable = (function () {\n    function Transformable() {\n    }\n    Transformable.prototype.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n    Transformable.prototype.setPosition = function (arr) {\n        this.x = arr[0];\n        this.y = arr[1];\n    };\n    Transformable.prototype.setScale = function (arr) {\n        this.scaleX = arr[0];\n        this.scaleY = arr[1];\n    };\n    Transformable.prototype.setSkew = function (arr) {\n        this.skewX = arr[0];\n        this.skewY = arr[1];\n    };\n    Transformable.prototype.setOrigin = function (arr) {\n        this.originX = arr[0];\n        this.originY = arr[1];\n    };\n    Transformable.prototype.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.x)\n            || isNotAroundZero(this.y)\n            || isNotAroundZero(this.scaleX - 1)\n            || isNotAroundZero(this.scaleY - 1)\n            || isNotAroundZero(this.skewX)\n            || isNotAroundZero(this.skewY);\n    };\n    Transformable.prototype.updateTransform = function () {\n        var parentTransform = this.parent && this.parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n        var m = this.transform;\n        if (!(needLocalTransform || parentTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n        m = m || matrix.create();\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n        if (parentTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parentTransform, m);\n            }\n            else {\n                matrix.copy(m, parentTransform);\n            }\n        }\n        this.transform = m;\n        this._resolveGlobalScaleRatio(m);\n    };\n    Transformable.prototype._resolveGlobalScaleRatio = function (m) {\n        var globalScaleRatio = this.globalScaleRatio;\n        if (globalScaleRatio != null && globalScaleRatio !== 1) {\n            this.getGlobalScale(scaleTmp);\n            var relX = scaleTmp[0] < 0 ? -1 : 1;\n            var relY = scaleTmp[1] < 0 ? -1 : 1;\n            var sx = ((scaleTmp[0] - relX) * globalScaleRatio + relX) / scaleTmp[0] || 0;\n            var sy = ((scaleTmp[1] - relY) * globalScaleRatio + relY) / scaleTmp[1] || 0;\n            m[0] *= sx;\n            m[1] *= sx;\n            m[2] *= sy;\n            m[3] *= sy;\n        }\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n    Transformable.prototype.getComputedTransform = function () {\n        var transformNode = this;\n        var ancestors = [];\n        while (transformNode) {\n            ancestors.push(transformNode);\n            transformNode = transformNode.parent;\n        }\n        while (transformNode = ancestors.pop()) {\n            transformNode.updateTransform();\n        }\n        return this.transform;\n    };\n    Transformable.prototype.setLocalTransform = function (m) {\n        if (!m) {\n            return;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var rotation = Math.atan2(m[1], m[0]);\n        var shearX = Math.PI / 2 + rotation - Math.atan2(m[3], m[2]);\n        sy = Math.sqrt(sy) * Math.cos(shearX);\n        sx = Math.sqrt(sx);\n        this.skewX = shearX;\n        this.skewY = 0;\n        this.rotation = -rotation;\n        this.x = +m[4];\n        this.y = +m[5];\n        this.scaleX = sx;\n        this.scaleY = sy;\n        this.originX = 0;\n        this.originY = 0;\n    };\n    Transformable.prototype.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var ox = this.originX;\n        var oy = this.originY;\n        if (ox || oy) {\n            originTransform[4] = ox;\n            originTransform[5] = oy;\n            matrix.mul(tmpTransform, m, originTransform);\n            tmpTransform[4] -= ox;\n            tmpTransform[5] -= oy;\n            m = tmpTransform;\n        }\n        this.setLocalTransform(m);\n    };\n    Transformable.prototype.getGlobalScale = function (out) {\n        var m = this.transform;\n        out = out || [];\n        if (!m) {\n            out[0] = 1;\n            out[1] = 1;\n            return out;\n        }\n        out[0] = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        out[1] = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            out[0] = -out[0];\n        }\n        if (m[3] < 0) {\n            out[1] = -out[1];\n        }\n        return out;\n    };\n    Transformable.prototype.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n    Transformable.prototype.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n    Transformable.prototype.getLineScale = function () {\n        var m = this.transform;\n        return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n            ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n            : 1;\n    };\n    Transformable.prototype.copyTransform = function (source) {\n        copyTransform(this, source);\n    };\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        var ox = target.originX || 0;\n        var oy = target.originY || 0;\n        var sx = target.scaleX;\n        var sy = target.scaleY;\n        var ax = target.anchorX;\n        var ay = target.anchorY;\n        var rotation = target.rotation || 0;\n        var x = target.x;\n        var y = target.y;\n        var skewX = target.skewX ? Math.tan(target.skewX) : 0;\n        var skewY = target.skewY ? Math.tan(-target.skewY) : 0;\n        if (ox || oy || ax || ay) {\n            var dx = ox + ax;\n            var dy = oy + ay;\n            m[4] = -dx * sx - skewX * dy * sy;\n            m[5] = -dy * sy - skewY * dx * sx;\n        }\n        else {\n            m[4] = m[5] = 0;\n        }\n        m[0] = sx;\n        m[3] = sy;\n        m[1] = skewY * sx;\n        m[2] = skewX * sy;\n        rotation && matrix.rotate(m, m, rotation);\n        m[4] += ox + x;\n        m[5] += oy + y;\n        return m;\n    };\n    Transformable.initDefaultProps = (function () {\n        var proto = Transformable.prototype;\n        proto.scaleX =\n            proto.scaleY =\n                proto.globalScaleRatio = 1;\n        proto.x =\n            proto.y =\n                proto.originX =\n                    proto.originY =\n                        proto.skewX =\n                            proto.skewY =\n                                proto.rotation =\n                                    proto.anchorX =\n                                        proto.anchorY = 0;\n    })();\n    return Transformable;\n}());\n;\nexport var TRANSFORMABLE_PROPS = [\n    'x', 'y', 'originX', 'originY', 'anchorX', 'anchorY', 'rotation', 'scaleX', 'scaleY', 'skewX', 'skewY'\n];\nexport function copyTransform(target, source) {\n    for (var i = 0; i < TRANSFORMABLE_PROPS.length; i++) {\n        var propName = TRANSFORMABLE_PROPS[i];\n        target[propName] = source[propName];\n    }\n}\nexport default Transformable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}