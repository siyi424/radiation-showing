{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.3.3';\nexport var dependencies = {\n  zrender: '5.3.2'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain', {});\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n              params = extend({}, ecData.eventData);\n              return true;\n            }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};","map":{"version":3,"names":["__extends","zrender","assert","each","isFunction","isObject","indexOf","bind","clone","setAsPrimitive","extend","createHashMap","map","defaults","isDom","isArray","noop","isString","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","SeriesModel","ComponentView","ChartView","graphic","getECData","isHighDownDispatcher","HOVER_STATE_EMPHASIS","HOVER_STATE_BLUR","blurSeriesFromHighlightPayload","toggleSelectionFromPayload","updateSeriesElementSelection","getAllSelectedIndices","isSelectChangePayload","isHighDownPayload","HIGHLIGHT_ACTION_TYPE","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","savePathStates","enterEmphasis","leaveEmphasis","leaveBlur","enterSelect","leaveSelect","enterBlur","allLeaveBlur","findComponentHighDownDispatchers","blurComponent","handleGlobalMouseOverForHighDown","handleGlobalMouseOutForHighDown","modelUtil","throttle","seriesStyleTask","dataStyleTask","dataColorPaletteTask","loadingDefault","Scheduler","lightTheme","darkTheme","parseClassType","ECEventProcessor","seriesSymbolTask","dataSymbolTask","getVisualFromData","getItemVisualFromData","deprecateLog","deprecateReplaceLog","error","handleLegacySelectEvents","registerExternalTransform","createLocaleObject","SYSTEM_LANG","findEventDispatcher","decal","lifecycle","platformApi","setPlatformAPI","getImpl","hasWindow","window","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","PENDING_UPDATE","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","prototype","apply","MessageCenter","_super","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","render","renderComponents","renderSeries","createExtensionAPI","enableConnect","markStatusToUpdate","applyChangedStates","ECharts","dom","theme","opts","_this","call","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","themeStorage","_dom","defaultRenderer","defaultUseDirtyRect","process","NODE_ENV","root","global","__ECHARTS__DEFAULT__RENDERER__","devUseDirtyRect","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","zr","_zr","init","renderer","devicePixelRatio","width","height","ssr","useDirtyRect","_ssr","_throttledZrFlush","flush","_theme","_locale","locale","_coordSysMgr","api","_api","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_initEvents","resize","animation","_onframe","_disposed","scheduler","silent","update","updateParams","e","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","isSSR","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","transition","optionManager","optionPreprocessorFuncs","seriesTransition","optionChanged","wakeUp","setTheme","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","renderToCanvas","type","Error","backgroundColor","get","pixelRatio","renderToSVGString","renderToString","useViewBox","getSvgDataURL","svgSupported","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","createCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","parseFinder","models","key","model","coordSys","coordinateSystem","containPoint","console","warn","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","target","params","isGlobalOut","parent","ecData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","needPrepare","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","browser","weChat","updateLabelLayout","updatedSeries","appendData","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","Clazz","getClass","main","sub","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","normalizeToArray","modelId","convertOptionIdName","set","isExcluded","notBlur","_a","focusSelf","dispatchers","dispatcher","prepareAndUpdate","newOption","coordSysMgr","restoreData","create","clearColorPalette","darkMode","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","eventObjBatch","isSelectChange","isHighDown","batchItem","action","preParseFinder","queryOptionMap","mainTypeSpecified","componentMainType","keys","messageCenter","newObj","selected","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","allocateZlevels","componentZLevels","seriesZLevels","hasSeperateZLevel","zlevel","z","zlevelKey","getZLevelKey","idx","zLevels","lastSeriesZLevel_1","lastSeriesKey_1","setZLevel","dirtyList","clearStates","updateZ","updateStates","getSeries","updatePayload","dirty","perform","getPerformArgs","updateBlend","updateHoverLayerStatus","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","emphasis","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","eachRendered","hoverLayer","blendMode","blend","preventAutoZ","doUpdateZ","maxZ2","label","getTextContent","labelLine","getTextGuideLine","children","childrenRef","z2","isFinite","textGuideLineConfig","showAbove","textContent","textGuide","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","echartsProto","one","eventName","cb","ctx","wrapped","args2","idBase","groupIdBase","isClient","existInstance","getInstanceByDom","nodeName","toUpperCase","clientWidth","clientHeight","connect","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","postInitFunc","registerUpdateLifecycle","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","registerLocale","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","getMap","registerTransform","dataTool"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/core/echarts.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender.js';\nimport { assert, each, isFunction, isObject, indexOf, bind, clone, setAsPrimitive, extend, createHashMap, map, defaults, isDom, isArray, noop, isString } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport timsort from 'zrender/lib/core/timsort.js';\nimport Eventful from 'zrender/lib/core/Eventful.js';\nimport GlobalModel from '../model/Global.js';\nimport ExtensionAPI from './ExtensionAPI.js';\nimport CoordinateSystemManager from './CoordinateSystem.js';\nimport OptionManager from '../model/OptionManager.js';\nimport backwardCompat from '../preprocessor/backwardCompat.js';\nimport dataStack from '../processor/dataStack.js';\nimport SeriesModel from '../model/Series.js';\nimport ComponentView from '../view/Component.js';\nimport ChartView from '../view/Chart.js';\nimport * as graphic from '../util/graphic.js';\nimport { getECData } from '../util/innerStore.js';\nimport { isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, blurSeriesFromHighlightPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur, allLeaveBlur, findComponentHighDownDispatchers, blurComponent, handleGlobalMouseOverForHighDown, handleGlobalMouseOutForHighDown } from '../util/states.js';\nimport * as modelUtil from '../util/model.js';\nimport { throttle } from '../util/throttle.js';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style.js';\nimport loadingDefault from '../loading/default.js';\nimport Scheduler from './Scheduler.js';\nimport lightTheme from '../theme/light.js';\nimport darkTheme from '../theme/dark.js';\nimport { parseClassType } from '../util/clazz.js';\nimport { ECEventProcessor } from '../util/ECEventProcessor.js';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol.js';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper.js';\nimport { deprecateLog, deprecateReplaceLog, error } from '../util/log.js';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction.js';\nimport { registerExternalTransform } from '../data/helper/transform.js';\nimport { createLocaleObject, SYSTEM_LANG } from './locale.js';\nimport { findEventDispatcher } from '../util/event.js';\nimport decal from '../visual/decal.js';\nimport lifecycle from './lifecycle.js';\nimport { platformApi, setPlatformAPI } from 'zrender/lib/core/platform.js';\nimport { getImpl } from './impl.js';\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.3.3';\nexport var dependencies = {\n  zrender: '5.3.2'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar PENDING_UPDATE = '__pendingUpdate';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar createExtensionAPI;\nvar enableConnect;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (isString(theme)) {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      ssr: opts.ssr,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    });\n    _this._ssr = opts.ssr; // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(bind(zr.flush, zr), 17);\n    theme = clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[PENDING_UPDATE]) {\n      var silent = this[PENDING_UPDATE].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, this[PENDING_UPDATE].updateParams);\n      } catch (e) {\n        this[IN_MAIN_PROCESS_KEY] = false;\n        this[PENDING_UPDATE] = null;\n        throw e;\n      } // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[PENDING_UPDATE] = null;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain', {});\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n\n  ECharts.prototype.isSSR = function () {\n    return this._ssr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`setOption` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.ssr = this._ssr;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    var updateParams = {\n      seriesTransition: transitionOpt,\n      optionChanged: true\n    };\n\n    if (lazyUpdate) {\n      this[PENDING_UPDATE] = {\n        silent: silent,\n        updateParams: updateParams\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      try {\n        prepare(this);\n        updateMethods.update.call(this, null, updateParams);\n      } catch (e) {\n        this[PENDING_UPDATE] = null;\n        this[IN_MAIN_PROCESS_KEY] = false;\n        throw e;\n      } // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n\n      if (!this._ssr) {\n        // not use flush when using ssr mode.\n        this._zr.flush();\n      }\n\n      this[PENDING_UPDATE] = null;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @deprecated\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    deprecateLog('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   * @deprecated Use renderToCanvas instead.\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      deprecateReplaceLog('getRenderedCanvas', 'renderToCanvas');\n    }\n\n    return this.renderToCanvas(opts);\n  };\n\n  ECharts.prototype.renderToCanvas = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'canvas') {\n        throw new Error('renderToCanvas can only be used in the canvas renderer.');\n      }\n    }\n\n    return painter.getRenderedCanvas({\n      backgroundColor: opts.backgroundColor || this._model.get('backgroundColor'),\n      pixelRatio: opts.pixelRatio || this.getDevicePixelRatio()\n    });\n  };\n\n  ECharts.prototype.renderToSVGString = function (opts) {\n    opts = opts || {};\n    var painter = this._zr.painter;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (painter.type !== 'svg') {\n        throw new Error('renderToSVGString can only be used in the svg renderer.');\n      }\n    }\n\n    return painter.renderToString({\n      useViewBox: opts.useViewBox\n    });\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.renderToCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.renderToCanvas(clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = platformApi.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    var dom = this.getDom();\n\n    if (dom) {\n      modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    }\n\n    var chart = this;\n    var api = chart._api;\n    var ecModel = chart._model;\n    each(chart._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(chart._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    chart._zr.dispose(); // Set properties to null.\n    // To reduce the memory cost in case the top code still holds this instance unexpectedly.\n\n\n    chart._dom = chart._model = chart._chartsMap = chart._componentsMap = chart._chartsViews = chart._componentsViews = chart._scheduler = chart._api = chart._zr = chart._throttledZrFlush = chart._theme = chart._coordSysMgr = chart._messageCenter = null;\n    delete instances[chart.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('`resize` should not be called during main process.');\n      }\n\n      return;\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var needPrepare = ecModel.resetOption('media');\n    var silent = opts && opts.silent; // There is some real cases that:\n    // chart.setOption(option, { lazyUpdate: true });\n    // chart.resize();\n\n    if (this[PENDING_UPDATE]) {\n      if (silent == null) {\n        silent = this[PENDING_UPDATE].silent;\n      }\n\n      needPrepare = true;\n      this[PENDING_UPDATE] = null;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    try {\n      needPrepare && prepare(this);\n      updateMethods.update.call(this, {\n        type: 'resize',\n        animation: extend({\n          // Disable animation\n          duration: 0\n        }, opts && opts.animation)\n      });\n    } catch (e) {\n      this[IN_MAIN_PROCESS_KEY] = false;\n      throw e;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    lifecycle.trigger('series:layoutlabels', this._model, this._api, {\n      // Not adding series labels.\n      // TODO\n      updatedSeries: []\n    });\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n\n        if (isHighDownPayload(payload)) {\n          if (model instanceof SeriesModel) {\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && !payload.notBlur && !model.get(['emphasis', 'disabled'])) {\n              blurSeriesFromHighlightPayload(model, payload, ecIns._api);\n            }\n          } else {\n            var _a = findComponentHighDownDispatchers(model.mainType, model.componentIndex, payload.name, ecIns._api),\n                focusSelf = _a.focusSelf,\n                dispatchers = _a.dispatchers;\n\n            if (payload.type === HIGHLIGHT_ACTION_TYPE && focusSelf && !payload.notBlur) {\n              blurComponent(model.mainType, model.componentIndex, ecIns._api);\n            } // PENDING:\n            // Whether to put this \"enter emphasis\" code in `ComponentView`,\n            // which will be the same as `ChartView` but might be not necessary\n            // and will be far from this logic.\n\n\n            if (dispatchers) {\n              each(dispatchers, function (dispatcher) {\n                payload.type === HIGHLIGHT_ACTION_TYPE ? enterEmphasis(dispatcher) : leaveEmphasis(dispatcher);\n              });\n            }\n          }\n        } else if (isSelectChangePayload(payload)) {\n          // TODO geo\n          if (model instanceof SeriesModel) {\n            toggleSelectionFromPayload(model, payload, ecIns._api);\n            updateSeriesElementSelection(model);\n            markStatusToUpdate(ecIns);\n          }\n        }\n      }, ecIns);\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        var isExcluded = excludeSeriesIdMap && excludeSeriesIdMap.get(model.id) !== null;\n\n        if (isExcluded) {\n          return;\n        }\n\n        ;\n        callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload, {\n          // Needs to mark option changed if newOption is given.\n          // It's from MagicType.\n          // TODO If use a separate flag optionChanged in payload?\n          optionChanged: payload.newOption != null\n        });\n      },\n      update: function (payload, updateParams) {\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload, updateParams); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode');\n        zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n        if (darkMode != null && darkMode !== 'auto') {\n          zr.setDarkMode(darkMode);\n        }\n\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, {}, seriesDirtyMap);\n        lifecycle.trigger('afterupdate', ecModel, api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, ecModel, this._api, payload, {});\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        lifecycle.trigger('afterupdate', ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = map(payload.batch, function (item) {\n          item = defaults(extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isHighDown = isHighDownPayload(payload); // Only leave blur once if there are multiple batches.\n\n      if (isHighDown) {\n        allLeaveBlur(this._api);\n      }\n\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isHighDown) {\n          var _a = modelUtil.preParseFinder(payload),\n              queryOptionMap = _a.queryOptionMap,\n              mainTypeSpecified = _a.mainTypeSpecified;\n\n          var componentMainType = mainTypeSpecified ? queryOptionMap.keys()[0] : 'series';\n          updateDirectly(_this, updateMethod, batchItem, componentMainType);\n          markStatusToUpdate(_this);\n        } else if (isSelectChange) {\n          // At present `dispatchAction({ type: 'select', ... })` is not supported on components.\n          // geo still use 'geoselect'.\n          updateDirectly(_this, updateMethod, batchItem, 'series');\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isHighDown && !isSelectChange && !cptType) {\n        try {\n          // Still dirty\n          if (this[PENDING_UPDATE]) {\n            prepare(this);\n            updateMethods.update.call(this, payload);\n            this[PENDING_UPDATE] = null;\n          } else {\n            updateMethods[updateMethod].call(this, payload);\n          }\n        } catch (e) {\n          this[IN_MAIN_PROCESS_KEY] = false;\n          throw e;\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[PENDING_UPDATE] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOverForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          handleGlobalMouseOutForHighDown(dispatcher, e, ecIns._api);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    function clearColorPalette(ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    }\n\n    ; // Allocate zlevels for series and components\n\n    function allocateZlevels(ecModel) {\n      ;\n      var componentZLevels = [];\n      var seriesZLevels = [];\n      var hasSeperateZLevel = false;\n      ecModel.eachComponent(function (componentType, componentModel) {\n        var zlevel = componentModel.get('zlevel') || 0;\n        var z = componentModel.get('z') || 0;\n        var zlevelKey = componentModel.getZLevelKey();\n        hasSeperateZLevel = hasSeperateZLevel || !!zlevelKey;\n        (componentType === 'series' ? seriesZLevels : componentZLevels).push({\n          zlevel: zlevel,\n          z: z,\n          idx: componentModel.componentIndex,\n          type: componentType,\n          key: zlevelKey\n        });\n      });\n\n      if (hasSeperateZLevel) {\n        // Series after component\n        var zLevels = componentZLevels.concat(seriesZLevels);\n        var lastSeriesZLevel_1;\n        var lastSeriesKey_1;\n        timsort(zLevels, function (a, b) {\n          if (a.zlevel === b.zlevel) {\n            return a.z - b.z;\n          }\n\n          return a.zlevel - b.zlevel;\n        });\n        each(zLevels, function (item) {\n          var componentModel = ecModel.getComponent(item.type, item.idx);\n          var zlevel = item.zlevel;\n          var key = item.key;\n\n          if (lastSeriesZLevel_1 != null) {\n            zlevel = Math.max(lastSeriesZLevel_1, zlevel);\n          }\n\n          if (key) {\n            if (zlevel === lastSeriesZLevel_1 && key !== lastSeriesKey_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = key;\n          } else if (lastSeriesKey_1) {\n            if (zlevel === lastSeriesZLevel_1) {\n              zlevel++;\n            }\n\n            lastSeriesKey_1 = '';\n          }\n\n          lastSeriesZLevel_1 = zlevel;\n          componentModel.setZLevel(zlevel);\n        });\n      }\n    }\n\n    render = function (ecIns, ecModel, api, payload, updateParams) {\n      allocateZlevels(ecModel);\n      renderComponents(ecIns, ecModel, api, payload, updateParams);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload, updateParams); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, updateParams, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, updateParams, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      updateParams = extend(updateParams || {}, {\n        updatedSeries: ecModel.getSeries()\n      }); // TODO progressive?\n\n      lifecycle.trigger('series:beforeupdate', ecModel, api, updateParams);\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      lifecycle.trigger('series:layoutlabels', ecModel, api, updateParams); // transition after label is layouted.\n\n      lifecycle.trigger('series:transition', ecModel, api, updateParams);\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n      lifecycle.trigger('series:afterupdate', ecModel, api, updateParams);\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.eachRendered(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n      chartView.eachRendered(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z') || 0;\n      var zlevel = model.get('zlevel') || 0; // Set z and zlevel\n\n      view.eachRendered(function (el) {\n        doUpdateZ(el, z, zlevel, -Infinity); // Don't traverse the children because it has been traversed in _updateZ.\n\n        return true;\n      });\n    }\n\n    ;\n\n    function doUpdateZ(el, z, zlevel, maxZ2) {\n      // Group may also have textContent\n      var label = el.getTextContent();\n      var labelLine = el.getTextGuideLine();\n      var isGroup = el.isGroup;\n\n      if (isGroup) {\n        // set z & zlevel of children elements of Group\n        var children = el.childrenRef();\n\n        for (var i = 0; i < children.length; i++) {\n          maxZ2 = Math.max(doUpdateZ(children[i], z, zlevel, maxZ2), maxZ2);\n        }\n      } else {\n        // not Group\n        el.z = z;\n        el.zlevel = zlevel;\n        maxZ2 = Math.max(el.z2, maxZ2);\n      } // always set z and zlevel if label/labelLine exists\n\n\n      if (label) {\n        label.z = z;\n        label.zlevel = zlevel; // lift z2 of text content\n        // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n        isFinite(maxZ2) && (label.z2 = maxZ2 + 2);\n      }\n\n      if (labelLine) {\n        var textGuideLineConfig = el.textGuideLineConfig;\n        labelLine.z = z;\n        labelLine.zlevel = zlevel;\n        isFinite(maxZ2) && (labelLine.z2 = maxZ2 + (textGuideLineConfig && textGuideLineConfig.showAbove ? 1 : -1));\n      }\n\n      return maxZ2;\n    } // Clear states without animation.\n    // TODO States on component.\n\n\n    function clearStates(model, view) {\n      view.eachRendered(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.eachRendered(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n};\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.locale Specify the locale.\n * @param opts.useDirtyRect Enable dirty rectangle rendering or not.\n */\n\nexport function init(dom, theme, opts) {\n  var isClient = !(opts && opts.ssr);\n\n  if (isClient) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!dom) {\n        throw new Error('Initialize failed: invalid dom.');\n      }\n    }\n\n    var existInstance = getInstanceByDom(dom);\n\n    if (existInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('There is a chart instance already initialized on the dom.');\n      }\n\n      return existInstance;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n        console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n      }\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  isClient && modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  lifecycle.trigger('afterinit', chart);\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (isString(chart)) {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  registerUpdateLifecycle('afterinit', postInitFunc);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  registerUpdateLifecycle('afterupdate', postUpdateFunc);\n}\nexport function registerUpdateLifecycle(name, cb) {\n  lifecycle.on(name, cb);\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (isFunction(eventName)) {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale.js';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n *\n * @deprecated use setPlatformAPI({ createCanvas }) instead.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  if (process.env.NODE_ENV !== 'production') {\n    deprecateLog('setCanvasCreator is deprecated. Use setPlatformAPI({ createCanvas }) instead.');\n  }\n\n  setPlatformAPI({\n    createCanvas: creator\n  });\n}\n/**\n * The parameters and usage: see `geoSourceManager.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  var registerMap = getImpl('registerMap');\n  registerMap && registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  var getMap = getImpl('getMap');\n  return getMap && getMap(mapName);\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"],"mappings":"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"},"metadata":{},"sourceType":"module"}