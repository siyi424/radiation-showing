{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as visualSolution from '../../visual/visualSolution.js';\nimport Model from '../../model/Model.js';\nimport ComponentModel from '../../model/Component.js';\nvar DEFAULT_OUT_OF_BRUSH_COLOR = '#ddd';\n\nvar BrushModel =\n/** @class */\nfunction (_super) {\n  __extends(BrushModel, _super);\n\n  function BrushModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BrushModel.type;\n    /**\n     * @readOnly\n     */\n\n    _this.areas = [];\n    /**\n     * Current brush painting area settings.\n     * @readOnly\n     */\n\n    _this.brushOption = {};\n    return _this;\n  }\n\n  BrushModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  };\n  /**\n   * If `areas` is null/undefined, range state remain.\n   */\n\n\n  BrushModel.prototype.setAreas = function (areas) {\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(zrUtil.isArray(areas));\n      zrUtil.each(areas, function (area) {\n        zrUtil.assert(area.brushType, 'Illegal areas');\n      });\n    } // If areas is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n\n\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  };\n  /**\n   * Set the current painting brush option.\n   */\n\n\n  BrushModel.prototype.setBrushOption = function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  };\n\n  BrushModel.type = 'brush';\n  BrushModel.dependencies = ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'];\n  BrushModel.defaultOption = {\n    seriesIndex: 'all',\n    brushType: 'rect',\n    brushMode: 'single',\n    transformable: true,\n    brushStyle: {\n      borderWidth: 1,\n      color: 'rgba(210,219,238,0.3)',\n      borderColor: '#D2DBEE'\n    },\n    throttleType: 'fixRate',\n    throttleDelay: 0,\n    removeOnClick: true,\n    z: 10000\n  };\n  return BrushModel;\n}(ComponentModel);\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nexport default BrushModel;","map":{"version":3,"names":["__extends","zrUtil","visualSolution","Model","ComponentModel","DEFAULT_OUT_OF_BRUSH_COLOR","BrushModel","_super","_this","apply","arguments","type","areas","brushOption","prototype","optionUpdated","newOption","isInit","thisOption","option","replaceVisualOption","inBrush","outOfBrush","color","hasOwnProperty","liftZ","setAreas","process","env","NODE_ENV","assert","isArray","each","area","brushType","map","generateBrushOption","setBrushOption","dependencies","defaultOption","seriesIndex","brushMode","transformable","brushStyle","borderWidth","borderColor","throttleType","throttleDelay","removeOnClick","z","merge","getItemStyle"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/brush/BrushModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as visualSolution from '../../visual/visualSolution.js';\nimport Model from '../../model/Model.js';\nimport ComponentModel from '../../model/Component.js';\nvar DEFAULT_OUT_OF_BRUSH_COLOR = '#ddd';\n\nvar BrushModel =\n/** @class */\nfunction (_super) {\n  __extends(BrushModel, _super);\n\n  function BrushModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BrushModel.type;\n    /**\n     * @readOnly\n     */\n\n    _this.areas = [];\n    /**\n     * Current brush painting area settings.\n     * @readOnly\n     */\n\n    _this.brushOption = {};\n    return _this;\n  }\n\n  BrushModel.prototype.optionUpdated = function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  };\n  /**\n   * If `areas` is null/undefined, range state remain.\n   */\n\n\n  BrushModel.prototype.setAreas = function (areas) {\n    if (process.env.NODE_ENV !== 'production') {\n      zrUtil.assert(zrUtil.isArray(areas));\n      zrUtil.each(areas, function (area) {\n        zrUtil.assert(area.brushType, 'Illegal areas');\n      });\n    } // If areas is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n\n\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  };\n  /**\n   * Set the current painting brush option.\n   */\n\n\n  BrushModel.prototype.setBrushOption = function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  };\n\n  BrushModel.type = 'brush';\n  BrushModel.dependencies = ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'];\n  BrushModel.defaultOption = {\n    seriesIndex: 'all',\n    brushType: 'rect',\n    brushMode: 'single',\n    transformable: true,\n    brushStyle: {\n      borderWidth: 1,\n      color: 'rgba(210,219,238,0.3)',\n      borderColor: '#D2DBEE'\n    },\n    throttleType: 'fixRate',\n    throttleDelay: 0,\n    removeOnClick: true,\n    z: 10000\n  };\n  return BrushModel;\n}(ComponentModel);\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nexport default BrushModel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}