{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport lineAnimationDiff from './lineAnimationDiff.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as modelUtil from '../../util/model.js';\nimport { ECPolyline, ECPolygon } from './poly.js';\nimport ChartView from '../../view/Chart.js';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { setStatesStylesFromModel, setStatesFlag, toggleHoverEmphasis, SPECIAL_STATES } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nimport { convertToColorString } from '../../util/format.js';\nimport { lerp } from 'zrender/lib/tool/color.js';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt, connectNulls) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  var filteredPoints = [];\n\n  if (connectNulls) {\n    for (i = 0; i < points.length; i += 2) {\n      if (!isNaN(points[i]) && !isNaN(points[i + 1])) {\n        filteredPoints.push(points[i], points[i + 1]);\n      }\n    }\n\n    points = filteredPoints;\n  }\n\n  for (i = 0; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n/**\n * Clip color stops to edge. Avoid creating too large gradients.\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\n *\n * The stops has been sorted from small to large.\n */\n\n\nfunction clipColorStops(colorStops, maxSize) {\n  var newColorStops = [];\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\n\n  var prevOutOfRangeColorStop;\n  var prevInRangeColorStop;\n\n  function lerpStop(stop0, stop1, clippedCoord) {\n    var coord0 = stop0.coord;\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\n    var color = lerp(p, [stop0.color, stop1.color]);\n    return {\n      coord: clippedCoord,\n      color: color\n    };\n  }\n\n  for (var i = 0; i < len; i++) {\n    var stop_1 = colorStops[i];\n    var coord = stop_1.coord;\n\n    if (coord < 0) {\n      prevOutOfRangeColorStop = stop_1;\n    } else if (coord > maxSize) {\n      if (prevInRangeColorStop) {\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\n      } else if (prevOutOfRangeColorStop) {\n        // If there are two stops and coord range is between these two stops\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\n      } // All following stop will be out of range. So just ignore them.\n\n\n      break;\n    } else {\n      if (prevOutOfRangeColorStop) {\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\n\n        prevOutOfRangeColorStop = null;\n      }\n\n      newColorStops.push(stop_1);\n      prevInRangeColorStop = stop_1;\n    }\n  }\n\n  return newColorStops;\n}\n\nfunction getVisualGradient(data, coordSys, api) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    // offset will be calculated later.\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\n  var inRangeStopLen = colorStopsInRange.length;\n\n  if (!inRangeStopLen && stopLen) {\n    // All stops are out of range. All will be the same color.\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStopsInRange, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStopsInRange.push({\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStopsInRange.unshift({\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction anyStateShowEndLabel(seriesModel) {\n  if (seriesModel.get(['endLabel', 'show'])) {\n    return true;\n  }\n\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var connectNulls = seriesModel.get('connectNulls');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // If areaStyle is removed\n      else if (polygon) {\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      var oldClipPath = lineGroup.getClipPath();\n\n      if (oldClipPath) {\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\n        graphic.initProps(oldClipPath, {\n          shape: newClipPath.shape\n        }, seriesModel);\n      } else {\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n      } // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var emphasisModel = seriesModel.getModel('emphasis');\n    var focus = emphasisModel.get('focus');\n    var blurScope = emphasisModel.get('blurScope');\n    var emphasisDisabled = emphasisModel.get('disabled');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    toggleHoverEmphasis(polyline, focus, blurScope, emphasisDisabled);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      toggleHoverEmphasis(polygon, focus, blurScope, emphasisDisabled);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n\n    if (seriesModel.get('triggerLineEvent')) {\n      this.packEventData(seriesModel, polyline);\n      polygon && this.packEventData(seriesModel, polygon);\n    }\n  };\n\n  LineView.prototype.packEventData = function (seriesModel, el) {\n    getECData(el).eventData = {\n      componentType: 'series',\n      componentSubType: 'line',\n      componentIndex: seriesModel.componentIndex,\n      seriesIndex: seriesModel.seriesIndex,\n      seriesName: seriesModel.name,\n      seriesType: 'line'\n    };\n  };\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (zrUtil.isFunction(seriesDuration)) {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = zrUtil.isFunction(seriesDalay) ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = zrUtil.isFunction(seriesDalay) ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          setToFinal: true,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (anyStateShowEndLabel(seriesModel)) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline; // series may be filtered.\n\n      var points = data_2.getLayout('points');\n\n      if (!points) {\n        polyline.removeTextContent();\n        this._endLabel = null;\n        return;\n      }\n\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(points);\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step, connectNulls);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step, connectNulls);\n      next = turnPointsIntoStep(diff.next, coordSys, step, connectNulls);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step, connectNulls);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.stopAnimation();\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.stopAnimation();\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;","map":{"version":3,"names":["__extends","zrUtil","SymbolDraw","SymbolClz","lineAnimationDiff","graphic","modelUtil","ECPolyline","ECPolygon","ChartView","prepareDataCoordInfo","getStackedOnPoint","createGridClipPath","createPolarClipPath","isCoordinateSystemType","setStatesStylesFromModel","setStatesFlag","toggleHoverEmphasis","SPECIAL_STATES","setLabelStyle","getLabelStatesModels","labelInner","getDefaultLabel","getDefaultInterpolatedLabel","getECData","createFloat32Array","convertToColorString","lerp","isPointsSame","points1","points2","length","i","bboxFromPoints","points","minX","Infinity","minY","maxX","maxY","x","y","isNaN","Math","min","max","getBoundingDiff","_a","min1","max1","_b","min2","max2","abs","getSmooth","smooth","isNumber","getStackedOnPoints","coordSys","data","dataCoordInfo","valueDim","len","count","idx","pt","turnPointsIntoStep","stepTurnAt","connectNulls","baseAxis","getBaseAxis","baseIndex","dim","stepPoints","stepPt","nextPt","filteredPoints","push","middle","stepPt2","clipColorStops","colorStops","maxSize","newColorStops","prevOutOfRangeColorStop","prevInRangeColorStop","lerpStop","stop0","stop1","clippedCoord","coord0","coord","p","color","stop_1","getVisualGradient","api","visualMetaList","getVisual","type","process","env","NODE_ENV","console","warn","coordDim","visualMeta","dimInfo","getDimensionInfo","dimension","axis","getAxis","map","stops","stop","toGlobalCoord","dataToCoord","value","stopLen","outerColors","slice","reverse","colorStopsInRange","getWidth","getHeight","inRangeStopLen","tinyExtent","minCoord","maxCoord","coordSpan","each","offset","unshift","gradient","LinearGradient","getIsIgnoreFunc","seriesModel","showAllSymbol","get","isAuto","categoryAxis","getAxesByScale","canShowAllSymbolForCategory","categoryDataDim","mapDimension","labelMap","getViewLabels","labelItem","ordinalNumber","scale","getRawOrdinalNumber","tickValue","dataIndex","hasOwnProperty","axisExtent","getExtent","availSize","dataLen","step","round","getSymbolSize","isHorizontal","isPointNull","getLastIndexNotNull","getPointAtIndex","getIndexRange","xOrY","dimIdx","a","b","prevIndex","nextIndex","range","t","anyStateShowEndLabel","createLineClipPath","lineView","hasAnimation","endLabelModel_1","getModel","valueAnimation_1","data_1","getData","labelAnimationRecord_1","lastFrameIndex","during","percent","clipRect","_endLabelOnDuring","clipPath","endLabel","_endLabel","originalX","attr","originalY","rectShape","shape","expandSize","width","height","getEndLabelStateSpecified","endLabelModel","isBaseInversed","inverse","align","verticalAlign","normal","LineView","_super","apply","arguments","prototype","init","lineGroup","Group","symbolDraw","group","add","_symbolDraw","_lineGroup","render","ecModel","_this","coordinateSystem","lineStyleModel","areaStyleModel","getLayout","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","valueOrigin","stackedOnPoints","showSymbol","isIgnoreFunc","oldData","_data","eachItemGraphicEl","el","__temp","remove","setItemGraphicEl","clipShapeForSymbol","getArea","r0","r","_clipShapeForSymbol","visualColor","_step","updateData","isIgnore","clipShape","disableAnimation","getSymbolPoint","_initSymbolLabelAnimation","_newPolyline","_newPolygon","_initOrUpdateEndLabel","setClipPath","oldClipPath","getClipPath","newClipPath","initProps","_stackedOnPoints","_points","_doUpdateAnimation","setShape","emphasisModel","focus","blurScope","emphasisDisabled","useStyle","defaults","getLineStyle","fill","stroke","lineJoin","style","lineWidth","emphasisLineStyle","getState","seriesIndex","smoothMonotone","stackedOnSeries","getCalculationInfo","stackedOnSmooth","getAreaStyle","opacity","decal","changePolyState","toState","_changePolyState","onHoverStateChange","_valueOrigin","packEventData","eventData","componentType","componentSubType","componentIndex","seriesName","name","seriesType","highlight","payload","queryDataIndex","Array","symbol","getItemGraphicEl","contain","zlevel","z","setZ","symbolLabel","getSymbolPath","getTextContent","z2","stopSymbolAnimation","call","downplay","segmentIgnoreThreshold","isHorizontalOrRadial","isAxisInverse","hostModel","seriesDuration","isFunction","seriesDalay","seriesDalayValue","point","start","end","current","polarClip","pointToCoord","startAngle","endAngle","PI","gridClip","ratio","delay","symbolPath","text","scaleX","scaleY","animateTo","duration","setToFinal","animateFrom","disableLabelAnimation","inheritColor","data_2","removeTextContent","Text","ignoreClip","setTextContent","labelFetcher","labelDataIndex","defaultText","opt","interpolatedValue","enableTextSetter","textConfig","position","animationRecord","valueAnimation","precision","distance","distanceX","distanceY","dataIndexRange","indices","diff","getRawValue","getPointOn","startValue","endValue","interpolateRawValues","setLabelText","stackedOnCurrent","next","stackedOnNext","stopAnimation","__points","target","updateProps","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","animators","dirtyShape","markRedraw","removeAll"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/line/LineView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\"; // FIXME step not support polar\n\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport lineAnimationDiff from './lineAnimationDiff.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as modelUtil from '../../util/model.js';\nimport { ECPolyline, ECPolygon } from './poly.js';\nimport ChartView from '../../view/Chart.js';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { setStatesStylesFromModel, setStatesFlag, toggleHoverEmphasis, SPECIAL_STATES } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nimport { convertToColorString } from '../../util/format.js';\nimport { lerp } from 'zrender/lib/tool/color.js';\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n\n  return [[minX, minY], [maxX, maxY]];\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n      min1 = _a[0],\n      max1 = _a[1];\n\n  var _b = bboxFromPoints(points2),\n      min2 = _b[0],\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\n\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\n}\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt, connectNulls) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  var filteredPoints = [];\n\n  if (connectNulls) {\n    for (i = 0; i < points.length; i += 2) {\n      if (!isNaN(points[i]) && !isNaN(points[i + 1])) {\n        filteredPoints.push(points[i], points[i + 1]);\n      }\n    }\n\n    points = filteredPoints;\n  }\n\n  for (i = 0; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  } // Last points\n\n\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n/**\n * Clip color stops to edge. Avoid creating too large gradients.\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\n *\n * The stops has been sorted from small to large.\n */\n\n\nfunction clipColorStops(colorStops, maxSize) {\n  var newColorStops = [];\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\n\n  var prevOutOfRangeColorStop;\n  var prevInRangeColorStop;\n\n  function lerpStop(stop0, stop1, clippedCoord) {\n    var coord0 = stop0.coord;\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\n    var color = lerp(p, [stop0.color, stop1.color]);\n    return {\n      coord: clippedCoord,\n      color: color\n    };\n  }\n\n  for (var i = 0; i < len; i++) {\n    var stop_1 = colorStops[i];\n    var coord = stop_1.coord;\n\n    if (coord < 0) {\n      prevOutOfRangeColorStop = stop_1;\n    } else if (coord > maxSize) {\n      if (prevInRangeColorStop) {\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\n      } else if (prevOutOfRangeColorStop) {\n        // If there are two stops and coord range is between these two stops\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\n      } // All following stop will be out of range. So just ignore them.\n\n\n      break;\n    } else {\n      if (prevOutOfRangeColorStop) {\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\n\n        prevOutOfRangeColorStop = null;\n      }\n\n      newColorStops.push(stop_1);\n      prevInRangeColorStop = stop_1;\n    }\n  }\n\n  return newColorStops;\n}\n\nfunction getVisualGradient(data, coordSys, api) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    // offset will be calculated later.\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\n  var inRangeStopLen = colorStopsInRange.length;\n\n  if (!inRangeStopLen && stopLen) {\n    // All stops are out of range. All will be the same color.\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStopsInRange, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStopsInRange.push({\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStopsInRange.unshift({\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n\n  return len - 1;\n}\n\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\n\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n\n    prevIndex = i;\n    a = b;\n  }\n\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\n\nfunction anyStateShowEndLabel(seriesModel) {\n  if (seriesModel.get(['endLabel', 'show'])) {\n    return true;\n  }\n\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    } // Set to the final frame. To make sure label layout is right.\n\n\n    if (during) {\n      during(1, clipPath);\n    }\n\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\n\nvar LineView =\n/** @class */\nfunction (_super) {\n  __extends(LineView, _super);\n\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  };\n\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var connectNulls = seriesModel.get('connectNulls');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n        }\n      }\n\n      polyline = this._newPolyline(points);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // If areaStyle is removed\n      else if (polygon) {\n          lineGroup.remove(polygon);\n          polygon = this._polygon = null;\n        } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // NOTE: Must update _endLabel before setClipPath.\n\n\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      } // Update clipPath\n\n\n      var oldClipPath = lineGroup.getClipPath();\n\n      if (oldClipPath) {\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\n        graphic.initProps(oldClipPath, {\n          shape: newClipPath.shape\n        }, seriesModel);\n      } else {\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n      } // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step, connectNulls);\n\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step, connectNulls);\n            }\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var emphasisModel = seriesModel.getModel('emphasis');\n    var focus = emphasisModel.get('focus');\n    var blurScope = emphasisModel.get('blurScope');\n    var emphasisDisabled = emphasisModel.get('disabled');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    } // Needs seriesIndex for focus\n\n\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    toggleHoverEmphasis(polyline, focus, blurScope, emphasisDisabled);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\n\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      toggleHoverEmphasis(polygon, focus, blurScope, emphasisDisabled);\n    }\n\n    var changePolyState = function (toState) {\n      _this._changePolyState(toState);\n    };\n\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n\n    if (seriesModel.get('triggerLineEvent')) {\n      this.packEventData(seriesModel, polyline);\n      polygon && this.packEventData(seriesModel, polygon);\n    }\n  };\n\n  LineView.prototype.packEventData = function (seriesModel, el) {\n    getECData(el).eventData = {\n      componentType: 'series',\n      componentSubType: 'line',\n      componentIndex: seriesModel.componentIndex,\n      seriesIndex: seriesModel.seriesIndex,\n      seriesName: seriesModel.name,\n      seriesType: 'line'\n    };\n  };\n\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('emphasis');\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n\n        var zlevel = seriesModel.get('zlevel');\n        var z = seriesModel.get('z');\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\n\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    this._changePolyState('normal');\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  };\n\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  };\n\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n\n    if (zrUtil.isFunction(seriesDuration)) {\n      seriesDuration = seriesDuration(null);\n    }\n\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\n    var seriesDalayValue = zrUtil.isFunction(seriesDalay) ? seriesDalay(null) : seriesDalay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n\n        var delay = zrUtil.isFunction(seriesDalay) ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          setToFinal: true,\n          delay: delay\n        });\n\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n\n    if (anyStateShowEndLabel(seriesModel)) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline; // series may be filtered.\n\n      var points = data_2.getLayout('points');\n\n      if (!points) {\n        polyline.removeTextContent();\n        this._endLabel = null;\n        return;\n      }\n\n      var endLabel = this._endLabel;\n\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      } // Find last non-NaN data to display data\n\n\n      var dataIndex = getLastIndexNotNull(points);\n\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n\n      this._endLabel = null;\n    }\n  };\n\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n\n      if (valueAnimation) {\n        labelInner(endLabel).setLabelText(value);\n      }\n    }\n  };\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n\n\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step, connectNulls);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step, connectNulls);\n      next = turnPointsIntoStep(diff.next, coordSys, step, connectNulls);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step, connectNulls);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.stopAnimation();\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.stopAnimation();\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    }\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    }; // Also animate the original points.\n    // If points reference is changed when turning into step line.\n\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    } // Stop previous animation.\n\n\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel); // If use attr directly in updateProps.\n\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\n\nexport default LineView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}