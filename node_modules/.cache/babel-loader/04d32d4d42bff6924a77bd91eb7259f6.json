{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert, map } from 'zrender/lib/core/util.js';\nimport { VISUAL_DIMENSIONS } from '../../util/types.js';\n\nvar DimensionUserOuput =\n/** @class */\nfunction () {\n  function DimensionUserOuput(encode, dimRequest) {\n    this._encode = encode;\n    this._schema = dimRequest;\n  }\n\n  DimensionUserOuput.prototype.get = function () {\n    return {\n      // Do not generate full dimension name until fist used.\n      fullDimensions: this._getFullDimensionNames(),\n      encode: this._encode\n    };\n  };\n  /**\n   * Get all data store dimension names.\n   * Theoretically a series data store is defined both by series and used dataset (if any).\n   * If some dimensions are omitted for performance reason in `this.dimensions`,\n   * the dimension name may not be auto-generated if user does not specify a dimension name.\n   * In this case, the dimension name is `null`/`undefined`.\n   */\n\n\n  DimensionUserOuput.prototype._getFullDimensionNames = function () {\n    if (!this._cachedDimNames) {\n      this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : [];\n    }\n\n    return this._cachedDimNames;\n  };\n\n  return DimensionUserOuput;\n}();\n\n;\nexport function summarizeDimensions(data, schema) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  var userOutputEncode = {};\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutputEncode, coordDim)[coordDimIndex] = data.getDimensionIndex(dimItem.name);\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.dataDimIndicesOnCoord = map(dataDimsOnCoord, function (dimName) {\n    return data.getDimensionInfo(dimName).storeDimIndex;\n  });\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  summary.userOutput = new DimensionUserOuput(userOutputEncode, schema);\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }","map":{"version":3,"names":["each","createHashMap","assert","map","VISUAL_DIMENSIONS","DimensionUserOuput","encode","dimRequest","_encode","_schema","prototype","get","fullDimensions","_getFullDimensionNames","_cachedDimNames","makeOutputDimensionNames","summarizeDimensions","data","schema","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutputEncode","dimensions","dimName","dimItem","getDimensionInfo","coordDim","process","env","NODE_ENV","coordDimIndex","getOrCreateEncodeArr","isExtraCoord","set","mayLabelDimType","type","getDimensionIndex","name","defaultTooltip","push","v","otherDim","encodeArr","dimIndex","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","concat","dataDimIndicesOnCoord","storeDimIndex","encodeLabel","label","length","slice","encodeTooltip","tooltip","userOutput","dim","hasOwnProperty","getDimensionTypeByAxis","axisType","dimType"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/data/helper/dimensionHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each, createHashMap, assert, map } from 'zrender/lib/core/util.js';\nimport { VISUAL_DIMENSIONS } from '../../util/types.js';\n\nvar DimensionUserOuput =\n/** @class */\nfunction () {\n  function DimensionUserOuput(encode, dimRequest) {\n    this._encode = encode;\n    this._schema = dimRequest;\n  }\n\n  DimensionUserOuput.prototype.get = function () {\n    return {\n      // Do not generate full dimension name until fist used.\n      fullDimensions: this._getFullDimensionNames(),\n      encode: this._encode\n    };\n  };\n  /**\n   * Get all data store dimension names.\n   * Theoretically a series data store is defined both by series and used dataset (if any).\n   * If some dimensions are omitted for performance reason in `this.dimensions`,\n   * the dimension name may not be auto-generated if user does not specify a dimension name.\n   * In this case, the dimension name is `null`/`undefined`.\n   */\n\n\n  DimensionUserOuput.prototype._getFullDimensionNames = function () {\n    if (!this._cachedDimNames) {\n      this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : [];\n    }\n\n    return this._cachedDimNames;\n  };\n\n  return DimensionUserOuput;\n}();\n\n;\nexport function summarizeDimensions(data, schema) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = [];\n  var userOutputEncode = {};\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      if (process.env.NODE_ENV !== 'production') {\n        assert(VISUAL_DIMENSIONS.get(coordDim) == null);\n      }\n\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutputEncode, coordDim)[coordDimIndex] = data.getDimensionIndex(dimItem.name);\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    VISUAL_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim];\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.dataDimIndicesOnCoord = map(dataDimsOnCoord, function (dimName) {\n    return data.getDimensionInfo(dimName).storeDimIndex;\n  });\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  summary.userOutput = new DimensionUserOuput(userOutputEncode, schema);\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n} // FIXME:TS should be type `AxisType`\n\n\nexport function getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     let dimensions = data.dimensions.slice();\n//     let valueType;\n//     let valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}