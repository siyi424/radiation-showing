{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Path from '../Path.js';\nimport * as polyHelper from '../helper/poly.js';\n\nvar PolylineShape = function () {\n  function PolylineShape() {\n    this.points = null;\n    this.percent = 1;\n    this.smooth = 0;\n    this.smoothConstraint = null;\n  }\n\n  return PolylineShape;\n}();\n\nexport { PolylineShape };\n\nvar Polyline = function (_super) {\n  __extends(Polyline, _super);\n\n  function Polyline(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Polyline.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  Polyline.prototype.getDefaultShape = function () {\n    return new PolylineShape();\n  };\n\n  Polyline.prototype.buildPath = function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  };\n\n  return Polyline;\n}(Path);\n\nPolyline.prototype.type = 'polyline';\nexport default Polyline;","map":{"version":3,"names":["__extends","Path","polyHelper","PolylineShape","points","percent","smooth","smoothConstraint","Polyline","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","type"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/graphic/shape/Polyline.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Path from '../Path.js';\nimport * as polyHelper from '../helper/poly.js';\nvar PolylineShape = (function () {\n    function PolylineShape() {\n        this.points = null;\n        this.percent = 1;\n        this.smooth = 0;\n        this.smoothConstraint = null;\n    }\n    return PolylineShape;\n}());\nexport { PolylineShape };\nvar Polyline = (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Polyline.prototype.getDefaultStyle = function () {\n        return {\n            stroke: '#000',\n            fill: null\n        };\n    };\n    Polyline.prototype.getDefaultShape = function () {\n        return new PolylineShape();\n    };\n    Polyline.prototype.buildPath = function (ctx, shape) {\n        polyHelper.buildPath(ctx, shape, false);\n    };\n    return Polyline;\n}(Path));\nPolyline.prototype.type = 'polyline';\nexport default Polyline;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,KAAKC,UAAZ,MAA4B,mBAA5B;;AACA,IAAIC,aAAa,GAAI,YAAY;EAC7B,SAASA,aAAT,GAAyB;IACrB,KAAKC,MAAL,GAAc,IAAd;IACA,KAAKC,OAAL,GAAe,CAAf;IACA,KAAKC,MAAL,GAAc,CAAd;IACA,KAAKC,gBAAL,GAAwB,IAAxB;EACH;;EACD,OAAOJ,aAAP;AACH,CARoB,EAArB;;AASA,SAASA,aAAT;;AACA,IAAIK,QAAQ,GAAI,UAAUC,MAAV,EAAkB;EAC9BT,SAAS,CAACQ,QAAD,EAAWC,MAAX,CAAT;;EACA,SAASD,QAAT,CAAkBE,IAAlB,EAAwB;IACpB,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;EACH;;EACDF,QAAQ,CAACI,SAAT,CAAmBC,eAAnB,GAAqC,YAAY;IAC7C,OAAO;MACHC,MAAM,EAAE,MADL;MAEHC,IAAI,EAAE;IAFH,CAAP;EAIH,CALD;;EAMAP,QAAQ,CAACI,SAAT,CAAmBI,eAAnB,GAAqC,YAAY;IAC7C,OAAO,IAAIb,aAAJ,EAAP;EACH,CAFD;;EAGAK,QAAQ,CAACI,SAAT,CAAmBK,SAAnB,GAA+B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;IACjDjB,UAAU,CAACe,SAAX,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC,KAAjC;EACH,CAFD;;EAGA,OAAOX,QAAP;AACH,CAlBe,CAkBdP,IAlBc,CAAhB;;AAmBAO,QAAQ,CAACI,SAAT,CAAmBQ,IAAnB,GAA0B,UAA1B;AACA,eAAeZ,QAAf"},"metadata":{},"sourceType":"module"}