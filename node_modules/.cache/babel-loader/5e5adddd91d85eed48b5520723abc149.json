{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport AxisView from './AxisView.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport { getECData } from '../../util/innerStore.js';\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar AngleAxisView =\n/** @class */\nfunction (_super) {\n  __extends(AngleAxisView, _super);\n\n  function AngleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AngleAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n\n  AngleAxisView.prototype.render = function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      labelItem = zrUtil.clone(labelItem);\n      var scale = angleAxis.scale;\n      var tickValue = scale.type === 'ordinal' ? scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n      labelItem.coord = angleAxis.dataToCoord(tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get([name, 'show']) && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        angelAxisElementsBuilders[name](this.group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\n      }\n    }, this);\n  };\n\n  AngleAxisView.type = 'angleAxis';\n  return AngleAxisView;\n}(AxisView);\n\nvar angelAxisElementsBuilders = {\n  axisLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel(['axisLine', 'lineStyle']); // extent id of the axis radius (r0 and r)\n\n    var rId = getRadiusIdx(polar);\n    var r0Id = rId ? 0 : 1;\n    var shape;\n\n    if (radiusExtent[r0Id] === 0) {\n      shape = new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    } else {\n      shape = new graphic.Ring({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId],\n          r0: radiusExtent[r0Id]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    }\n\n    shape.style.fill = null;\n    group.add(shape);\n  },\n  axisTick: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      })\n    }));\n  },\n  minorTick: function (group, angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var minorTickModel = angleAxisModel.getModel('minorTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      }))\n    }));\n  },\n  axisLabel: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin');\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue]) {\n        var rawCategoryItem = rawCategoryData[tickValue];\n\n        if (zrUtil.isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n          labelModel = new Model(rawCategoryItem.textStyle, commonLabelModel, commonLabelModel.ecModel);\n        }\n      }\n\n      var textEl = new graphic.Text({\n        silent: AxisBuilder.isLabelSilent(angleAxisModel),\n        style: createTextStyle(labelModel, {\n          x: p[0],\n          y: p[1],\n          fill: labelModel.getTextColor() || angleAxisModel.get(['axisLine', 'lineStyle', 'color']),\n          text: labelItem.formattedLabel,\n          align: labelTextAlign,\n          verticalAlign: labelTextVerticalAlign\n        })\n      });\n      group.add(textEl); // Pack data for mouse event\n\n      if (triggerEvent) {\n        var eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\n        eventData.targetType = 'axisLabel';\n        eventData.value = labelItem.rawLabel;\n        getECData(textEl).eventData = eventData;\n      }\n    }, this);\n  },\n  splitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n  minorSplitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: lineStyleModel.getLineStyle(),\n      silent: true,\n      z: angleAxisModel.get('z')\n    }));\n  },\n  splitArea: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1, len = ticksAngles.length; i <= len; i++) {\n      var coord = i === len ? ticksAngles[0].coord : ticksAngles[i].coord;\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\nexport default AngleAxisView;","map":{"version":3,"names":["__extends","zrUtil","graphic","createTextStyle","Model","AxisView","AxisBuilder","getECData","elementList","getAxisLineShape","polar","rExtent","angle","slice","reverse","start","coordToPoint","end","x1","y1","x2","y2","getRadiusIdx","radiusAxis","getRadiusAxis","inverse","fixAngleOverlap","list","firstItem","lastItem","length","Math","abs","coord","pop","AngleAxisView","_super","_this","apply","arguments","type","axisPointerClass","prototype","render","angleAxisModel","ecModel","group","removeAll","get","angleAxis","axis","radiusExtent","getExtent","ticksAngles","getTicksCoords","minorTickAngles","getMinorTicksCoords","labels","map","getViewLabels","labelItem","clone","scale","tickValue","getRawOrdinalNumber","dataToCoord","each","name","isBlank","angelAxisElementsBuilders","axisLine","lineStyleModel","getModel","rId","r0Id","shape","Circle","cx","cy","r","style","getLineStyle","z2","silent","Ring","r0","fill","add","axisTick","tickModel","tickLen","radius","lines","tickAngleItem","Line","mergePath","defaults","stroke","minorTick","tickAngles","minorTickModel","i","k","push","axisLabel","rawCategoryData","getCategories","commonLabelModel","labelMargin","triggerEvent","idx","labelModel","p","labelTextAlign","labelTextVerticalAlign","rawCategoryItem","isObject","textStyle","textEl","Text","isLabelSilent","x","y","getTextColor","text","formattedLabel","align","verticalAlign","eventData","makeAxisEventDataBase","targetType","value","rawLabel","splitLine","splitLineModel","lineColors","lineCount","Array","splitLines","colorIndex","z","minorSplitLine","minorSplitLineModel","splitArea","splitAreaModel","areaStyleModel","areaColors","splitAreas","RADIAN","PI","prevAngle","min","r1","max","clockwise","len","Sector","startAngle","endAngle","getAreaStyle"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/axis/AngleAxisView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport AxisView from './AxisView.js';\nimport AxisBuilder from './AxisBuilder.js';\nimport { getECData } from '../../util/innerStore.js';\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar AngleAxisView =\n/** @class */\nfunction (_super) {\n  __extends(AngleAxisView, _super);\n\n  function AngleAxisView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = AngleAxisView.type;\n    _this.axisPointerClass = 'PolarAxisPointer';\n    return _this;\n  }\n\n  AngleAxisView.prototype.render = function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      labelItem = zrUtil.clone(labelItem);\n      var scale = angleAxis.scale;\n      var tickValue = scale.type === 'ordinal' ? scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n      labelItem.coord = angleAxis.dataToCoord(tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get([name, 'show']) && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        angelAxisElementsBuilders[name](this.group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\n      }\n    }, this);\n  };\n\n  AngleAxisView.type = 'angleAxis';\n  return AngleAxisView;\n}(AxisView);\n\nvar angelAxisElementsBuilders = {\n  axisLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel(['axisLine', 'lineStyle']); // extent id of the axis radius (r0 and r)\n\n    var rId = getRadiusIdx(polar);\n    var r0Id = rId ? 0 : 1;\n    var shape;\n\n    if (radiusExtent[r0Id] === 0) {\n      shape = new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    } else {\n      shape = new graphic.Ring({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId],\n          r0: radiusExtent[r0Id]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    }\n\n    shape.style.fill = null;\n    group.add(shape);\n  },\n  axisTick: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      })\n    }));\n  },\n  minorTick: function (group, angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var minorTickModel = angleAxisModel.getModel('minorTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\n      }))\n    }));\n  },\n  axisLabel: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin');\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue]) {\n        var rawCategoryItem = rawCategoryData[tickValue];\n\n        if (zrUtil.isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n          labelModel = new Model(rawCategoryItem.textStyle, commonLabelModel, commonLabelModel.ecModel);\n        }\n      }\n\n      var textEl = new graphic.Text({\n        silent: AxisBuilder.isLabelSilent(angleAxisModel),\n        style: createTextStyle(labelModel, {\n          x: p[0],\n          y: p[1],\n          fill: labelModel.getTextColor() || angleAxisModel.get(['axisLine', 'lineStyle', 'color']),\n          text: labelItem.formattedLabel,\n          align: labelTextAlign,\n          verticalAlign: labelTextVerticalAlign\n        })\n      });\n      group.add(textEl); // Pack data for mouse event\n\n      if (triggerEvent) {\n        var eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\n        eventData.targetType = 'axisLabel';\n        eventData.value = labelItem.rawLabel;\n        getECData(textEl).eventData = eventData;\n      }\n    }, this);\n  },\n  splitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n  minorSplitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    group.add(graphic.mergePath(lines, {\n      style: lineStyleModel.getLineStyle(),\n      silent: true,\n      z: angleAxisModel.get('z')\n    }));\n  },\n  splitArea: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1, len = ticksAngles.length; i <= len; i++) {\n      var coord = i === len ? ticksAngles[0].coord : ticksAngles[i].coord;\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n};\nexport default AngleAxisView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}