{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/pieHelper.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n        if (startAngle != null) {\n          sector.setShape({\n            startAngle: startAngle,\n            endAngle: startAngle\n          });\n          graphic.initProps(sector, {\n            shape: {\n              startAngle: layout.startAngle,\n              endAngle: layout.endAngle\n            }\n          }, seriesModel, idx);\n        } else {\n          sector.shape.endAngle = layout.startAngle;\n          graphic.updateProps(sector, {\n            shape: {\n              endAngle: layout.endAngle\n            }\n          }, seriesModel, idx);\n        }\n      }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;","map":{"version":3,"names":["__extends","extend","retrieve3","graphic","setStatesStylesFromModel","toggleHoverEmphasis","ChartView","labelLayout","setLabelLineStyle","getLabelLineStatesModels","setLabelStyle","getLabelStatesModels","getSectorCornerRadius","saveOldStyle","getBasicPieLayout","PiePiece","_super","data","idx","startAngle","_this","call","z2","text","Text","setTextContent","updateData","prototype","firstCreate","sector","seriesModel","hostModel","itemModel","getItemModel","emphasisModel","getModel","layout","getItemLayout","sectorShape","isNaN","setShape","animationType","getShallow","ecModel","ssr","initProps","scaleX","scaleY","dataIndex","isFrom","originX","cx","originY","cy","shape","r","r0","endAngle","updateProps","useStyle","getItemVisual","midAngle","offset","get","dx","Math","cos","dy","sin","cursorStyle","attr","_updateLabel","ensureState","x","y","labelLine","getTextGuideLine","labelText","getTextContent","labelLineModel","style","visualColor","fill","visualOpacity","opacity","labelFetcher","labelDataIndex","inheritColor","defaultOpacity","defaultText","getFormattedLabel","getName","setTextConfig","position","rotation","labelPosition","removeTextGuideLine","polyline","Polyline","setTextGuideLine","stroke","Sector","PieView","apply","arguments","ignoreLabelLineUpdate","render","api","payload","getData","oldData","_data","group","count","s","_emptyCircleSector","remove","getItemStyle","add","diff","piePiece","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","off","removeElementWithFadeOut","execute","dispose","containPoint","point","itemLayout","radius","sqrt","type"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/pie/PieView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { extend, retrieve3 } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport labelLayout from './labelLayout.js';\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getSectorCornerRadius } from '../helper/pieHelper.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\nimport { getBasicPieLayout } from './pieLayout.js';\n/**\n * Piece of pie including Sector, Label, LabelLine\n */\n\nvar PiePiece =\n/** @class */\nfunction (_super) {\n  __extends(PiePiece, _super);\n\n  function PiePiece(data, idx, startAngle) {\n    var _this = _super.call(this) || this;\n\n    _this.z2 = 2;\n    var text = new graphic.Text();\n\n    _this.setTextContent(text);\n\n    _this.updateData(data, idx, startAngle, true);\n\n    return _this;\n  }\n\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\n    var sector = this;\n    var seriesModel = data.hostModel;\n    var itemModel = data.getItemModel(idx);\n    var emphasisModel = itemModel.getModel('emphasis');\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\n    // see `setItemLayout` in `pieLayout.ts`.\n\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\n\n    if (isNaN(sectorShape.startAngle)) {\n      // Use NaN shape to avoid drawing shape.\n      sector.setShape(sectorShape);\n      return;\n    }\n\n    if (firstCreate) {\n      sector.setShape(sectorShape);\n      var animationType = seriesModel.getShallow('animationType');\n\n      if (seriesModel.ecModel.ssr) {\n        // Use scale animation in SSR mode(opacity?)\n        // Because CSS SVG animation doesn't support very customized shape animation.\n        graphic.initProps(sector, {\n          scaleX: 0,\n          scaleY: 0\n        }, seriesModel, {\n          dataIndex: idx,\n          isFrom: true\n        });\n        sector.originX = sectorShape.cx;\n        sector.originY = sectorShape.cy;\n      } else if (animationType === 'scale') {\n        sector.shape.r = layout.r0;\n        graphic.initProps(sector, {\n          shape: {\n            r: layout.r\n          }\n        }, seriesModel, idx);\n      } // Expansion\n      else {\n          if (startAngle != null) {\n            sector.setShape({\n              startAngle: startAngle,\n              endAngle: startAngle\n            });\n            graphic.initProps(sector, {\n              shape: {\n                startAngle: layout.startAngle,\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          } else {\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n              shape: {\n                endAngle: layout.endAngle\n              }\n            }, seriesModel, idx);\n          }\n        }\n    } else {\n      saveOldStyle(sector); // Transition animation from the old shape\n\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n\n    sector.useStyle(data.getItemVisual(idx, 'style'));\n    setStatesStylesFromModel(sector, itemModel);\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var offset = seriesModel.get('selectedOffset');\n    var dx = Math.cos(midAngle) * offset;\n    var dy = Math.sin(midAngle) * offset;\n    var cursorStyle = itemModel.getShallow('cursor');\n    cursorStyle && sector.attr('cursor', cursorStyle);\n\n    this._updateLabel(seriesModel, data, idx);\n\n    sector.ensureState('emphasis').shape = extend({\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\n    extend(sector.ensureState('select'), {\n      x: dx,\n      y: dy,\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\n    });\n    extend(sector.ensureState('blur'), {\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\n    });\n    var labelLine = sector.getTextGuideLine();\n    var labelText = sector.getTextContent();\n    labelLine && extend(labelLine.ensureState('select'), {\n      x: dx,\n      y: dy\n    }); // TODO: needs dx, dy in zrender?\n\n    extend(labelText.ensureState('select'), {\n      x: dx,\n      y: dy\n    });\n    toggleHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  };\n\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\n    var sector = this;\n    var itemModel = data.getItemModel(idx);\n    var labelLineModel = itemModel.getModel('labelLine');\n    var style = data.getItemVisual(idx, 'style');\n    var visualColor = style && style.fill;\n    var visualOpacity = style && style.opacity;\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\n      labelFetcher: data.hostModel,\n      labelDataIndex: idx,\n      inheritColor: visualColor,\n      defaultOpacity: visualOpacity,\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\n    });\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\n\n    sector.setTextConfig({\n      // reset position, rotation\n      position: null,\n      rotation: null\n    }); // Make sure update style on labelText after setLabelStyle.\n    // Because setLabelStyle will replace a new style on it.\n\n    labelText.attr({\n      z2: 10\n    });\n    var labelPosition = seriesModel.get(['label', 'position']);\n\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\n      sector.removeTextGuideLine();\n    } else {\n      var polyline = this.getTextGuideLine();\n\n      if (!polyline) {\n        polyline = new graphic.Polyline();\n        this.setTextGuideLine(polyline);\n      } // Default use item visual color\n\n\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\n        stroke: visualColor,\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\n      });\n    }\n  };\n\n  return PiePiece;\n}(graphic.Sector); // Pie view\n\n\nvar PieView =\n/** @class */\nfunction (_super) {\n  __extends(PieView, _super);\n\n  function PieView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.ignoreLabelLineUpdate = true;\n    return _this;\n  }\n\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var startAngle; // First render\n\n    if (!oldData && data.count() > 0) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      if (shape) {\n        startAngle = shape.startAngle;\n      }\n    } // remove empty-circle if it exists\n\n\n    if (this._emptyCircleSector) {\n      group.remove(this._emptyCircleSector);\n    } // when all data are filtered, show lightgray empty circle\n\n\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\n      var sector = new graphic.Sector({\n        shape: getBasicPieLayout(seriesModel, api)\n      });\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\n      this._emptyCircleSector = sector;\n      group.add(sector);\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx, startAngle);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx, startAngle);\n      piePiece.off('click');\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\n    }).execute();\n    labelLayout(seriesModel); // Always use initial animation.\n\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\n      this._data = data;\n    }\n  };\n\n  PieView.prototype.dispose = function () {};\n\n  PieView.prototype.containPoint = function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n\n  PieView.type = 'pie';\n  return PieView;\n}(ChartView);\n\nexport default PieView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}