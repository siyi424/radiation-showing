{"ast":null,"code":"import PathProxy from '../core/PathProxy.js';\nimport * as line from './line.js';\nimport * as cubic from './cubic.js';\nimport * as quadratic from './quadratic.js';\nimport * as arc from './arc.js';\nimport * as curve from '../core/curve.js';\nimport windingLine from './windingLine.js';\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_ = void 0;\n    var y1_ = void 0;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i];\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema === 2) {\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n}\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var dTheta = Math.abs(startAngle - endAngle);\n\n  if (dTheta < 1e-4) {\n    return 0;\n  }\n\n  if (dTheta >= PI2 - 1e-4) {\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (startAngle > endAngle) {\n    var tmp_1 = startAngle;\n    startAngle = endAngle;\n    endAngle = tmp_1;\n  }\n\n  if (startAngle < 0) {\n    startAngle += PI2;\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(path, lineWidth, isStroke, x, y) {\n  var data = path.data;\n  var len = path.len();\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n  var x1;\n  var y1;\n\n  for (var i = 0; i < len;) {\n    var cmd = data[i++];\n    var isFirst = i === 1;\n\n    if (cmd === CMD.M && i > 1) {\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      }\n    }\n\n    if (isFirst) {\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        i += 1;\n        var anticlockwise = !!(1 - data[i++]);\n        x1 = Math.cos(theta) * rx + cx;\n        y1 = Math.sin(theta) * ry + cy;\n\n        if (!isFirst) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          x0 = x1;\n          y0 = y1;\n        }\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        x1 = x0 + width;\n        y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingLine(xi, yi, x0, y0, x, y);\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nexport function contain(pathProxy, x, y) {\n  return containPath(pathProxy, 0, false, x, y);\n}\nexport function containStroke(pathProxy, lineWidth, x, y) {\n  return containPath(pathProxy, lineWidth, true, x, y);\n}","map":{"version":3,"names":["PathProxy","line","cubic","quadratic","arc","curve","windingLine","CMD","PI2","Math","PI","EPSILON","isAroundEqual","a","b","abs","roots","extrema","swapExtrema","tmp","windingCubic","x0","y0","x1","y1","x2","y2","x3","y3","x","y","nRoots","cubicRootAt","w","nExtrema","y0_","y1_","i","t","unit","x_","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","windingArc","cx","cy","r","startAngle","endAngle","anticlockwise","sqrt","dTheta","dir","tmp_1","angle","atan2","containPath","path","lineWidth","isStroke","data","len","xi","yi","cmd","isFirst","M","L","containStroke","C","Q","A","rx","ry","theta","cos","sin","_x","R","width","height","Z","contain","pathProxy"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/contain/path.js"],"sourcesContent":["import PathProxy from '../core/PathProxy.js';\nimport * as line from './line.js';\nimport * as cubic from './cubic.js';\nimport * as quadratic from './quadratic.js';\nimport * as arc from './arc.js';\nimport * as curve from '../core/curve.js';\nimport windingLine from './windingLine.js';\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\nfunction isAroundEqual(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\nfunction swapExtrema() {\n    var tmp = extrema[0];\n    extrema[0] = extrema[1];\n    extrema[1] = tmp;\n}\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n    if ((y > y0 && y > y1 && y > y2 && y > y3)\n        || (y < y0 && y < y1 && y < y2 && y < y3)) {\n        return 0;\n    }\n    var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n    if (nRoots === 0) {\n        return 0;\n    }\n    else {\n        var w = 0;\n        var nExtrema = -1;\n        var y0_ = void 0;\n        var y1_ = void 0;\n        for (var i = 0; i < nRoots; i++) {\n            var t = roots[i];\n            var unit = (t === 0 || t === 1) ? 0.5 : 1;\n            var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n            if (x_ < x) {\n                continue;\n            }\n            if (nExtrema < 0) {\n                nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                if (extrema[1] < extrema[0] && nExtrema > 1) {\n                    swapExtrema();\n                }\n                y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                if (nExtrema > 1) {\n                    y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                }\n            }\n            if (nExtrema === 2) {\n                if (t < extrema[0]) {\n                    w += y0_ < y0 ? unit : -unit;\n                }\n                else if (t < extrema[1]) {\n                    w += y1_ < y0_ ? unit : -unit;\n                }\n                else {\n                    w += y3 < y1_ ? unit : -unit;\n                }\n            }\n            else {\n                if (t < extrema[0]) {\n                    w += y0_ < y0 ? unit : -unit;\n                }\n                else {\n                    w += y3 < y0_ ? unit : -unit;\n                }\n            }\n        }\n        return w;\n    }\n}\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n    if ((y > y0 && y > y1 && y > y2)\n        || (y < y0 && y < y1 && y < y2)) {\n        return 0;\n    }\n    var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n    if (nRoots === 0) {\n        return 0;\n    }\n    else {\n        var t = curve.quadraticExtremum(y0, y1, y2);\n        if (t >= 0 && t <= 1) {\n            var w = 0;\n            var y_ = curve.quadraticAt(y0, y1, y2, t);\n            for (var i = 0; i < nRoots; i++) {\n                var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                if (x_ < x) {\n                    continue;\n                }\n                if (roots[i] < t) {\n                    w += y_ < y0 ? unit : -unit;\n                }\n                else {\n                    w += y2 < y_ ? unit : -unit;\n                }\n            }\n            return w;\n        }\n        else {\n            var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n            var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n            if (x_ < x) {\n                return 0;\n            }\n            return y2 < y0 ? unit : -unit;\n        }\n    }\n}\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n    y -= cy;\n    if (y > r || y < -r) {\n        return 0;\n    }\n    var tmp = Math.sqrt(r * r - y * y);\n    roots[0] = -tmp;\n    roots[1] = tmp;\n    var dTheta = Math.abs(startAngle - endAngle);\n    if (dTheta < 1e-4) {\n        return 0;\n    }\n    if (dTheta >= PI2 - 1e-4) {\n        startAngle = 0;\n        endAngle = PI2;\n        var dir = anticlockwise ? 1 : -1;\n        if (x >= roots[0] + cx && x <= roots[1] + cx) {\n            return dir;\n        }\n        else {\n            return 0;\n        }\n    }\n    if (startAngle > endAngle) {\n        var tmp_1 = startAngle;\n        startAngle = endAngle;\n        endAngle = tmp_1;\n    }\n    if (startAngle < 0) {\n        startAngle += PI2;\n        endAngle += PI2;\n    }\n    var w = 0;\n    for (var i = 0; i < 2; i++) {\n        var x_ = roots[i];\n        if (x_ + cx > x) {\n            var angle = Math.atan2(y, x_);\n            var dir = anticlockwise ? 1 : -1;\n            if (angle < 0) {\n                angle = PI2 + angle;\n            }\n            if ((angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)) {\n                if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                    dir = -dir;\n                }\n                w += dir;\n            }\n        }\n    }\n    return w;\n}\nfunction containPath(path, lineWidth, isStroke, x, y) {\n    var data = path.data;\n    var len = path.len();\n    var w = 0;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n    var x1;\n    var y1;\n    for (var i = 0; i < len;) {\n        var cmd = data[i++];\n        var isFirst = i === 1;\n        if (cmd === CMD.M && i > 1) {\n            if (!isStroke) {\n                w += windingLine(xi, yi, x0, y0, x, y);\n            }\n        }\n        if (isFirst) {\n            xi = data[i];\n            yi = data[i + 1];\n            x0 = xi;\n            y0 = yi;\n        }\n        switch (cmd) {\n            case CMD.M:\n                x0 = data[i++];\n                y0 = data[i++];\n                xi = x0;\n                yi = y0;\n                break;\n            case CMD.L:\n                if (isStroke) {\n                    if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                        return true;\n                    }\n                }\n                else {\n                    w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                }\n                xi = data[i++];\n                yi = data[i++];\n                break;\n            case CMD.C:\n                if (isStroke) {\n                    if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n                        return true;\n                    }\n                }\n                else {\n                    w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n                }\n                xi = data[i++];\n                yi = data[i++];\n                break;\n            case CMD.Q:\n                if (isStroke) {\n                    if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n                        return true;\n                    }\n                }\n                else {\n                    w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n                }\n                xi = data[i++];\n                yi = data[i++];\n                break;\n            case CMD.A:\n                var cx = data[i++];\n                var cy = data[i++];\n                var rx = data[i++];\n                var ry = data[i++];\n                var theta = data[i++];\n                var dTheta = data[i++];\n                i += 1;\n                var anticlockwise = !!(1 - data[i++]);\n                x1 = Math.cos(theta) * rx + cx;\n                y1 = Math.sin(theta) * ry + cy;\n                if (!isFirst) {\n                    w += windingLine(xi, yi, x1, y1, x, y);\n                }\n                else {\n                    x0 = x1;\n                    y0 = y1;\n                }\n                var _x = (x - cx) * ry / rx + cx;\n                if (isStroke) {\n                    if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n                        return true;\n                    }\n                }\n                else {\n                    w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n                }\n                xi = Math.cos(theta + dTheta) * rx + cx;\n                yi = Math.sin(theta + dTheta) * ry + cy;\n                break;\n            case CMD.R:\n                x0 = xi = data[i++];\n                y0 = yi = data[i++];\n                var width = data[i++];\n                var height = data[i++];\n                x1 = x0 + width;\n                y1 = y0 + height;\n                if (isStroke) {\n                    if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                        || line.containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                        || line.containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                        || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n                        return true;\n                    }\n                }\n                else {\n                    w += windingLine(x1, y0, x1, y1, x, y);\n                    w += windingLine(x0, y1, x0, y0, x, y);\n                }\n                break;\n            case CMD.Z:\n                if (isStroke) {\n                    if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n                        return true;\n                    }\n                }\n                else {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                xi = x0;\n                yi = y0;\n                break;\n        }\n    }\n    if (!isStroke && !isAroundEqual(yi, y0)) {\n        w += windingLine(xi, yi, x0, y0, x, y) || 0;\n    }\n    return w !== 0;\n}\nexport function contain(pathProxy, x, y) {\n    return containPath(pathProxy, 0, false, x, y);\n}\nexport function containStroke(pathProxy, lineWidth, x, y) {\n    return containPath(pathProxy, lineWidth, true, x, y);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}