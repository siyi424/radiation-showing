{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport VisualMapping from '../../visual/VisualMapping.js';\nexport default function sankeyVisual(ecModel) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue_1 = Infinity;\n      var maxValue_1 = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue_1) {\n          minValue_1 = nodeValue;\n        }\n\n        if (nodeValue > maxValue_1) {\n          maxValue_1 = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue_1, maxValue_1],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get(['itemStyle', 'color']);\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n          node.setVisual('style', {\n            fill: customColor\n          });\n        } else {\n          node.setVisual('color', mapValueToColor);\n          node.setVisual('style', {\n            fill: mapValueToColor\n          });\n        }\n      });\n    }\n  });\n}","map":{"version":3,"names":["zrUtil","VisualMapping","sankeyVisual","ecModel","eachSeriesByType","seriesModel","graph","getGraph","nodes","length","minValue_1","Infinity","maxValue_1","each","node","nodeValue","getLayout","value","mapping","type","mappingMethod","dataExtent","visual","get","mapValueToColor","mapValueToVisual","customColor","getModel","setVisual","fill"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/sankey/sankeyVisual.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport VisualMapping from '../../visual/VisualMapping.js';\nexport default function sankeyVisual(ecModel) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue_1 = Infinity;\n      var maxValue_1 = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue_1) {\n          minValue_1 = nodeValue;\n        }\n\n        if (nodeValue > maxValue_1) {\n          maxValue_1 = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue_1, maxValue_1],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get(['itemStyle', 'color']);\n\n        if (customColor != null) {\n          node.setVisual('color', customColor);\n          node.setVisual('style', {\n            fill: customColor\n          });\n        } else {\n          node.setVisual('color', mapValueToColor);\n          node.setVisual('style', {\n            fill: mapValueToColor\n          });\n        }\n      });\n    }\n  });\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,0BAAxB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,eAAe,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;EAC5CA,OAAO,CAACC,gBAAR,CAAyB,QAAzB,EAAmC,UAAUC,WAAV,EAAuB;IACxD,IAAIC,KAAK,GAAGD,WAAW,CAACE,QAAZ,EAAZ;IACA,IAAIC,KAAK,GAAGF,KAAK,CAACE,KAAlB;;IAEA,IAAIA,KAAK,CAACC,MAAV,EAAkB;MAChB,IAAIC,UAAU,GAAGC,QAAjB;MACA,IAAIC,UAAU,GAAG,CAACD,QAAlB;MACAX,MAAM,CAACa,IAAP,CAAYL,KAAZ,EAAmB,UAAUM,IAAV,EAAgB;QACjC,IAAIC,SAAS,GAAGD,IAAI,CAACE,SAAL,GAAiBC,KAAjC;;QAEA,IAAIF,SAAS,GAAGL,UAAhB,EAA4B;UAC1BA,UAAU,GAAGK,SAAb;QACD;;QAED,IAAIA,SAAS,GAAGH,UAAhB,EAA4B;UAC1BA,UAAU,GAAGG,SAAb;QACD;MACF,CAVD;MAWAf,MAAM,CAACa,IAAP,CAAYL,KAAZ,EAAmB,UAAUM,IAAV,EAAgB;QACjC,IAAII,OAAO,GAAG,IAAIjB,aAAJ,CAAkB;UAC9BkB,IAAI,EAAE,OADwB;UAE9BC,aAAa,EAAE,QAFe;UAG9BC,UAAU,EAAE,CAACX,UAAD,EAAaE,UAAb,CAHkB;UAI9BU,MAAM,EAAEjB,WAAW,CAACkB,GAAZ,CAAgB,OAAhB;QAJsB,CAAlB,CAAd;QAMA,IAAIC,eAAe,GAAGN,OAAO,CAACO,gBAAR,CAAyBX,IAAI,CAACE,SAAL,GAAiBC,KAA1C,CAAtB;QACA,IAAIS,WAAW,GAAGZ,IAAI,CAACa,QAAL,GAAgBJ,GAAhB,CAAoB,CAAC,WAAD,EAAc,OAAd,CAApB,CAAlB;;QAEA,IAAIG,WAAW,IAAI,IAAnB,EAAyB;UACvBZ,IAAI,CAACc,SAAL,CAAe,OAAf,EAAwBF,WAAxB;UACAZ,IAAI,CAACc,SAAL,CAAe,OAAf,EAAwB;YACtBC,IAAI,EAAEH;UADgB,CAAxB;QAGD,CALD,MAKO;UACLZ,IAAI,CAACc,SAAL,CAAe,OAAf,EAAwBJ,eAAxB;UACAV,IAAI,CAACc,SAAL,CAAe,OAAf,EAAwB;YACtBC,IAAI,EAAEL;UADgB,CAAxB;QAGD;MACF,CArBD;IAsBD;EACF,CAzCD;AA0CD"},"metadata":{},"sourceType":"module"}