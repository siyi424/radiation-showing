{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nexport function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  } // TODO: TYPE\n\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = inner(axisView).splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x = void 0;\n    var y = void 0;\n    var width = void 0;\n    var height = void 0;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      autoBatch: true,\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  inner(axisView).splitAreaColors = newSplitAreaColors;\n}\nexport function rectCoordAxisHandleRemove(axisView) {\n  inner(axisView).splitAreaColors = null;\n}","map":{"version":3,"names":["zrUtil","graphic","makeInner","inner","rectCoordAxisBuildSplitArea","axisView","axisGroup","axisModel","gridModel","axis","scale","isBlank","splitAreaModel","getModel","areaStyleModel","areaColors","get","gridRect","coordinateSystem","getRect","ticksCoords","getTicksCoords","tickModel","clamp","length","areaColorsLen","lastSplitAreaColors","splitAreaColors","newSplitAreaColors","createHashMap","colorIndex","i","cIndex","tickValue","prev","toGlobalCoord","coord","areaStyle","getAreaStyle","isArray","tickCoord","x","y","width","height","isHorizontal","set","add","Rect","anid","shape","style","defaults","fill","autoBatch","silent","rectCoordAxisHandleRemove"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/axis/axisSplitHelper.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { makeInner } from '../../util/model.js';\nvar inner = makeInner();\nexport function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  } // TODO: TYPE\n\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = inner(axisView).splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x = void 0;\n    var y = void 0;\n    var width = void 0;\n    var height = void 0;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      autoBatch: true,\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  inner(axisView).splitAreaColors = newSplitAreaColors;\n}\nexport function rectCoordAxisHandleRemove(axisView) {\n  inner(axisView).splitAreaColors = null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}