{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Displayable, { DEFAULT_COMMON_STYLE, DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable.js';\nimport PathProxy from '../core/PathProxy.js';\nimport * as pathContain from '../contain/path.js';\nimport { defaults, keys, extend, clone, isString, createObject } from '../core/util.js';\nimport { lum } from '../tool/color.js';\nimport { DARK_LABEL_COLOR, LIGHT_LABEL_COLOR, DARK_MODE_THRESHOLD, LIGHTER_LABEL_COLOR } from '../config.js';\nimport { REDRAW_BIT, SHAPE_CHANGED_BIT, STYLE_CHANGED_BIT } from './constants.js';\nimport { TRANSFORMABLE_PROPS } from '../core/Transformable.js';\nexport var DEFAULT_PATH_STYLE = defaults({\n  fill: '#000',\n  stroke: null,\n  strokePercent: 1,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  lineDashOffset: 0,\n  lineWidth: 1,\n  lineCap: 'butt',\n  miterLimit: 10,\n  strokeNoScale: false,\n  strokeFirst: false\n}, DEFAULT_COMMON_STYLE);\nexport var DEFAULT_PATH_ANIMATION_PROPS = {\n  style: defaults({\n    fill: true,\n    stroke: true,\n    strokePercent: true,\n    fillOpacity: true,\n    strokeOpacity: true,\n    lineDashOffset: true,\n    lineWidth: true,\n    miterLimit: true\n  }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar pathCopyParams = TRANSFORMABLE_PROPS.concat(['invisible', 'culling', 'z', 'z2', 'zlevel', 'parent']);\n\nvar Path = function (_super) {\n  __extends(Path, _super);\n\n  function Path(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Path.prototype.update = function () {\n    var _this = this;\n\n    _super.prototype.update.call(this);\n\n    var style = this.style;\n\n    if (style.decal) {\n      var decalEl = this._decalEl = this._decalEl || new Path();\n\n      if (decalEl.buildPath === Path.prototype.buildPath) {\n        decalEl.buildPath = function (ctx) {\n          _this.buildPath(ctx, _this.shape);\n        };\n      }\n\n      decalEl.silent = true;\n      var decalElStyle = decalEl.style;\n\n      for (var key in style) {\n        if (decalElStyle[key] !== style[key]) {\n          decalElStyle[key] = style[key];\n        }\n      }\n\n      decalElStyle.fill = style.fill ? style.decal : null;\n      decalElStyle.decal = null;\n      decalElStyle.shadowColor = null;\n      style.strokeFirst && (decalElStyle.stroke = null);\n\n      for (var i = 0; i < pathCopyParams.length; ++i) {\n        decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\n      }\n\n      decalEl.__dirty |= REDRAW_BIT;\n    } else if (this._decalEl) {\n      this._decalEl = null;\n    }\n  };\n\n  Path.prototype.getDecalElement = function () {\n    return this._decalEl;\n  };\n\n  Path.prototype._init = function (props) {\n    var keysArr = keys(props);\n    this.shape = this.getDefaultShape();\n    var defaultStyle = this.getDefaultStyle();\n\n    if (defaultStyle) {\n      this.useStyle(defaultStyle);\n    }\n\n    for (var i = 0; i < keysArr.length; i++) {\n      var key = keysArr[i];\n      var value = props[key];\n\n      if (key === 'style') {\n        if (!this.style) {\n          this.useStyle(value);\n        } else {\n          extend(this.style, value);\n        }\n      } else if (key === 'shape') {\n        extend(this.shape, value);\n      } else {\n        _super.prototype.attrKV.call(this, key, value);\n      }\n    }\n\n    if (!this.style) {\n      this.useStyle({});\n    }\n  };\n\n  Path.prototype.getDefaultStyle = function () {\n    return null;\n  };\n\n  Path.prototype.getDefaultShape = function () {\n    return {};\n  };\n\n  Path.prototype.canBeInsideText = function () {\n    return this.hasFill();\n  };\n\n  Path.prototype.getInsideTextFill = function () {\n    var pathFill = this.style.fill;\n\n    if (pathFill !== 'none') {\n      if (isString(pathFill)) {\n        var fillLum = lum(pathFill, 0);\n\n        if (fillLum > 0.5) {\n          return DARK_LABEL_COLOR;\n        } else if (fillLum > 0.2) {\n          return LIGHTER_LABEL_COLOR;\n        }\n\n        return LIGHT_LABEL_COLOR;\n      } else if (pathFill) {\n        return LIGHT_LABEL_COLOR;\n      }\n    }\n\n    return DARK_LABEL_COLOR;\n  };\n\n  Path.prototype.getInsideTextStroke = function (textFill) {\n    var pathFill = this.style.fill;\n\n    if (isString(pathFill)) {\n      var zr = this.__zr;\n      var isDarkMode = !!(zr && zr.isDarkMode());\n      var isDarkLabel = lum(textFill, 0) < DARK_MODE_THRESHOLD;\n\n      if (isDarkMode === isDarkLabel) {\n        return pathFill;\n      }\n    }\n  };\n\n  Path.prototype.buildPath = function (ctx, shapeCfg, inBatch) {};\n\n  Path.prototype.pathUpdated = function () {\n    this.__dirty &= ~SHAPE_CHANGED_BIT;\n  };\n\n  Path.prototype.getUpdatedPathProxy = function (inBatch) {\n    !this.path && this.createPathProxy();\n    this.path.beginPath();\n    this.buildPath(this.path, this.shape, inBatch);\n    return this.path;\n  };\n\n  Path.prototype.createPathProxy = function () {\n    this.path = new PathProxy(false);\n  };\n\n  Path.prototype.hasStroke = function () {\n    var style = this.style;\n    var stroke = style.stroke;\n    return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n  };\n\n  Path.prototype.hasFill = function () {\n    var style = this.style;\n    var fill = style.fill;\n    return fill != null && fill !== 'none';\n  };\n\n  Path.prototype.getBoundingRect = function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var firstInvoke = false;\n\n      if (!this.path) {\n        firstInvoke = true;\n        this.createPathProxy();\n      }\n\n      var path = this.path;\n\n      if (firstInvoke || this.__dirty & SHAPE_CHANGED_BIT) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n        this.pathUpdated();\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (this.hasStroke() && this.path && this.path.len() > 0) {\n      var rectStroke = this._rectStroke || (this._rectStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectStroke.copy(rect);\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n        var w = style.lineWidth;\n\n        if (!this.hasFill()) {\n          var strokeContainThreshold = this.strokeContainThreshold;\n          w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\n        }\n\n        if (lineScale > 1e-10) {\n          rectStroke.width += w / lineScale;\n          rectStroke.height += w / lineScale;\n          rectStroke.x -= w / lineScale / 2;\n          rectStroke.y -= w / lineScale / 2;\n        }\n      }\n\n      return rectStroke;\n    }\n\n    return rect;\n  };\n\n  Path.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathProxy = this.path;\n\n      if (this.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n        if (lineScale > 1e-10) {\n          if (!this.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathProxy, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.hasFill()) {\n        return pathContain.contain(pathProxy, x, y);\n      }\n    }\n\n    return false;\n  };\n\n  Path.prototype.dirtyShape = function () {\n    this.__dirty |= SHAPE_CHANGED_BIT;\n\n    if (this._rect) {\n      this._rect = null;\n    }\n\n    if (this._decalEl) {\n      this._decalEl.dirtyShape();\n    }\n\n    this.markRedraw();\n  };\n\n  Path.prototype.dirty = function () {\n    this.dirtyStyle();\n    this.dirtyShape();\n  };\n\n  Path.prototype.animateShape = function (loop) {\n    return this.animate('shape', loop);\n  };\n\n  Path.prototype.updateDuringAnimation = function (targetKey) {\n    if (targetKey === 'style') {\n      this.dirtyStyle();\n    } else if (targetKey === 'shape') {\n      this.dirtyShape();\n    } else {\n      this.markRedraw();\n    }\n  };\n\n  Path.prototype.attrKV = function (key, value) {\n    if (key === 'shape') {\n      this.setShape(value);\n    } else {\n      _super.prototype.attrKV.call(this, key, value);\n    }\n  };\n\n  Path.prototype.setShape = function (keyOrObj, value) {\n    var shape = this.shape;\n\n    if (!shape) {\n      shape = this.shape = {};\n    }\n\n    if (typeof keyOrObj === 'string') {\n      shape[keyOrObj] = value;\n    } else {\n      extend(shape, keyOrObj);\n    }\n\n    this.dirtyShape();\n    return this;\n  };\n\n  Path.prototype.shapeChanged = function () {\n    return !!(this.__dirty & SHAPE_CHANGED_BIT);\n  };\n\n  Path.prototype.createStyle = function (obj) {\n    return createObject(DEFAULT_PATH_STYLE, obj);\n  };\n\n  Path.prototype._innerSaveToNormal = function (toState) {\n    _super.prototype._innerSaveToNormal.call(this, toState);\n\n    var normalState = this._normalState;\n\n    if (toState.shape && !normalState.shape) {\n      normalState.shape = extend({}, this.shape);\n    }\n  };\n\n  Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n    _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n\n    var needsRestoreToNormal = !(state && keepCurrentStates);\n    var targetShape;\n\n    if (state && state.shape) {\n      if (transition) {\n        if (keepCurrentStates) {\n          targetShape = state.shape;\n        } else {\n          targetShape = extend({}, normalState.shape);\n          extend(targetShape, state.shape);\n        }\n      } else {\n        targetShape = extend({}, keepCurrentStates ? this.shape : normalState.shape);\n        extend(targetShape, state.shape);\n      }\n    } else if (needsRestoreToNormal) {\n      targetShape = normalState.shape;\n    }\n\n    if (targetShape) {\n      if (transition) {\n        this.shape = extend({}, this.shape);\n        var targetShapePrimaryProps = {};\n        var shapeKeys = keys(targetShape);\n\n        for (var i = 0; i < shapeKeys.length; i++) {\n          var key = shapeKeys[i];\n\n          if (typeof targetShape[key] === 'object') {\n            this.shape[key] = targetShape[key];\n          } else {\n            targetShapePrimaryProps[key] = targetShape[key];\n          }\n        }\n\n        this._transitionState(stateName, {\n          shape: targetShapePrimaryProps\n        }, animationCfg);\n      } else {\n        this.shape = targetShape;\n        this.dirtyShape();\n      }\n    }\n  };\n\n  Path.prototype._mergeStates = function (states) {\n    var mergedState = _super.prototype._mergeStates.call(this, states);\n\n    var mergedShape;\n\n    for (var i = 0; i < states.length; i++) {\n      var state = states[i];\n\n      if (state.shape) {\n        mergedShape = mergedShape || {};\n\n        this._mergeStyle(mergedShape, state.shape);\n      }\n    }\n\n    if (mergedShape) {\n      mergedState.shape = mergedShape;\n    }\n\n    return mergedState;\n  };\n\n  Path.prototype.getAnimationStyleProps = function () {\n    return DEFAULT_PATH_ANIMATION_PROPS;\n  };\n\n  Path.prototype.isZeroArea = function () {\n    return false;\n  };\n\n  Path.extend = function (defaultProps) {\n    var Sub = function (_super) {\n      __extends(Sub, _super);\n\n      function Sub(opts) {\n        var _this = _super.call(this, opts) || this;\n\n        defaultProps.init && defaultProps.init.call(_this, opts);\n        return _this;\n      }\n\n      Sub.prototype.getDefaultStyle = function () {\n        return clone(defaultProps.style);\n      };\n\n      Sub.prototype.getDefaultShape = function () {\n        return clone(defaultProps.shape);\n      };\n\n      return Sub;\n    }(Path);\n\n    for (var key in defaultProps) {\n      if (typeof defaultProps[key] === 'function') {\n        Sub.prototype[key] = defaultProps[key];\n      }\n    }\n\n    return Sub;\n  };\n\n  Path.initDefaultProps = function () {\n    var pathProto = Path.prototype;\n    pathProto.type = 'path';\n    pathProto.strokeContainThreshold = 5;\n    pathProto.segmentIgnoreThreshold = 0;\n    pathProto.subPixelOptimize = false;\n    pathProto.autoBatch = false;\n    pathProto.__dirty = REDRAW_BIT | STYLE_CHANGED_BIT | SHAPE_CHANGED_BIT;\n  }();\n\n  return Path;\n}(Displayable);\n\nexport default Path;","map":{"version":3,"names":["__extends","Displayable","DEFAULT_COMMON_STYLE","DEFAULT_COMMON_ANIMATION_PROPS","PathProxy","pathContain","defaults","keys","extend","clone","isString","createObject","lum","DARK_LABEL_COLOR","LIGHT_LABEL_COLOR","DARK_MODE_THRESHOLD","LIGHTER_LABEL_COLOR","REDRAW_BIT","SHAPE_CHANGED_BIT","STYLE_CHANGED_BIT","TRANSFORMABLE_PROPS","DEFAULT_PATH_STYLE","fill","stroke","strokePercent","fillOpacity","strokeOpacity","lineDashOffset","lineWidth","lineCap","miterLimit","strokeNoScale","strokeFirst","DEFAULT_PATH_ANIMATION_PROPS","style","pathCopyParams","concat","Path","_super","opts","call","prototype","update","_this","decal","decalEl","_decalEl","buildPath","ctx","shape","silent","decalElStyle","key","shadowColor","i","length","__dirty","getDecalElement","_init","props","keysArr","getDefaultShape","defaultStyle","getDefaultStyle","useStyle","value","attrKV","canBeInsideText","hasFill","getInsideTextFill","pathFill","fillLum","getInsideTextStroke","textFill","zr","__zr","isDarkMode","isDarkLabel","shapeCfg","inBatch","pathUpdated","getUpdatedPathProxy","path","createPathProxy","beginPath","hasStroke","getBoundingRect","rect","_rect","needsUpdateRect","firstInvoke","len","rectStroke","_rectStroke","copy","lineScale","getLineScale","w","strokeContainThreshold","Math","max","width","height","x","y","contain","localPos","transformCoordToLocal","pathProxy","containStroke","dirtyShape","markRedraw","dirty","dirtyStyle","animateShape","loop","animate","updateDuringAnimation","targetKey","setShape","keyOrObj","shapeChanged","createStyle","obj","_innerSaveToNormal","toState","normalState","_normalState","_applyStateObj","stateName","state","keepCurrentStates","transition","animationCfg","needsRestoreToNormal","targetShape","targetShapePrimaryProps","shapeKeys","_transitionState","_mergeStates","states","mergedState","mergedShape","_mergeStyle","getAnimationStyleProps","isZeroArea","defaultProps","Sub","init","initDefaultProps","pathProto","type","segmentIgnoreThreshold","subPixelOptimize","autoBatch"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/graphic/Path.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Displayable, { DEFAULT_COMMON_STYLE, DEFAULT_COMMON_ANIMATION_PROPS } from './Displayable.js';\nimport PathProxy from '../core/PathProxy.js';\nimport * as pathContain from '../contain/path.js';\nimport { defaults, keys, extend, clone, isString, createObject } from '../core/util.js';\nimport { lum } from '../tool/color.js';\nimport { DARK_LABEL_COLOR, LIGHT_LABEL_COLOR, DARK_MODE_THRESHOLD, LIGHTER_LABEL_COLOR } from '../config.js';\nimport { REDRAW_BIT, SHAPE_CHANGED_BIT, STYLE_CHANGED_BIT } from './constants.js';\nimport { TRANSFORMABLE_PROPS } from '../core/Transformable.js';\nexport var DEFAULT_PATH_STYLE = defaults({\n    fill: '#000',\n    stroke: null,\n    strokePercent: 1,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    lineDashOffset: 0,\n    lineWidth: 1,\n    lineCap: 'butt',\n    miterLimit: 10,\n    strokeNoScale: false,\n    strokeFirst: false\n}, DEFAULT_COMMON_STYLE);\nexport var DEFAULT_PATH_ANIMATION_PROPS = {\n    style: defaults({\n        fill: true,\n        stroke: true,\n        strokePercent: true,\n        fillOpacity: true,\n        strokeOpacity: true,\n        lineDashOffset: true,\n        lineWidth: true,\n        miterLimit: true\n    }, DEFAULT_COMMON_ANIMATION_PROPS.style)\n};\nvar pathCopyParams = TRANSFORMABLE_PROPS.concat(['invisible',\n    'culling', 'z', 'z2', 'zlevel', 'parent'\n]);\nvar Path = (function (_super) {\n    __extends(Path, _super);\n    function Path(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Path.prototype.update = function () {\n        var _this = this;\n        _super.prototype.update.call(this);\n        var style = this.style;\n        if (style.decal) {\n            var decalEl = this._decalEl = this._decalEl || new Path();\n            if (decalEl.buildPath === Path.prototype.buildPath) {\n                decalEl.buildPath = function (ctx) {\n                    _this.buildPath(ctx, _this.shape);\n                };\n            }\n            decalEl.silent = true;\n            var decalElStyle = decalEl.style;\n            for (var key in style) {\n                if (decalElStyle[key] !== style[key]) {\n                    decalElStyle[key] = style[key];\n                }\n            }\n            decalElStyle.fill = style.fill ? style.decal : null;\n            decalElStyle.decal = null;\n            decalElStyle.shadowColor = null;\n            style.strokeFirst && (decalElStyle.stroke = null);\n            for (var i = 0; i < pathCopyParams.length; ++i) {\n                decalEl[pathCopyParams[i]] = this[pathCopyParams[i]];\n            }\n            decalEl.__dirty |= REDRAW_BIT;\n        }\n        else if (this._decalEl) {\n            this._decalEl = null;\n        }\n    };\n    Path.prototype.getDecalElement = function () {\n        return this._decalEl;\n    };\n    Path.prototype._init = function (props) {\n        var keysArr = keys(props);\n        this.shape = this.getDefaultShape();\n        var defaultStyle = this.getDefaultStyle();\n        if (defaultStyle) {\n            this.useStyle(defaultStyle);\n        }\n        for (var i = 0; i < keysArr.length; i++) {\n            var key = keysArr[i];\n            var value = props[key];\n            if (key === 'style') {\n                if (!this.style) {\n                    this.useStyle(value);\n                }\n                else {\n                    extend(this.style, value);\n                }\n            }\n            else if (key === 'shape') {\n                extend(this.shape, value);\n            }\n            else {\n                _super.prototype.attrKV.call(this, key, value);\n            }\n        }\n        if (!this.style) {\n            this.useStyle({});\n        }\n    };\n    Path.prototype.getDefaultStyle = function () {\n        return null;\n    };\n    Path.prototype.getDefaultShape = function () {\n        return {};\n    };\n    Path.prototype.canBeInsideText = function () {\n        return this.hasFill();\n    };\n    Path.prototype.getInsideTextFill = function () {\n        var pathFill = this.style.fill;\n        if (pathFill !== 'none') {\n            if (isString(pathFill)) {\n                var fillLum = lum(pathFill, 0);\n                if (fillLum > 0.5) {\n                    return DARK_LABEL_COLOR;\n                }\n                else if (fillLum > 0.2) {\n                    return LIGHTER_LABEL_COLOR;\n                }\n                return LIGHT_LABEL_COLOR;\n            }\n            else if (pathFill) {\n                return LIGHT_LABEL_COLOR;\n            }\n        }\n        return DARK_LABEL_COLOR;\n    };\n    Path.prototype.getInsideTextStroke = function (textFill) {\n        var pathFill = this.style.fill;\n        if (isString(pathFill)) {\n            var zr = this.__zr;\n            var isDarkMode = !!(zr && zr.isDarkMode());\n            var isDarkLabel = lum(textFill, 0) < DARK_MODE_THRESHOLD;\n            if (isDarkMode === isDarkLabel) {\n                return pathFill;\n            }\n        }\n    };\n    Path.prototype.buildPath = function (ctx, shapeCfg, inBatch) { };\n    Path.prototype.pathUpdated = function () {\n        this.__dirty &= ~SHAPE_CHANGED_BIT;\n    };\n    Path.prototype.getUpdatedPathProxy = function (inBatch) {\n        !this.path && this.createPathProxy();\n        this.path.beginPath();\n        this.buildPath(this.path, this.shape, inBatch);\n        return this.path;\n    };\n    Path.prototype.createPathProxy = function () {\n        this.path = new PathProxy(false);\n    };\n    Path.prototype.hasStroke = function () {\n        var style = this.style;\n        var stroke = style.stroke;\n        return !(stroke == null || stroke === 'none' || !(style.lineWidth > 0));\n    };\n    Path.prototype.hasFill = function () {\n        var style = this.style;\n        var fill = style.fill;\n        return fill != null && fill !== 'none';\n    };\n    Path.prototype.getBoundingRect = function () {\n        var rect = this._rect;\n        var style = this.style;\n        var needsUpdateRect = !rect;\n        if (needsUpdateRect) {\n            var firstInvoke = false;\n            if (!this.path) {\n                firstInvoke = true;\n                this.createPathProxy();\n            }\n            var path = this.path;\n            if (firstInvoke || (this.__dirty & SHAPE_CHANGED_BIT)) {\n                path.beginPath();\n                this.buildPath(path, this.shape, false);\n                this.pathUpdated();\n            }\n            rect = path.getBoundingRect();\n        }\n        this._rect = rect;\n        if (this.hasStroke() && this.path && this.path.len() > 0) {\n            var rectStroke = this._rectStroke || (this._rectStroke = rect.clone());\n            if (this.__dirty || needsUpdateRect) {\n                rectStroke.copy(rect);\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                var w = style.lineWidth;\n                if (!this.hasFill()) {\n                    var strokeContainThreshold = this.strokeContainThreshold;\n                    w = Math.max(w, strokeContainThreshold == null ? 4 : strokeContainThreshold);\n                }\n                if (lineScale > 1e-10) {\n                    rectStroke.width += w / lineScale;\n                    rectStroke.height += w / lineScale;\n                    rectStroke.x -= w / lineScale / 2;\n                    rectStroke.y -= w / lineScale / 2;\n                }\n            }\n            return rectStroke;\n        }\n        return rect;\n    };\n    Path.prototype.contain = function (x, y) {\n        var localPos = this.transformCoordToLocal(x, y);\n        var rect = this.getBoundingRect();\n        var style = this.style;\n        x = localPos[0];\n        y = localPos[1];\n        if (rect.contain(x, y)) {\n            var pathProxy = this.path;\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                if (lineScale > 1e-10) {\n                    if (!this.hasFill()) {\n                        lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                    }\n                    if (pathContain.containStroke(pathProxy, lineWidth / lineScale, x, y)) {\n                        return true;\n                    }\n                }\n            }\n            if (this.hasFill()) {\n                return pathContain.contain(pathProxy, x, y);\n            }\n        }\n        return false;\n    };\n    Path.prototype.dirtyShape = function () {\n        this.__dirty |= SHAPE_CHANGED_BIT;\n        if (this._rect) {\n            this._rect = null;\n        }\n        if (this._decalEl) {\n            this._decalEl.dirtyShape();\n        }\n        this.markRedraw();\n    };\n    Path.prototype.dirty = function () {\n        this.dirtyStyle();\n        this.dirtyShape();\n    };\n    Path.prototype.animateShape = function (loop) {\n        return this.animate('shape', loop);\n    };\n    Path.prototype.updateDuringAnimation = function (targetKey) {\n        if (targetKey === 'style') {\n            this.dirtyStyle();\n        }\n        else if (targetKey === 'shape') {\n            this.dirtyShape();\n        }\n        else {\n            this.markRedraw();\n        }\n    };\n    Path.prototype.attrKV = function (key, value) {\n        if (key === 'shape') {\n            this.setShape(value);\n        }\n        else {\n            _super.prototype.attrKV.call(this, key, value);\n        }\n    };\n    Path.prototype.setShape = function (keyOrObj, value) {\n        var shape = this.shape;\n        if (!shape) {\n            shape = this.shape = {};\n        }\n        if (typeof keyOrObj === 'string') {\n            shape[keyOrObj] = value;\n        }\n        else {\n            extend(shape, keyOrObj);\n        }\n        this.dirtyShape();\n        return this;\n    };\n    Path.prototype.shapeChanged = function () {\n        return !!(this.__dirty & SHAPE_CHANGED_BIT);\n    };\n    Path.prototype.createStyle = function (obj) {\n        return createObject(DEFAULT_PATH_STYLE, obj);\n    };\n    Path.prototype._innerSaveToNormal = function (toState) {\n        _super.prototype._innerSaveToNormal.call(this, toState);\n        var normalState = this._normalState;\n        if (toState.shape && !normalState.shape) {\n            normalState.shape = extend({}, this.shape);\n        }\n    };\n    Path.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n        _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n        var needsRestoreToNormal = !(state && keepCurrentStates);\n        var targetShape;\n        if (state && state.shape) {\n            if (transition) {\n                if (keepCurrentStates) {\n                    targetShape = state.shape;\n                }\n                else {\n                    targetShape = extend({}, normalState.shape);\n                    extend(targetShape, state.shape);\n                }\n            }\n            else {\n                targetShape = extend({}, keepCurrentStates ? this.shape : normalState.shape);\n                extend(targetShape, state.shape);\n            }\n        }\n        else if (needsRestoreToNormal) {\n            targetShape = normalState.shape;\n        }\n        if (targetShape) {\n            if (transition) {\n                this.shape = extend({}, this.shape);\n                var targetShapePrimaryProps = {};\n                var shapeKeys = keys(targetShape);\n                for (var i = 0; i < shapeKeys.length; i++) {\n                    var key = shapeKeys[i];\n                    if (typeof targetShape[key] === 'object') {\n                        this.shape[key] = targetShape[key];\n                    }\n                    else {\n                        targetShapePrimaryProps[key] = targetShape[key];\n                    }\n                }\n                this._transitionState(stateName, {\n                    shape: targetShapePrimaryProps\n                }, animationCfg);\n            }\n            else {\n                this.shape = targetShape;\n                this.dirtyShape();\n            }\n        }\n    };\n    Path.prototype._mergeStates = function (states) {\n        var mergedState = _super.prototype._mergeStates.call(this, states);\n        var mergedShape;\n        for (var i = 0; i < states.length; i++) {\n            var state = states[i];\n            if (state.shape) {\n                mergedShape = mergedShape || {};\n                this._mergeStyle(mergedShape, state.shape);\n            }\n        }\n        if (mergedShape) {\n            mergedState.shape = mergedShape;\n        }\n        return mergedState;\n    };\n    Path.prototype.getAnimationStyleProps = function () {\n        return DEFAULT_PATH_ANIMATION_PROPS;\n    };\n    Path.prototype.isZeroArea = function () {\n        return false;\n    };\n    Path.extend = function (defaultProps) {\n        var Sub = (function (_super) {\n            __extends(Sub, _super);\n            function Sub(opts) {\n                var _this = _super.call(this, opts) || this;\n                defaultProps.init && defaultProps.init.call(_this, opts);\n                return _this;\n            }\n            Sub.prototype.getDefaultStyle = function () {\n                return clone(defaultProps.style);\n            };\n            Sub.prototype.getDefaultShape = function () {\n                return clone(defaultProps.shape);\n            };\n            return Sub;\n        }(Path));\n        for (var key in defaultProps) {\n            if (typeof defaultProps[key] === 'function') {\n                Sub.prototype[key] = defaultProps[key];\n            }\n        }\n        return Sub;\n    };\n    Path.initDefaultProps = (function () {\n        var pathProto = Path.prototype;\n        pathProto.type = 'path';\n        pathProto.strokeContainThreshold = 5;\n        pathProto.segmentIgnoreThreshold = 0;\n        pathProto.subPixelOptimize = false;\n        pathProto.autoBatch = false;\n        pathProto.__dirty = REDRAW_BIT | STYLE_CHANGED_BIT | SHAPE_CHANGED_BIT;\n    })();\n    return Path;\n}(Displayable));\nexport default Path;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,IAAsBC,oBAAtB,EAA4CC,8BAA5C,QAAkF,kBAAlF;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,oBAA7B;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,YAAlD,QAAsE,iBAAtE;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,mBAA9C,EAAmEC,mBAAnE,QAA8F,cAA9F;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,iBAAxC,QAAiE,gBAAjE;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAO,IAAIC,kBAAkB,GAAGf,QAAQ,CAAC;EACrCgB,IAAI,EAAE,MAD+B;EAErCC,MAAM,EAAE,IAF6B;EAGrCC,aAAa,EAAE,CAHsB;EAIrCC,WAAW,EAAE,CAJwB;EAKrCC,aAAa,EAAE,CALsB;EAMrCC,cAAc,EAAE,CANqB;EAOrCC,SAAS,EAAE,CAP0B;EAQrCC,OAAO,EAAE,MAR4B;EASrCC,UAAU,EAAE,EATyB;EAUrCC,aAAa,EAAE,KAVsB;EAWrCC,WAAW,EAAE;AAXwB,CAAD,EAYrC9B,oBAZqC,CAAjC;AAaP,OAAO,IAAI+B,4BAA4B,GAAG;EACtCC,KAAK,EAAE5B,QAAQ,CAAC;IACZgB,IAAI,EAAE,IADM;IAEZC,MAAM,EAAE,IAFI;IAGZC,aAAa,EAAE,IAHH;IAIZC,WAAW,EAAE,IAJD;IAKZC,aAAa,EAAE,IALH;IAMZC,cAAc,EAAE,IANJ;IAOZC,SAAS,EAAE,IAPC;IAQZE,UAAU,EAAE;EARA,CAAD,EASZ3B,8BAA8B,CAAC+B,KATnB;AADuB,CAAnC;AAYP,IAAIC,cAAc,GAAGf,mBAAmB,CAACgB,MAApB,CAA2B,CAAC,WAAD,EAC5C,SAD4C,EACjC,GADiC,EAC5B,IAD4B,EACtB,QADsB,EACZ,QADY,CAA3B,CAArB;;AAGA,IAAIC,IAAI,GAAI,UAAUC,MAAV,EAAkB;EAC1BtC,SAAS,CAACqC,IAAD,EAAOC,MAAP,CAAT;;EACA,SAASD,IAAT,CAAcE,IAAd,EAAoB;IAChB,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;EACH;;EACDF,IAAI,CAACI,SAAL,CAAeC,MAAf,GAAwB,YAAY;IAChC,IAAIC,KAAK,GAAG,IAAZ;;IACAL,MAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwBF,IAAxB,CAA6B,IAA7B;;IACA,IAAIN,KAAK,GAAG,KAAKA,KAAjB;;IACA,IAAIA,KAAK,CAACU,KAAV,EAAiB;MACb,IAAIC,OAAO,GAAG,KAAKC,QAAL,GAAgB,KAAKA,QAAL,IAAiB,IAAIT,IAAJ,EAA/C;;MACA,IAAIQ,OAAO,CAACE,SAAR,KAAsBV,IAAI,CAACI,SAAL,CAAeM,SAAzC,EAAoD;QAChDF,OAAO,CAACE,SAAR,GAAoB,UAAUC,GAAV,EAAe;UAC/BL,KAAK,CAACI,SAAN,CAAgBC,GAAhB,EAAqBL,KAAK,CAACM,KAA3B;QACH,CAFD;MAGH;;MACDJ,OAAO,CAACK,MAAR,GAAiB,IAAjB;MACA,IAAIC,YAAY,GAAGN,OAAO,CAACX,KAA3B;;MACA,KAAK,IAAIkB,GAAT,IAAgBlB,KAAhB,EAAuB;QACnB,IAAIiB,YAAY,CAACC,GAAD,CAAZ,KAAsBlB,KAAK,CAACkB,GAAD,CAA/B,EAAsC;UAClCD,YAAY,CAACC,GAAD,CAAZ,GAAoBlB,KAAK,CAACkB,GAAD,CAAzB;QACH;MACJ;;MACDD,YAAY,CAAC7B,IAAb,GAAoBY,KAAK,CAACZ,IAAN,GAAaY,KAAK,CAACU,KAAnB,GAA2B,IAA/C;MACAO,YAAY,CAACP,KAAb,GAAqB,IAArB;MACAO,YAAY,CAACE,WAAb,GAA2B,IAA3B;MACAnB,KAAK,CAACF,WAAN,KAAsBmB,YAAY,CAAC5B,MAAb,GAAsB,IAA5C;;MACA,KAAK,IAAI+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,cAAc,CAACoB,MAAnC,EAA2C,EAAED,CAA7C,EAAgD;QAC5CT,OAAO,CAACV,cAAc,CAACmB,CAAD,CAAf,CAAP,GAA6B,KAAKnB,cAAc,CAACmB,CAAD,CAAnB,CAA7B;MACH;;MACDT,OAAO,CAACW,OAAR,IAAmBvC,UAAnB;IACH,CAtBD,MAuBK,IAAI,KAAK6B,QAAT,EAAmB;MACpB,KAAKA,QAAL,GAAgB,IAAhB;IACH;EACJ,CA9BD;;EA+BAT,IAAI,CAACI,SAAL,CAAegB,eAAf,GAAiC,YAAY;IACzC,OAAO,KAAKX,QAAZ;EACH,CAFD;;EAGAT,IAAI,CAACI,SAAL,CAAeiB,KAAf,GAAuB,UAAUC,KAAV,EAAiB;IACpC,IAAIC,OAAO,GAAGrD,IAAI,CAACoD,KAAD,CAAlB;IACA,KAAKV,KAAL,GAAa,KAAKY,eAAL,EAAb;IACA,IAAIC,YAAY,GAAG,KAAKC,eAAL,EAAnB;;IACA,IAAID,YAAJ,EAAkB;MACd,KAAKE,QAAL,CAAcF,YAAd;IACH;;IACD,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,OAAO,CAACL,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACrC,IAAIF,GAAG,GAAGQ,OAAO,CAACN,CAAD,CAAjB;MACA,IAAIW,KAAK,GAAGN,KAAK,CAACP,GAAD,CAAjB;;MACA,IAAIA,GAAG,KAAK,OAAZ,EAAqB;QACjB,IAAI,CAAC,KAAKlB,KAAV,EAAiB;UACb,KAAK8B,QAAL,CAAcC,KAAd;QACH,CAFD,MAGK;UACDzD,MAAM,CAAC,KAAK0B,KAAN,EAAa+B,KAAb,CAAN;QACH;MACJ,CAPD,MAQK,IAAIb,GAAG,KAAK,OAAZ,EAAqB;QACtB5C,MAAM,CAAC,KAAKyC,KAAN,EAAagB,KAAb,CAAN;MACH,CAFI,MAGA;QACD3B,MAAM,CAACG,SAAP,CAAiByB,MAAjB,CAAwB1B,IAAxB,CAA6B,IAA7B,EAAmCY,GAAnC,EAAwCa,KAAxC;MACH;IACJ;;IACD,IAAI,CAAC,KAAK/B,KAAV,EAAiB;MACb,KAAK8B,QAAL,CAAc,EAAd;IACH;EACJ,CA5BD;;EA6BA3B,IAAI,CAACI,SAAL,CAAesB,eAAf,GAAiC,YAAY;IACzC,OAAO,IAAP;EACH,CAFD;;EAGA1B,IAAI,CAACI,SAAL,CAAeoB,eAAf,GAAiC,YAAY;IACzC,OAAO,EAAP;EACH,CAFD;;EAGAxB,IAAI,CAACI,SAAL,CAAe0B,eAAf,GAAiC,YAAY;IACzC,OAAO,KAAKC,OAAL,EAAP;EACH,CAFD;;EAGA/B,IAAI,CAACI,SAAL,CAAe4B,iBAAf,GAAmC,YAAY;IAC3C,IAAIC,QAAQ,GAAG,KAAKpC,KAAL,CAAWZ,IAA1B;;IACA,IAAIgD,QAAQ,KAAK,MAAjB,EAAyB;MACrB,IAAI5D,QAAQ,CAAC4D,QAAD,CAAZ,EAAwB;QACpB,IAAIC,OAAO,GAAG3D,GAAG,CAAC0D,QAAD,EAAW,CAAX,CAAjB;;QACA,IAAIC,OAAO,GAAG,GAAd,EAAmB;UACf,OAAO1D,gBAAP;QACH,CAFD,MAGK,IAAI0D,OAAO,GAAG,GAAd,EAAmB;UACpB,OAAOvD,mBAAP;QACH;;QACD,OAAOF,iBAAP;MACH,CATD,MAUK,IAAIwD,QAAJ,EAAc;QACf,OAAOxD,iBAAP;MACH;IACJ;;IACD,OAAOD,gBAAP;EACH,CAlBD;;EAmBAwB,IAAI,CAACI,SAAL,CAAe+B,mBAAf,GAAqC,UAAUC,QAAV,EAAoB;IACrD,IAAIH,QAAQ,GAAG,KAAKpC,KAAL,CAAWZ,IAA1B;;IACA,IAAIZ,QAAQ,CAAC4D,QAAD,CAAZ,EAAwB;MACpB,IAAII,EAAE,GAAG,KAAKC,IAAd;MACA,IAAIC,UAAU,GAAG,CAAC,EAAEF,EAAE,IAAIA,EAAE,CAACE,UAAH,EAAR,CAAlB;MACA,IAAIC,WAAW,GAAGjE,GAAG,CAAC6D,QAAD,EAAW,CAAX,CAAH,GAAmB1D,mBAArC;;MACA,IAAI6D,UAAU,KAAKC,WAAnB,EAAgC;QAC5B,OAAOP,QAAP;MACH;IACJ;EACJ,CAVD;;EAWAjC,IAAI,CAACI,SAAL,CAAeM,SAAf,GAA2B,UAAUC,GAAV,EAAe8B,QAAf,EAAyBC,OAAzB,EAAkC,CAAG,CAAhE;;EACA1C,IAAI,CAACI,SAAL,CAAeuC,WAAf,GAA6B,YAAY;IACrC,KAAKxB,OAAL,IAAgB,CAACtC,iBAAjB;EACH,CAFD;;EAGAmB,IAAI,CAACI,SAAL,CAAewC,mBAAf,GAAqC,UAAUF,OAAV,EAAmB;IACpD,CAAC,KAAKG,IAAN,IAAc,KAAKC,eAAL,EAAd;IACA,KAAKD,IAAL,CAAUE,SAAV;IACA,KAAKrC,SAAL,CAAe,KAAKmC,IAApB,EAA0B,KAAKjC,KAA/B,EAAsC8B,OAAtC;IACA,OAAO,KAAKG,IAAZ;EACH,CALD;;EAMA7C,IAAI,CAACI,SAAL,CAAe0C,eAAf,GAAiC,YAAY;IACzC,KAAKD,IAAL,GAAY,IAAI9E,SAAJ,CAAc,KAAd,CAAZ;EACH,CAFD;;EAGAiC,IAAI,CAACI,SAAL,CAAe4C,SAAf,GAA2B,YAAY;IACnC,IAAInD,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIX,MAAM,GAAGW,KAAK,CAACX,MAAnB;IACA,OAAO,EAAEA,MAAM,IAAI,IAAV,IAAkBA,MAAM,KAAK,MAA7B,IAAuC,EAAEW,KAAK,CAACN,SAAN,GAAkB,CAApB,CAAzC,CAAP;EACH,CAJD;;EAKAS,IAAI,CAACI,SAAL,CAAe2B,OAAf,GAAyB,YAAY;IACjC,IAAIlC,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIZ,IAAI,GAAGY,KAAK,CAACZ,IAAjB;IACA,OAAOA,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,MAAhC;EACH,CAJD;;EAKAe,IAAI,CAACI,SAAL,CAAe6C,eAAf,GAAiC,YAAY;IACzC,IAAIC,IAAI,GAAG,KAAKC,KAAhB;IACA,IAAItD,KAAK,GAAG,KAAKA,KAAjB;IACA,IAAIuD,eAAe,GAAG,CAACF,IAAvB;;IACA,IAAIE,eAAJ,EAAqB;MACjB,IAAIC,WAAW,GAAG,KAAlB;;MACA,IAAI,CAAC,KAAKR,IAAV,EAAgB;QACZQ,WAAW,GAAG,IAAd;QACA,KAAKP,eAAL;MACH;;MACD,IAAID,IAAI,GAAG,KAAKA,IAAhB;;MACA,IAAIQ,WAAW,IAAK,KAAKlC,OAAL,GAAetC,iBAAnC,EAAuD;QACnDgE,IAAI,CAACE,SAAL;QACA,KAAKrC,SAAL,CAAemC,IAAf,EAAqB,KAAKjC,KAA1B,EAAiC,KAAjC;QACA,KAAK+B,WAAL;MACH;;MACDO,IAAI,GAAGL,IAAI,CAACI,eAAL,EAAP;IACH;;IACD,KAAKE,KAAL,GAAaD,IAAb;;IACA,IAAI,KAAKF,SAAL,MAAoB,KAAKH,IAAzB,IAAiC,KAAKA,IAAL,CAAUS,GAAV,KAAkB,CAAvD,EAA0D;MACtD,IAAIC,UAAU,GAAG,KAAKC,WAAL,KAAqB,KAAKA,WAAL,GAAmBN,IAAI,CAAC9E,KAAL,EAAxC,CAAjB;;MACA,IAAI,KAAK+C,OAAL,IAAgBiC,eAApB,EAAqC;QACjCG,UAAU,CAACE,IAAX,CAAgBP,IAAhB;QACA,IAAIQ,SAAS,GAAG7D,KAAK,CAACH,aAAN,GAAsB,KAAKiE,YAAL,EAAtB,GAA4C,CAA5D;QACA,IAAIC,CAAC,GAAG/D,KAAK,CAACN,SAAd;;QACA,IAAI,CAAC,KAAKwC,OAAL,EAAL,EAAqB;UACjB,IAAI8B,sBAAsB,GAAG,KAAKA,sBAAlC;UACAD,CAAC,GAAGE,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYC,sBAAsB,IAAI,IAA1B,GAAiC,CAAjC,GAAqCA,sBAAjD,CAAJ;QACH;;QACD,IAAIH,SAAS,GAAG,KAAhB,EAAuB;UACnBH,UAAU,CAACS,KAAX,IAAoBJ,CAAC,GAAGF,SAAxB;UACAH,UAAU,CAACU,MAAX,IAAqBL,CAAC,GAAGF,SAAzB;UACAH,UAAU,CAACW,CAAX,IAAgBN,CAAC,GAAGF,SAAJ,GAAgB,CAAhC;UACAH,UAAU,CAACY,CAAX,IAAgBP,CAAC,GAAGF,SAAJ,GAAgB,CAAhC;QACH;MACJ;;MACD,OAAOH,UAAP;IACH;;IACD,OAAOL,IAAP;EACH,CAvCD;;EAwCAlD,IAAI,CAACI,SAAL,CAAegE,OAAf,GAAyB,UAAUF,CAAV,EAAaC,CAAb,EAAgB;IACrC,IAAIE,QAAQ,GAAG,KAAKC,qBAAL,CAA2BJ,CAA3B,EAA8BC,CAA9B,CAAf;IACA,IAAIjB,IAAI,GAAG,KAAKD,eAAL,EAAX;IACA,IAAIpD,KAAK,GAAG,KAAKA,KAAjB;IACAqE,CAAC,GAAGG,QAAQ,CAAC,CAAD,CAAZ;IACAF,CAAC,GAAGE,QAAQ,CAAC,CAAD,CAAZ;;IACA,IAAInB,IAAI,CAACkB,OAAL,CAAaF,CAAb,EAAgBC,CAAhB,CAAJ,EAAwB;MACpB,IAAII,SAAS,GAAG,KAAK1B,IAArB;;MACA,IAAI,KAAKG,SAAL,EAAJ,EAAsB;QAClB,IAAIzD,SAAS,GAAGM,KAAK,CAACN,SAAtB;QACA,IAAImE,SAAS,GAAG7D,KAAK,CAACH,aAAN,GAAsB,KAAKiE,YAAL,EAAtB,GAA4C,CAA5D;;QACA,IAAID,SAAS,GAAG,KAAhB,EAAuB;UACnB,IAAI,CAAC,KAAK3B,OAAL,EAAL,EAAqB;YACjBxC,SAAS,GAAGuE,IAAI,CAACC,GAAL,CAASxE,SAAT,EAAoB,KAAKsE,sBAAzB,CAAZ;UACH;;UACD,IAAI7F,WAAW,CAACwG,aAAZ,CAA0BD,SAA1B,EAAqChF,SAAS,GAAGmE,SAAjD,EAA4DQ,CAA5D,EAA+DC,CAA/D,CAAJ,EAAuE;YACnE,OAAO,IAAP;UACH;QACJ;MACJ;;MACD,IAAI,KAAKpC,OAAL,EAAJ,EAAoB;QAChB,OAAO/D,WAAW,CAACoG,OAAZ,CAAoBG,SAApB,EAA+BL,CAA/B,EAAkCC,CAAlC,CAAP;MACH;IACJ;;IACD,OAAO,KAAP;EACH,CAzBD;;EA0BAnE,IAAI,CAACI,SAAL,CAAeqE,UAAf,GAA4B,YAAY;IACpC,KAAKtD,OAAL,IAAgBtC,iBAAhB;;IACA,IAAI,KAAKsE,KAAT,EAAgB;MACZ,KAAKA,KAAL,GAAa,IAAb;IACH;;IACD,IAAI,KAAK1C,QAAT,EAAmB;MACf,KAAKA,QAAL,CAAcgE,UAAd;IACH;;IACD,KAAKC,UAAL;EACH,CATD;;EAUA1E,IAAI,CAACI,SAAL,CAAeuE,KAAf,GAAuB,YAAY;IAC/B,KAAKC,UAAL;IACA,KAAKH,UAAL;EACH,CAHD;;EAIAzE,IAAI,CAACI,SAAL,CAAeyE,YAAf,GAA8B,UAAUC,IAAV,EAAgB;IAC1C,OAAO,KAAKC,OAAL,CAAa,OAAb,EAAsBD,IAAtB,CAAP;EACH,CAFD;;EAGA9E,IAAI,CAACI,SAAL,CAAe4E,qBAAf,GAAuC,UAAUC,SAAV,EAAqB;IACxD,IAAIA,SAAS,KAAK,OAAlB,EAA2B;MACvB,KAAKL,UAAL;IACH,CAFD,MAGK,IAAIK,SAAS,KAAK,OAAlB,EAA2B;MAC5B,KAAKR,UAAL;IACH,CAFI,MAGA;MACD,KAAKC,UAAL;IACH;EACJ,CAVD;;EAWA1E,IAAI,CAACI,SAAL,CAAeyB,MAAf,GAAwB,UAAUd,GAAV,EAAea,KAAf,EAAsB;IAC1C,IAAIb,GAAG,KAAK,OAAZ,EAAqB;MACjB,KAAKmE,QAAL,CAActD,KAAd;IACH,CAFD,MAGK;MACD3B,MAAM,CAACG,SAAP,CAAiByB,MAAjB,CAAwB1B,IAAxB,CAA6B,IAA7B,EAAmCY,GAAnC,EAAwCa,KAAxC;IACH;EACJ,CAPD;;EAQA5B,IAAI,CAACI,SAAL,CAAe8E,QAAf,GAA0B,UAAUC,QAAV,EAAoBvD,KAApB,EAA2B;IACjD,IAAIhB,KAAK,GAAG,KAAKA,KAAjB;;IACA,IAAI,CAACA,KAAL,EAAY;MACRA,KAAK,GAAG,KAAKA,KAAL,GAAa,EAArB;IACH;;IACD,IAAI,OAAOuE,QAAP,KAAoB,QAAxB,EAAkC;MAC9BvE,KAAK,CAACuE,QAAD,CAAL,GAAkBvD,KAAlB;IACH,CAFD,MAGK;MACDzD,MAAM,CAACyC,KAAD,EAAQuE,QAAR,CAAN;IACH;;IACD,KAAKV,UAAL;IACA,OAAO,IAAP;EACH,CAbD;;EAcAzE,IAAI,CAACI,SAAL,CAAegF,YAAf,GAA8B,YAAY;IACtC,OAAO,CAAC,EAAE,KAAKjE,OAAL,GAAetC,iBAAjB,CAAR;EACH,CAFD;;EAGAmB,IAAI,CAACI,SAAL,CAAeiF,WAAf,GAA6B,UAAUC,GAAV,EAAe;IACxC,OAAOhH,YAAY,CAACU,kBAAD,EAAqBsG,GAArB,CAAnB;EACH,CAFD;;EAGAtF,IAAI,CAACI,SAAL,CAAemF,kBAAf,GAAoC,UAAUC,OAAV,EAAmB;IACnDvF,MAAM,CAACG,SAAP,CAAiBmF,kBAAjB,CAAoCpF,IAApC,CAAyC,IAAzC,EAA+CqF,OAA/C;;IACA,IAAIC,WAAW,GAAG,KAAKC,YAAvB;;IACA,IAAIF,OAAO,CAAC5E,KAAR,IAAiB,CAAC6E,WAAW,CAAC7E,KAAlC,EAAyC;MACrC6E,WAAW,CAAC7E,KAAZ,GAAoBzC,MAAM,CAAC,EAAD,EAAK,KAAKyC,KAAV,CAA1B;IACH;EACJ,CAND;;EAOAZ,IAAI,CAACI,SAAL,CAAeuF,cAAf,GAAgC,UAAUC,SAAV,EAAqBC,KAArB,EAA4BJ,WAA5B,EAAyCK,iBAAzC,EAA4DC,UAA5D,EAAwEC,YAAxE,EAAsF;IAClH/F,MAAM,CAACG,SAAP,CAAiBuF,cAAjB,CAAgCxF,IAAhC,CAAqC,IAArC,EAA2CyF,SAA3C,EAAsDC,KAAtD,EAA6DJ,WAA7D,EAA0EK,iBAA1E,EAA6FC,UAA7F,EAAyGC,YAAzG;;IACA,IAAIC,oBAAoB,GAAG,EAAEJ,KAAK,IAAIC,iBAAX,CAA3B;IACA,IAAII,WAAJ;;IACA,IAAIL,KAAK,IAAIA,KAAK,CAACjF,KAAnB,EAA0B;MACtB,IAAImF,UAAJ,EAAgB;QACZ,IAAID,iBAAJ,EAAuB;UACnBI,WAAW,GAAGL,KAAK,CAACjF,KAApB;QACH,CAFD,MAGK;UACDsF,WAAW,GAAG/H,MAAM,CAAC,EAAD,EAAKsH,WAAW,CAAC7E,KAAjB,CAApB;UACAzC,MAAM,CAAC+H,WAAD,EAAcL,KAAK,CAACjF,KAApB,CAAN;QACH;MACJ,CARD,MASK;QACDsF,WAAW,GAAG/H,MAAM,CAAC,EAAD,EAAK2H,iBAAiB,GAAG,KAAKlF,KAAR,GAAgB6E,WAAW,CAAC7E,KAAlD,CAApB;QACAzC,MAAM,CAAC+H,WAAD,EAAcL,KAAK,CAACjF,KAApB,CAAN;MACH;IACJ,CAdD,MAeK,IAAIqF,oBAAJ,EAA0B;MAC3BC,WAAW,GAAGT,WAAW,CAAC7E,KAA1B;IACH;;IACD,IAAIsF,WAAJ,EAAiB;MACb,IAAIH,UAAJ,EAAgB;QACZ,KAAKnF,KAAL,GAAazC,MAAM,CAAC,EAAD,EAAK,KAAKyC,KAAV,CAAnB;QACA,IAAIuF,uBAAuB,GAAG,EAA9B;QACA,IAAIC,SAAS,GAAGlI,IAAI,CAACgI,WAAD,CAApB;;QACA,KAAK,IAAIjF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmF,SAAS,CAAClF,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;UACvC,IAAIF,GAAG,GAAGqF,SAAS,CAACnF,CAAD,CAAnB;;UACA,IAAI,OAAOiF,WAAW,CAACnF,GAAD,CAAlB,KAA4B,QAAhC,EAA0C;YACtC,KAAKH,KAAL,CAAWG,GAAX,IAAkBmF,WAAW,CAACnF,GAAD,CAA7B;UACH,CAFD,MAGK;YACDoF,uBAAuB,CAACpF,GAAD,CAAvB,GAA+BmF,WAAW,CAACnF,GAAD,CAA1C;UACH;QACJ;;QACD,KAAKsF,gBAAL,CAAsBT,SAAtB,EAAiC;UAC7BhF,KAAK,EAAEuF;QADsB,CAAjC,EAEGH,YAFH;MAGH,CAhBD,MAiBK;QACD,KAAKpF,KAAL,GAAasF,WAAb;QACA,KAAKzB,UAAL;MACH;IACJ;EACJ,CA7CD;;EA8CAzE,IAAI,CAACI,SAAL,CAAekG,YAAf,GAA8B,UAAUC,MAAV,EAAkB;IAC5C,IAAIC,WAAW,GAAGvG,MAAM,CAACG,SAAP,CAAiBkG,YAAjB,CAA8BnG,IAA9B,CAAmC,IAAnC,EAAyCoG,MAAzC,CAAlB;;IACA,IAAIE,WAAJ;;IACA,KAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsF,MAAM,CAACrF,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;MACpC,IAAI4E,KAAK,GAAGU,MAAM,CAACtF,CAAD,CAAlB;;MACA,IAAI4E,KAAK,CAACjF,KAAV,EAAiB;QACb6F,WAAW,GAAGA,WAAW,IAAI,EAA7B;;QACA,KAAKC,WAAL,CAAiBD,WAAjB,EAA8BZ,KAAK,CAACjF,KAApC;MACH;IACJ;;IACD,IAAI6F,WAAJ,EAAiB;MACbD,WAAW,CAAC5F,KAAZ,GAAoB6F,WAApB;IACH;;IACD,OAAOD,WAAP;EACH,CAdD;;EAeAxG,IAAI,CAACI,SAAL,CAAeuG,sBAAf,GAAwC,YAAY;IAChD,OAAO/G,4BAAP;EACH,CAFD;;EAGAI,IAAI,CAACI,SAAL,CAAewG,UAAf,GAA4B,YAAY;IACpC,OAAO,KAAP;EACH,CAFD;;EAGA5G,IAAI,CAAC7B,MAAL,GAAc,UAAU0I,YAAV,EAAwB;IAClC,IAAIC,GAAG,GAAI,UAAU7G,MAAV,EAAkB;MACzBtC,SAAS,CAACmJ,GAAD,EAAM7G,MAAN,CAAT;;MACA,SAAS6G,GAAT,CAAa5G,IAAb,EAAmB;QACf,IAAII,KAAK,GAAGL,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAvC;;QACA2G,YAAY,CAACE,IAAb,IAAqBF,YAAY,CAACE,IAAb,CAAkB5G,IAAlB,CAAuBG,KAAvB,EAA8BJ,IAA9B,CAArB;QACA,OAAOI,KAAP;MACH;;MACDwG,GAAG,CAAC1G,SAAJ,CAAcsB,eAAd,GAAgC,YAAY;QACxC,OAAOtD,KAAK,CAACyI,YAAY,CAAChH,KAAd,CAAZ;MACH,CAFD;;MAGAiH,GAAG,CAAC1G,SAAJ,CAAcoB,eAAd,GAAgC,YAAY;QACxC,OAAOpD,KAAK,CAACyI,YAAY,CAACjG,KAAd,CAAZ;MACH,CAFD;;MAGA,OAAOkG,GAAP;IACH,CAdU,CAcT9G,IAdS,CAAX;;IAeA,KAAK,IAAIe,GAAT,IAAgB8F,YAAhB,EAA8B;MAC1B,IAAI,OAAOA,YAAY,CAAC9F,GAAD,CAAnB,KAA6B,UAAjC,EAA6C;QACzC+F,GAAG,CAAC1G,SAAJ,CAAcW,GAAd,IAAqB8F,YAAY,CAAC9F,GAAD,CAAjC;MACH;IACJ;;IACD,OAAO+F,GAAP;EACH,CAtBD;;EAuBA9G,IAAI,CAACgH,gBAAL,GAAyB,YAAY;IACjC,IAAIC,SAAS,GAAGjH,IAAI,CAACI,SAArB;IACA6G,SAAS,CAACC,IAAV,GAAiB,MAAjB;IACAD,SAAS,CAACpD,sBAAV,GAAmC,CAAnC;IACAoD,SAAS,CAACE,sBAAV,GAAmC,CAAnC;IACAF,SAAS,CAACG,gBAAV,GAA6B,KAA7B;IACAH,SAAS,CAACI,SAAV,GAAsB,KAAtB;IACAJ,SAAS,CAAC9F,OAAV,GAAoBvC,UAAU,GAAGE,iBAAb,GAAiCD,iBAArD;EACH,CARuB,EAAxB;;EASA,OAAOmB,IAAP;AACH,CAvWW,CAuWVpC,WAvWU,CAAZ;;AAwWA,eAAeoC,IAAf"},"metadata":{},"sourceType":"module"}