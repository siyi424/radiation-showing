{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport { radialCoordinate } from './layoutHelper.js';\nimport * as bbox from 'zrender/lib/core/bbox.js';\nimport View from '../../coord/View.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport { parsePercent } from '../../util/number.js';\nimport ChartView from '../../view/Chart.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states.js';\n\nvar TreeEdgeShape =\n/** @class */\nfunction () {\n  function TreeEdgeShape() {\n    this.parentPoint = [];\n    this.childPoints = [];\n  }\n\n  return TreeEdgeShape;\n}();\n\nvar TreePath =\n/** @class */\nfunction (_super) {\n  __extends(TreePath, _super);\n\n  function TreePath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  TreePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  TreePath.prototype.getDefaultShape = function () {\n    return new TreeEdgeShape();\n  };\n\n  TreePath.prototype.buildPath = function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  };\n\n  return TreePath;\n}(Path);\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreeView.type;\n    _this._mainGroup = new graphic.Group();\n    return _this;\n  }\n\n  TreeView.prototype.init = function (ecModel, api) {\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  };\n\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.x = layoutInfo.x + layoutInfo.width / 2;\n      group.y = layoutInfo.y + layoutInfo.height / 2;\n    } else {\n      group.x = layoutInfo.x;\n      group.y = layoutInfo.y;\n    }\n\n    this._updateViewCoordSys(seriesModel, api);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesModel.get('expandAndCollapse') === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  };\n\n  TreeView.prototype._updateViewCoordSys = function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'), api);\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      x: viewCoordSys.x,\n      y: viewCoordSys.y,\n      scaleX: viewCoordSys.scaleX,\n      scaleY: viewCoordSys.scaleY\n    });\n    this._min = min;\n    this._max = max;\n  };\n\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    data.eachItemGraphicEl(function (el, idx) {\n      el.setSymbolScale(nodeScale);\n    });\n  };\n\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  };\n\n  TreeView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  TreeView.prototype.remove = function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  };\n\n  TreeView.type = 'tree';\n  return TreeView;\n}(ChartView);\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var visualColor = node.getVisual('style').fill;\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.__oldX,\n    y: sourceSymbolEl.__oldY,\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n    symbolEl.x = sourceOldLayout.x;\n    symbolEl.y = sourceOldLayout.y;\n  } else {\n    symbolEl.updateData(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  symbolEl.__oldX = symbolEl.x;\n  symbolEl.__oldY = symbolEl.y;\n  graphic.updateProps(symbolEl, {\n    x: targetLayout.x,\n    y: targetLayout.y\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesModel.get('layout') === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length_1 = realRoot.children.length;\n    var rad = void 0;\n    var isLeft = void 0;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true && realRoot.children.length) {\n      var center = {\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\n      };\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var normalLabelModel = itemModel.getModel('label');\n    var rotate = normalLabelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    var textContent = symbolPath.getTextContent();\n\n    if (textContent) {\n      symbolPath.setTextConfig({\n        position: normalLabelModel.get('position') || textPosition,\n        rotation: rotate == null ? -rad : labelRotateRadian,\n        origin: 'center'\n      });\n      textContent.setStyle('verticalAlign', 'middle');\n    }\n  } // Handle status\n\n\n  var focus = itemModel.get(['emphasis', 'focus']);\n  var focusDataIndices = focus === 'relative' ? zrUtil.concatArray(node.getAncestorsIndices(), node.getDescendantIndices()) : focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\n\n  if (focusDataIndices) {\n    // Modify the focus to data indices.\n    getECData(symbolEl).focus = focusDataIndices;\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\n\n  if (symbolEl.__edge) {\n    symbolEl.onHoverStateChange = function (toState) {\n      if (toState !== 'blur') {\n        // NOTE: Ensure the parent elements will been blurred firstly.\n        // According to the return of getAncestorsIndices and getDescendantIndices\n        // TODO: A bit tricky.\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\n\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\n          setStatesFlag(symbolEl.__edge, toState);\n        }\n      }\n    };\n  }\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\n  var itemModel = node.getModel();\n  var edgeShape = seriesModel.get('edgeShape');\n  var layout = seriesModel.get('layout');\n  var orient = seriesModel.getOrient();\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  var edge = symbolEl.__edge; // curve edge from node -> parent\n  // polyline edge from node -> children\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreePath({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: orient,\n              forkPosition: edgeForkPosition\n            }\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          }\n        }, seriesModel);\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\n      }\n    }\n  } // show all edge when edgeShape is 'curve', filter node `isExpand` is false when edgeShape is 'polyline'\n\n\n  if (edge && !(edgeShape === 'polyline' && !node.isExpand)) {\n    edge.useStyle(zrUtil.defaults({\n      strokeNoScale: true,\n      fill: null\n    }, lineStyle));\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\n    setDefaultStateProxy(edge);\n    group.add(edge);\n  }\n}\n\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\n  var virtualRoot = data.tree.root;\n\n  var _a = getSourceNode(virtualRoot, node),\n      source = _a.source,\n      sourceLayout = _a.sourceLayout;\n\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\n\n  if (!symbolEl) {\n    return;\n  }\n\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesModel.get('edgeShape');\n  var layoutOpt = seriesModel.get('layout');\n  var orient = seriesModel.get('orient');\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.removeElement(edge, {\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\n      graphic.removeElement(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    }\n  }\n}\n\nfunction getSourceNode(virtualRoot, node) {\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  return {\n    source: source,\n    sourceLayout: sourceLayout\n  };\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\n\n  var removeAnimationOpt = {\n    duration: seriesModel.get('animationDurationUpdate'),\n    easing: seriesModel.get('animationEasingUpdate')\n  };\n  graphic.removeElement(symbolEl, {\n    x: sourceLayout.x + 1,\n    y: sourceLayout.y + 1\n  }, seriesModel, {\n    cb: function () {\n      group.remove(symbolEl);\n      data.setItemGraphicEl(dataIndex, null);\n    },\n    removeOpt: removeAnimationOpt\n  });\n  symbolEl.fadeOut(null, data.hostModel, {\n    fadeLabel: true,\n    animation: removeAnimationOpt\n  }); // remove edge as parent node\n\n  node.children.forEach(function (childNode) {\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\n  }); // remove edge as child node\n\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\n}\n\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (layoutOpt === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x || 0,\n      y1: radialCoor1.y || 0,\n      x2: radialCoor4.x || 0,\n      y2: radialCoor4.y || 0,\n      cpx1: radialCoor2.x || 0,\n      cpy1: radialCoor2.y || 0,\n      cpx2: radialCoor3.x || 0,\n      cpy2: radialCoor3.y || 0\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nexport default TreeView;","map":{"version":3,"names":["__extends","zrUtil","graphic","getECData","SymbolClz","radialCoordinate","bbox","View","roamHelper","RoamController","onIrrelevantElement","parsePercent","ChartView","Path","setStatesStylesFromModel","setStatesFlag","setDefaultStateProxy","HOVER_STATE_BLUR","TreeEdgeShape","parentPoint","childPoints","TreePath","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","childLen","length","firstChildPos","lastChildPos","moveTo","lineTo","orient","forkDim","otherDim","forkPosition","tmpPoint","i","point","TreeView","_this","apply","arguments","type","_mainGroup","Group","init","ecModel","api","_controller","getZr","_controllerHost","target","group","add","render","seriesModel","data","getData","layoutInfo","layout","get","x","width","y","height","_updateViewCoordSys","_updateController","oldData","_data","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","dataIndex","off","on","dispatchAction","seriesId","id","points","each","idx","getItemLayout","isNaN","push","min","max","fromPoints","oldMin","_min","oldMax","_max","viewCoordSys","coordinateSystem","zoomLimit","setBoundingRect","setCenter","setZoom","attr","scaleX","scaleY","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","enable","zoom","getZoom","updateViewOnPan","dx","dy","updateViewOnZoom","scale","originX","originY","updateLabelLayout","nodeScale","_getNodeGlobalScale","setSymbolScale","coordSys","nodeScaleRatio","groupZoom","roamZoom","dispose","removeAll","isInit","node","tree","getNodeByDataIndex","itemModel","getModel","visualColor","getVisual","symbolInnerColor","isExpand","children","virtualRoot","root","source","parentNode","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","__oldX","__oldY","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","useNameLabel","updateData","__radialRawX","__radialRawY","setItemGraphicEl","updateProps","symbolPath","getSymbolPath","realRoot","rootLayout","length_1","rad","isLeft","center","Math","atan2","PI","textPosition","normalLabelModel","rotate","labelRotateRadian","textContent","getTextContent","setTextConfig","position","rotation","origin","setStyle","focus","focusDataIndices","concatArray","getAncestorsIndices","getDescendantIndices","drawEdge","__edge","onHoverStateChange","toState","parentEl","hoverState","edgeShape","getOrient","curvature","edgeForkPosition","lineStyle","getLineStyle","edge","BezierCurve","getEdgeShape","childLayout","process","env","NODE_ENV","Error","useStyle","defaults","strokeNoScale","removeNodeEdge","removeAnimationOpt","_a","getSourceNode","sourceEdge","undefined","layoutOpt","removeElement","style","opacity","cb","removeOpt","duration","easing","fadeOut","hostModel","fadeLabel","animation","forEach","childNode","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/tree/TreeView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport { radialCoordinate } from './layoutHelper.js';\nimport * as bbox from 'zrender/lib/core/bbox.js';\nimport View from '../../coord/View.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport { parsePercent } from '../../util/number.js';\nimport ChartView from '../../view/Chart.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states.js';\n\nvar TreeEdgeShape =\n/** @class */\nfunction () {\n  function TreeEdgeShape() {\n    this.parentPoint = [];\n    this.childPoints = [];\n  }\n\n  return TreeEdgeShape;\n}();\n\nvar TreePath =\n/** @class */\nfunction (_super) {\n  __extends(TreePath, _super);\n\n  function TreePath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  TreePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  TreePath.prototype.getDefaultShape = function () {\n    return new TreeEdgeShape();\n  };\n\n  TreePath.prototype.buildPath = function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  };\n\n  return TreePath;\n}(Path);\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreeView.type;\n    _this._mainGroup = new graphic.Group();\n    return _this;\n  }\n\n  TreeView.prototype.init = function (ecModel, api) {\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  };\n\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.x = layoutInfo.x + layoutInfo.width / 2;\n      group.y = layoutInfo.y + layoutInfo.height / 2;\n    } else {\n      group.x = layoutInfo.x;\n      group.y = layoutInfo.y;\n    }\n\n    this._updateViewCoordSys(seriesModel, api);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesModel.get('expandAndCollapse') === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  };\n\n  TreeView.prototype._updateViewCoordSys = function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'), api);\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      x: viewCoordSys.x,\n      y: viewCoordSys.y,\n      scaleX: viewCoordSys.scaleX,\n      scaleY: viewCoordSys.scaleY\n    });\n    this._min = min;\n    this._max = max;\n  };\n\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    data.eachItemGraphicEl(function (el, idx) {\n      el.setSymbolScale(nodeScale);\n    });\n  };\n\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  };\n\n  TreeView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  TreeView.prototype.remove = function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  };\n\n  TreeView.type = 'tree';\n  return TreeView;\n}(ChartView);\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var visualColor = node.getVisual('style').fill;\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.__oldX,\n    y: sourceSymbolEl.__oldY,\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n    symbolEl.x = sourceOldLayout.x;\n    symbolEl.y = sourceOldLayout.y;\n  } else {\n    symbolEl.updateData(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  symbolEl.__oldX = symbolEl.x;\n  symbolEl.__oldY = symbolEl.y;\n  graphic.updateProps(symbolEl, {\n    x: targetLayout.x,\n    y: targetLayout.y\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesModel.get('layout') === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length_1 = realRoot.children.length;\n    var rad = void 0;\n    var isLeft = void 0;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true && realRoot.children.length) {\n      var center = {\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\n      };\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var normalLabelModel = itemModel.getModel('label');\n    var rotate = normalLabelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    var textContent = symbolPath.getTextContent();\n\n    if (textContent) {\n      symbolPath.setTextConfig({\n        position: normalLabelModel.get('position') || textPosition,\n        rotation: rotate == null ? -rad : labelRotateRadian,\n        origin: 'center'\n      });\n      textContent.setStyle('verticalAlign', 'middle');\n    }\n  } // Handle status\n\n\n  var focus = itemModel.get(['emphasis', 'focus']);\n  var focusDataIndices = focus === 'relative' ? zrUtil.concatArray(node.getAncestorsIndices(), node.getDescendantIndices()) : focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\n\n  if (focusDataIndices) {\n    // Modify the focus to data indices.\n    getECData(symbolEl).focus = focusDataIndices;\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\n\n  if (symbolEl.__edge) {\n    symbolEl.onHoverStateChange = function (toState) {\n      if (toState !== 'blur') {\n        // NOTE: Ensure the parent elements will been blurred firstly.\n        // According to the return of getAncestorsIndices and getDescendantIndices\n        // TODO: A bit tricky.\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\n\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\n          setStatesFlag(symbolEl.__edge, toState);\n        }\n      }\n    };\n  }\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\n  var itemModel = node.getModel();\n  var edgeShape = seriesModel.get('edgeShape');\n  var layout = seriesModel.get('layout');\n  var orient = seriesModel.getOrient();\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  var edge = symbolEl.__edge; // curve edge from node -> parent\n  // polyline edge from node -> children\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreePath({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: orient,\n              forkPosition: edgeForkPosition\n            }\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          }\n        }, seriesModel);\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\n      }\n    }\n  } // show all edge when edgeShape is 'curve', filter node `isExpand` is false when edgeShape is 'polyline'\n\n\n  if (edge && !(edgeShape === 'polyline' && !node.isExpand)) {\n    edge.useStyle(zrUtil.defaults({\n      strokeNoScale: true,\n      fill: null\n    }, lineStyle));\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\n    setDefaultStateProxy(edge);\n    group.add(edge);\n  }\n}\n\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\n  var virtualRoot = data.tree.root;\n\n  var _a = getSourceNode(virtualRoot, node),\n      source = _a.source,\n      sourceLayout = _a.sourceLayout;\n\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\n\n  if (!symbolEl) {\n    return;\n  }\n\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesModel.get('edgeShape');\n  var layoutOpt = seriesModel.get('layout');\n  var orient = seriesModel.get('orient');\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.removeElement(edge, {\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\n      graphic.removeElement(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    }\n  }\n}\n\nfunction getSourceNode(virtualRoot, node) {\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  return {\n    source: source,\n    sourceLayout: sourceLayout\n  };\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\n\n  var removeAnimationOpt = {\n    duration: seriesModel.get('animationDurationUpdate'),\n    easing: seriesModel.get('animationEasingUpdate')\n  };\n  graphic.removeElement(symbolEl, {\n    x: sourceLayout.x + 1,\n    y: sourceLayout.y + 1\n  }, seriesModel, {\n    cb: function () {\n      group.remove(symbolEl);\n      data.setItemGraphicEl(dataIndex, null);\n    },\n    removeOpt: removeAnimationOpt\n  });\n  symbolEl.fadeOut(null, data.hostModel, {\n    fadeLabel: true,\n    animation: removeAnimationOpt\n  }); // remove edge as parent node\n\n  node.children.forEach(function (childNode) {\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\n  }); // remove edge as child node\n\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\n}\n\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (layoutOpt === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x || 0,\n      y1: radialCoor1.y || 0,\n      x2: radialCoor4.x || 0,\n      y2: radialCoor4.y || 0,\n      cpx1: radialCoor2.x || 0,\n      cpy1: radialCoor2.y || 0,\n      cpx2: radialCoor3.x || 0,\n      cpy2: radialCoor3.y || 0\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nexport default TreeView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}