{"ast":null,"code":"import smoothBezier from './smoothBezier.js';\nexport function buildPath(ctx, shape, closePath) {\n  var smooth = shape.smooth;\n  var points = shape.points;\n\n  if (points && points.length >= 2) {\n    if (smooth) {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}","map":{"version":3,"names":["smoothBezier","buildPath","ctx","shape","closePath","smooth","points","length","controlPoints","smoothConstraint","moveTo","len","i","cp1","cp2","p","bezierCurveTo","l","lineTo"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/graphic/helper/poly.js"],"sourcesContent":["import smoothBezier from './smoothBezier.js';\nexport function buildPath(ctx, shape, closePath) {\n    var smooth = shape.smooth;\n    var points = shape.points;\n    if (points && points.length >= 2) {\n        if (smooth) {\n            var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n            ctx.moveTo(points[0][0], points[0][1]);\n            var len = points.length;\n            for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                var cp1 = controlPoints[i * 2];\n                var cp2 = controlPoints[i * 2 + 1];\n                var p = points[(i + 1) % len];\n                ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n            }\n        }\n        else {\n            ctx.moveTo(points[0][0], points[0][1]);\n            for (var i = 1, l = points.length; i < l; i++) {\n                ctx.lineTo(points[i][0], points[i][1]);\n            }\n        }\n        closePath && ctx.closePath();\n    }\n}\n"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;EAC7C,IAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;EACA,IAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;;EACA,IAAIA,MAAM,IAAIA,MAAM,CAACC,MAAP,IAAiB,CAA/B,EAAkC;IAC9B,IAAIF,MAAJ,EAAY;MACR,IAAIG,aAAa,GAAGR,YAAY,CAACM,MAAD,EAASD,MAAT,EAAiBD,SAAjB,EAA4BD,KAAK,CAACM,gBAAlC,CAAhC;MACAP,GAAG,CAACQ,MAAJ,CAAWJ,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAzB;MACA,IAAIK,GAAG,GAAGL,MAAM,CAACC,MAAjB;;MACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,SAAS,GAAGO,GAAH,GAASA,GAAG,GAAG,CAA5B,CAAjB,EAAiDC,CAAC,EAAlD,EAAsD;QAClD,IAAIC,GAAG,GAAGL,aAAa,CAACI,CAAC,GAAG,CAAL,CAAvB;QACA,IAAIE,GAAG,GAAGN,aAAa,CAACI,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAvB;QACA,IAAIG,CAAC,GAAGT,MAAM,CAAC,CAACM,CAAC,GAAG,CAAL,IAAUD,GAAX,CAAd;QACAT,GAAG,CAACc,aAAJ,CAAkBH,GAAG,CAAC,CAAD,CAArB,EAA0BA,GAAG,CAAC,CAAD,CAA7B,EAAkCC,GAAG,CAAC,CAAD,CAArC,EAA0CA,GAAG,CAAC,CAAD,CAA7C,EAAkDC,CAAC,CAAC,CAAD,CAAnD,EAAwDA,CAAC,CAAC,CAAD,CAAzD;MACH;IACJ,CAVD,MAWK;MACDb,GAAG,CAACQ,MAAJ,CAAWJ,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAzB;;MACA,KAAK,IAAIM,CAAC,GAAG,CAAR,EAAWK,CAAC,GAAGX,MAAM,CAACC,MAA3B,EAAmCK,CAAC,GAAGK,CAAvC,EAA0CL,CAAC,EAA3C,EAA+C;QAC3CV,GAAG,CAACgB,MAAJ,CAAWZ,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAAX,EAAyBN,MAAM,CAACM,CAAD,CAAN,CAAU,CAAV,CAAzB;MACH;IACJ;;IACDR,SAAS,IAAIF,GAAG,CAACE,SAAJ,EAAb;EACH;AACJ"},"metadata":{},"sourceType":"module"}