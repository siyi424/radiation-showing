{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { each, createHashMap, merge, assert } from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\nimport { getAxisMainType, DATA_ZOOM_AXIS_DIMENSIONS } from './helper.js';\nimport { MULTIPLE_REFERRING, SINGLE_REFERRING } from '../../util/model.js';\n\nvar DataZoomAxisInfo =\n/** @class */\nfunction () {\n  function DataZoomAxisInfo() {\n    this.indexList = [];\n    this.indexMap = [];\n  }\n\n  DataZoomAxisInfo.prototype.add = function (axisCmptIdx) {\n    // Remove duplication.\n    if (!this.indexMap[axisCmptIdx]) {\n      this.indexList.push(axisCmptIdx);\n      this.indexMap[axisCmptIdx] = true;\n    }\n  };\n\n  return DataZoomAxisInfo;\n}();\n\nvar DataZoomModel =\n/** @class */\nfunction (_super) {\n  __extends(DataZoomModel, _super);\n\n  function DataZoomModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = DataZoomModel.type;\n    _this._autoThrottle = true;\n    _this._noTarget = true;\n    /**\n     * It is `[rangeModeForMin, rangeModeForMax]`.\n     * The optional values for `rangeMode`:\n     * + `'value'` mode: the axis extent will always be determined by\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\n     *     how data like and how `axis.min` and `axis.max` are.\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\n     *\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\n     */\n\n    _this._rangePropMode = ['percent', 'percent'];\n    return _this;\n  }\n\n  DataZoomModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputRawOption = retrieveRawOption(option);\n    /**\n     * Suppose a \"main process\" start at the point that model prepared (that is,\n     * model initialized or merged or method called in `action`).\n     * We should keep the `main process` idempotent, that is, given a set of values\n     * on `option`, we get the same result.\n     *\n     * But sometimes, values on `option` will be updated for providing users\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\n     * should not be the base/input of the `main process`.\n     *\n     * So in that case we should save and keep the input of the `main process`\n     * separately, called `settledOption`.\n     *\n     * For example, consider the case:\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\n     *     calculated value.\n     * (Step)2) click the legend to hide and show a series,\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\n     *     which brings incorrect result.\n     */\n\n    this.settledOption = inputRawOption;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._doInit(inputRawOption);\n  };\n\n  DataZoomModel.prototype.mergeOption = function (newOption) {\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\n\n    merge(this.option, newOption, true);\n    merge(this.settledOption, inputRawOption, true);\n\n    this._doInit(inputRawOption);\n  };\n\n  DataZoomModel.prototype._doInit = function (inputRawOption) {\n    var thisOption = this.option;\n\n    this._setDefaultThrottle(inputRawOption);\n\n    this._updateRangeUse(inputRawOption);\n\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = settledOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n\n    this._resetTarget();\n  };\n\n  DataZoomModel.prototype._resetTarget = function () {\n    var optionOrient = this.get('orient', true);\n    var targetAxisIndexMap = this._targetAxisInfoMap = createHashMap();\n\n    var hasAxisSpecified = this._fillSpecifiedTargetAxis(targetAxisIndexMap);\n\n    if (hasAxisSpecified) {\n      this._orient = optionOrient || this._makeAutoOrientByTargetAxis();\n    } else {\n      this._orient = optionOrient || 'horizontal';\n\n      this._fillAutoTargetAxisByOrient(targetAxisIndexMap, this._orient);\n    }\n\n    this._noTarget = true;\n    targetAxisIndexMap.each(function (axisInfo) {\n      if (axisInfo.indexList.length) {\n        this._noTarget = false;\n      }\n    }, this);\n  };\n\n  DataZoomModel.prototype._fillSpecifiedTargetAxis = function (targetAxisIndexMap) {\n    var hasAxisSpecified = false;\n    each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\n      var refering = this.getReferringComponents(getAxisMainType(axisDim), MULTIPLE_REFERRING); // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n\n      if (!refering.specified) {\n        return;\n      }\n\n      hasAxisSpecified = true;\n      var axisInfo = new DataZoomAxisInfo();\n      each(refering.models, function (axisModel) {\n        axisInfo.add(axisModel.componentIndex);\n      });\n      targetAxisIndexMap.set(axisDim, axisInfo);\n    }, this);\n    return hasAxisSpecified;\n  };\n\n  DataZoomModel.prototype._fillAutoTargetAxisByOrient = function (targetAxisIndexMap, orient) {\n    var ecModel = this.ecModel;\n    var needAuto = true; // Find axis that parallel to dataZoom as default.\n\n    if (needAuto) {\n      var axisDim = orient === 'vertical' ? 'y' : 'x';\n      var axisModels = ecModel.findComponents({\n        mainType: axisDim + 'Axis'\n      });\n      setParallelAxis(axisModels, axisDim);\n    } // Find axis that parallel to dataZoom as default.\n\n\n    if (needAuto) {\n      var axisModels = ecModel.findComponents({\n        mainType: 'singleAxis',\n        filter: function (axisModel) {\n          return axisModel.get('orient', true) === orient;\n        }\n      });\n      setParallelAxis(axisModels, 'single');\n    }\n\n    function setParallelAxis(axisModels, axisDim) {\n      // At least use the first parallel axis as the target axis.\n      var axisModel = axisModels[0];\n\n      if (!axisModel) {\n        return;\n      }\n\n      var axisInfo = new DataZoomAxisInfo();\n      axisInfo.add(axisModel.componentIndex);\n      targetAxisIndexMap.set(axisDim, axisInfo);\n      needAuto = false; // Find parallel axes in the same grid.\n\n      if (axisDim === 'x' || axisDim === 'y') {\n        var gridModel_1 = axisModel.getReferringComponents('grid', SINGLE_REFERRING).models[0];\n        gridModel_1 && each(axisModels, function (axModel) {\n          if (axisModel.componentIndex !== axModel.componentIndex && gridModel_1 === axModel.getReferringComponents('grid', SINGLE_REFERRING).models[0]) {\n            axisInfo.add(axModel.componentIndex);\n          }\n        });\n      }\n    }\n\n    if (needAuto) {\n      // If no parallel axis, find the first category axis as default. (Also consider polar).\n      each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\n        if (!needAuto) {\n          return;\n        }\n\n        var axisModels = ecModel.findComponents({\n          mainType: getAxisMainType(axisDim),\n          filter: function (axisModel) {\n            return axisModel.get('type', true) === 'category';\n          }\n        });\n\n        if (axisModels[0]) {\n          var axisInfo = new DataZoomAxisInfo();\n          axisInfo.add(axisModels[0].componentIndex);\n          targetAxisIndexMap.set(axisDim, axisInfo);\n          needAuto = false;\n        }\n      }, this);\n    }\n  };\n\n  DataZoomModel.prototype._makeAutoOrientByTargetAxis = function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (axisDim) {\n      !dim && (dim = axisDim);\n    }, this);\n    return dim === 'y' ? 'vertical' : 'horizontal';\n  };\n\n  DataZoomModel.prototype._setDefaultThrottle = function (inputRawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (inputRawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  };\n\n  DataZoomModel.prototype._updateRangeUse = function (inputRawOption) {\n    var rangePropMode = this._rangePropMode;\n    var rangeModeInOption = this.get('rangeMode');\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      var percentSpecified = inputRawOption[names[0]] != null;\n      var valueSpecified = inputRawOption[names[1]] != null;\n\n      if (percentSpecified && !valueSpecified) {\n        rangePropMode[index] = 'percent';\n      } else if (!percentSpecified && valueSpecified) {\n        rangePropMode[index] = 'value';\n      } else if (rangeModeInOption) {\n        rangePropMode[index] = rangeModeInOption[index];\n      } else if (percentSpecified) {\n        // percentSpecified && valueSpecified\n        rangePropMode[index] = 'percent';\n      } // else remain its original setting.\n\n    });\n  };\n\n  DataZoomModel.prototype.noTarget = function () {\n    return this._noTarget;\n  };\n\n  DataZoomModel.prototype.getFirstTargetAxisModel = function () {\n    var firstAxisModel;\n    this.eachTargetAxis(function (axisDim, axisIndex) {\n      if (firstAxisModel == null) {\n        firstAxisModel = this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n      }\n    }, this);\n    return firstAxisModel;\n  };\n  /**\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n\n\n  DataZoomModel.prototype.eachTargetAxis = function (callback, context) {\n    this._targetAxisInfoMap.each(function (axisInfo, axisDim) {\n      each(axisInfo.indexList, function (axisIndex) {\n        callback.call(context, axisDim, axisIndex);\n      });\n    });\n  };\n  /**\n   * @return If not found, return null/undefined.\n   */\n\n\n  DataZoomModel.prototype.getAxisProxy = function (axisDim, axisIndex) {\n    var axisModel = this.getAxisModel(axisDim, axisIndex);\n\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    }\n  };\n  /**\n   * @return If not found, return null/undefined.\n   */\n\n\n  DataZoomModel.prototype.getAxisModel = function (axisDim, axisIndex) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(axisDim && axisIndex != null);\n    }\n\n    var axisInfo = this._targetAxisInfoMap.get(axisDim);\n\n    if (axisInfo && axisInfo.indexMap[axisIndex]) {\n      return this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n    }\n  };\n  /**\n   * If not specified, set to undefined.\n   */\n\n\n  DataZoomModel.prototype.setRawRange = function (opt) {\n    var thisOption = this.option;\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // Consider the pair <start, startValue>:\n      // If one has value and the other one is `null/undefined`, we both set them\n      // to `settledOption`. This strategy enables the feature to clear the original\n      // value in `settledOption` to `null/undefined`.\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\n      // and keep `settledOption` with the original value. This strategy enables users to\n      // only set <end or endValue> but not set <start or startValue> when calling\n      // `dispatchAction`.\n      // The pair <end, endValue> is treated in the same way.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\n      }\n    }, this);\n\n    this._updateRangeUse(opt);\n  };\n\n  DataZoomModel.prototype.setCalculatedRange = function (opt) {\n    var option = this.option;\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\n      option[name] = opt[name];\n    });\n  };\n\n  DataZoomModel.prototype.getPercentRange = function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  };\n  /**\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @return [startValue, endValue] value can only be '-' or finite number.\n   */\n\n\n  DataZoomModel.prototype.getValueRange = function (axisDim, axisIndex) {\n    if (axisDim == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDim, axisIndex).getDataValueWindow();\n    }\n  };\n  /**\n   * @param axisModel If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   */\n\n\n  DataZoomModel.prototype.findRepresentativeAxisProxy = function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var firstProxy;\n\n    var axisDimList = this._targetAxisInfoMap.keys();\n\n    for (var i = 0; i < axisDimList.length; i++) {\n      var axisDim = axisDimList[i];\n\n      var axisInfo = this._targetAxisInfoMap.get(axisDim);\n\n      for (var j = 0; j < axisInfo.indexList.length; j++) {\n        var proxy = this.getAxisProxy(axisDim, axisInfo.indexList[j]);\n\n        if (proxy.hostedBy(this)) {\n          return proxy;\n        }\n\n        if (!firstProxy) {\n          firstProxy = proxy;\n        }\n      }\n    } // If no hosted proxy found, still need to return a proxy.\n    // This case always happens in toolbox dataZoom, where axes are all hosted by\n    // other dataZooms.\n\n\n    return firstProxy;\n  };\n\n  DataZoomModel.prototype.getRangePropMode = function () {\n    return this._rangePropMode.slice();\n  };\n\n  DataZoomModel.prototype.getOrient = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      // Should not be called before initialized.\n      assert(this._orient);\n    }\n\n    return this._orient;\n  };\n\n  DataZoomModel.type = 'dataZoom';\n  DataZoomModel.dependencies = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series', 'toolbox'];\n  DataZoomModel.defaultOption = {\n    // zlevel: 0,\n    z: 4,\n    filterMode: 'filter',\n    start: 0,\n    end: 100\n  };\n  return DataZoomModel;\n}(ComponentModel);\n/**\n * Retrieve the those raw params from option, which will be cached separately.\n * becasue they will be overwritten by normalized/calculated values in the main\n * process.\n */\n\n\nfunction retrieveRawOption(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nexport default DataZoomModel;","map":{"version":3,"names":["__extends","each","createHashMap","merge","assert","ComponentModel","getAxisMainType","DATA_ZOOM_AXIS_DIMENSIONS","MULTIPLE_REFERRING","SINGLE_REFERRING","DataZoomAxisInfo","indexList","indexMap","prototype","add","axisCmptIdx","push","DataZoomModel","_super","_this","apply","arguments","type","_autoThrottle","_noTarget","_rangePropMode","init","option","parentModel","ecModel","inputRawOption","retrieveRawOption","settledOption","mergeDefaultAndTheme","_doInit","mergeOption","newOption","thisOption","_setDefaultThrottle","_updateRangeUse","names","index","_resetTarget","optionOrient","get","targetAxisIndexMap","_targetAxisInfoMap","hasAxisSpecified","_fillSpecifiedTargetAxis","_orient","_makeAutoOrientByTargetAxis","_fillAutoTargetAxisByOrient","axisInfo","length","axisDim","refering","getReferringComponents","specified","models","axisModel","componentIndex","set","orient","needAuto","axisModels","findComponents","mainType","setParallelAxis","filter","gridModel_1","axModel","dim","eachTargetAxis","hasOwnProperty","globalOption","throttle","animation","animationDurationUpdate","rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","noTarget","getFirstTargetAxisModel","firstAxisModel","axisIndex","getComponent","callback","context","call","getAxisProxy","getAxisModel","__dzAxisProxy","process","env","NODE_ENV","setRawRange","opt","setCalculatedRange","name","getPercentRange","axisProxy","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","getDataValueWindow","firstProxy","axisDimList","keys","i","j","proxy","hostedBy","getRangePropMode","slice","getOrient","dependencies","defaultOption","z","filterMode","start","end","ret"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/dataZoom/DataZoomModel.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { each, createHashMap, merge, assert } from 'zrender/lib/core/util.js';\nimport ComponentModel from '../../model/Component.js';\nimport { getAxisMainType, DATA_ZOOM_AXIS_DIMENSIONS } from './helper.js';\nimport { MULTIPLE_REFERRING, SINGLE_REFERRING } from '../../util/model.js';\n\nvar DataZoomAxisInfo =\n/** @class */\nfunction () {\n  function DataZoomAxisInfo() {\n    this.indexList = [];\n    this.indexMap = [];\n  }\n\n  DataZoomAxisInfo.prototype.add = function (axisCmptIdx) {\n    // Remove duplication.\n    if (!this.indexMap[axisCmptIdx]) {\n      this.indexList.push(axisCmptIdx);\n      this.indexMap[axisCmptIdx] = true;\n    }\n  };\n\n  return DataZoomAxisInfo;\n}();\n\nvar DataZoomModel =\n/** @class */\nfunction (_super) {\n  __extends(DataZoomModel, _super);\n\n  function DataZoomModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = DataZoomModel.type;\n    _this._autoThrottle = true;\n    _this._noTarget = true;\n    /**\n     * It is `[rangeModeForMin, rangeModeForMax]`.\n     * The optional values for `rangeMode`:\n     * + `'value'` mode: the axis extent will always be determined by\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\n     *     how data like and how `axis.min` and `axis.max` are.\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\n     *\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\n     */\n\n    _this._rangePropMode = ['percent', 'percent'];\n    return _this;\n  }\n\n  DataZoomModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputRawOption = retrieveRawOption(option);\n    /**\n     * Suppose a \"main process\" start at the point that model prepared (that is,\n     * model initialized or merged or method called in `action`).\n     * We should keep the `main process` idempotent, that is, given a set of values\n     * on `option`, we get the same result.\n     *\n     * But sometimes, values on `option` will be updated for providing users\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\n     * should not be the base/input of the `main process`.\n     *\n     * So in that case we should save and keep the input of the `main process`\n     * separately, called `settledOption`.\n     *\n     * For example, consider the case:\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\n     *     calculated value.\n     * (Step)2) click the legend to hide and show a series,\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\n     *     which brings incorrect result.\n     */\n\n    this.settledOption = inputRawOption;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._doInit(inputRawOption);\n  };\n\n  DataZoomModel.prototype.mergeOption = function (newOption) {\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\n\n    merge(this.option, newOption, true);\n    merge(this.settledOption, inputRawOption, true);\n\n    this._doInit(inputRawOption);\n  };\n\n  DataZoomModel.prototype._doInit = function (inputRawOption) {\n    var thisOption = this.option;\n\n    this._setDefaultThrottle(inputRawOption);\n\n    this._updateRangeUse(inputRawOption);\n\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = settledOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n\n    this._resetTarget();\n  };\n\n  DataZoomModel.prototype._resetTarget = function () {\n    var optionOrient = this.get('orient', true);\n    var targetAxisIndexMap = this._targetAxisInfoMap = createHashMap();\n\n    var hasAxisSpecified = this._fillSpecifiedTargetAxis(targetAxisIndexMap);\n\n    if (hasAxisSpecified) {\n      this._orient = optionOrient || this._makeAutoOrientByTargetAxis();\n    } else {\n      this._orient = optionOrient || 'horizontal';\n\n      this._fillAutoTargetAxisByOrient(targetAxisIndexMap, this._orient);\n    }\n\n    this._noTarget = true;\n    targetAxisIndexMap.each(function (axisInfo) {\n      if (axisInfo.indexList.length) {\n        this._noTarget = false;\n      }\n    }, this);\n  };\n\n  DataZoomModel.prototype._fillSpecifiedTargetAxis = function (targetAxisIndexMap) {\n    var hasAxisSpecified = false;\n    each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\n      var refering = this.getReferringComponents(getAxisMainType(axisDim), MULTIPLE_REFERRING); // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n\n      if (!refering.specified) {\n        return;\n      }\n\n      hasAxisSpecified = true;\n      var axisInfo = new DataZoomAxisInfo();\n      each(refering.models, function (axisModel) {\n        axisInfo.add(axisModel.componentIndex);\n      });\n      targetAxisIndexMap.set(axisDim, axisInfo);\n    }, this);\n    return hasAxisSpecified;\n  };\n\n  DataZoomModel.prototype._fillAutoTargetAxisByOrient = function (targetAxisIndexMap, orient) {\n    var ecModel = this.ecModel;\n    var needAuto = true; // Find axis that parallel to dataZoom as default.\n\n    if (needAuto) {\n      var axisDim = orient === 'vertical' ? 'y' : 'x';\n      var axisModels = ecModel.findComponents({\n        mainType: axisDim + 'Axis'\n      });\n      setParallelAxis(axisModels, axisDim);\n    } // Find axis that parallel to dataZoom as default.\n\n\n    if (needAuto) {\n      var axisModels = ecModel.findComponents({\n        mainType: 'singleAxis',\n        filter: function (axisModel) {\n          return axisModel.get('orient', true) === orient;\n        }\n      });\n      setParallelAxis(axisModels, 'single');\n    }\n\n    function setParallelAxis(axisModels, axisDim) {\n      // At least use the first parallel axis as the target axis.\n      var axisModel = axisModels[0];\n\n      if (!axisModel) {\n        return;\n      }\n\n      var axisInfo = new DataZoomAxisInfo();\n      axisInfo.add(axisModel.componentIndex);\n      targetAxisIndexMap.set(axisDim, axisInfo);\n      needAuto = false; // Find parallel axes in the same grid.\n\n      if (axisDim === 'x' || axisDim === 'y') {\n        var gridModel_1 = axisModel.getReferringComponents('grid', SINGLE_REFERRING).models[0];\n        gridModel_1 && each(axisModels, function (axModel) {\n          if (axisModel.componentIndex !== axModel.componentIndex && gridModel_1 === axModel.getReferringComponents('grid', SINGLE_REFERRING).models[0]) {\n            axisInfo.add(axModel.componentIndex);\n          }\n        });\n      }\n    }\n\n    if (needAuto) {\n      // If no parallel axis, find the first category axis as default. (Also consider polar).\n      each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\n        if (!needAuto) {\n          return;\n        }\n\n        var axisModels = ecModel.findComponents({\n          mainType: getAxisMainType(axisDim),\n          filter: function (axisModel) {\n            return axisModel.get('type', true) === 'category';\n          }\n        });\n\n        if (axisModels[0]) {\n          var axisInfo = new DataZoomAxisInfo();\n          axisInfo.add(axisModels[0].componentIndex);\n          targetAxisIndexMap.set(axisDim, axisInfo);\n          needAuto = false;\n        }\n      }, this);\n    }\n  };\n\n  DataZoomModel.prototype._makeAutoOrientByTargetAxis = function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (axisDim) {\n      !dim && (dim = axisDim);\n    }, this);\n    return dim === 'y' ? 'vertical' : 'horizontal';\n  };\n\n  DataZoomModel.prototype._setDefaultThrottle = function (inputRawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (inputRawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  };\n\n  DataZoomModel.prototype._updateRangeUse = function (inputRawOption) {\n    var rangePropMode = this._rangePropMode;\n    var rangeModeInOption = this.get('rangeMode');\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      var percentSpecified = inputRawOption[names[0]] != null;\n      var valueSpecified = inputRawOption[names[1]] != null;\n\n      if (percentSpecified && !valueSpecified) {\n        rangePropMode[index] = 'percent';\n      } else if (!percentSpecified && valueSpecified) {\n        rangePropMode[index] = 'value';\n      } else if (rangeModeInOption) {\n        rangePropMode[index] = rangeModeInOption[index];\n      } else if (percentSpecified) {\n        // percentSpecified && valueSpecified\n        rangePropMode[index] = 'percent';\n      } // else remain its original setting.\n\n    });\n  };\n\n  DataZoomModel.prototype.noTarget = function () {\n    return this._noTarget;\n  };\n\n  DataZoomModel.prototype.getFirstTargetAxisModel = function () {\n    var firstAxisModel;\n    this.eachTargetAxis(function (axisDim, axisIndex) {\n      if (firstAxisModel == null) {\n        firstAxisModel = this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n      }\n    }, this);\n    return firstAxisModel;\n  };\n  /**\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n\n\n  DataZoomModel.prototype.eachTargetAxis = function (callback, context) {\n    this._targetAxisInfoMap.each(function (axisInfo, axisDim) {\n      each(axisInfo.indexList, function (axisIndex) {\n        callback.call(context, axisDim, axisIndex);\n      });\n    });\n  };\n  /**\n   * @return If not found, return null/undefined.\n   */\n\n\n  DataZoomModel.prototype.getAxisProxy = function (axisDim, axisIndex) {\n    var axisModel = this.getAxisModel(axisDim, axisIndex);\n\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    }\n  };\n  /**\n   * @return If not found, return null/undefined.\n   */\n\n\n  DataZoomModel.prototype.getAxisModel = function (axisDim, axisIndex) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(axisDim && axisIndex != null);\n    }\n\n    var axisInfo = this._targetAxisInfoMap.get(axisDim);\n\n    if (axisInfo && axisInfo.indexMap[axisIndex]) {\n      return this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\n    }\n  };\n  /**\n   * If not specified, set to undefined.\n   */\n\n\n  DataZoomModel.prototype.setRawRange = function (opt) {\n    var thisOption = this.option;\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // Consider the pair <start, startValue>:\n      // If one has value and the other one is `null/undefined`, we both set them\n      // to `settledOption`. This strategy enables the feature to clear the original\n      // value in `settledOption` to `null/undefined`.\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\n      // and keep `settledOption` with the original value. This strategy enables users to\n      // only set <end or endValue> but not set <start or startValue> when calling\n      // `dispatchAction`.\n      // The pair <end, endValue> is treated in the same way.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\n      }\n    }, this);\n\n    this._updateRangeUse(opt);\n  };\n\n  DataZoomModel.prototype.setCalculatedRange = function (opt) {\n    var option = this.option;\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\n      option[name] = opt[name];\n    });\n  };\n\n  DataZoomModel.prototype.getPercentRange = function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  };\n  /**\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @return [startValue, endValue] value can only be '-' or finite number.\n   */\n\n\n  DataZoomModel.prototype.getValueRange = function (axisDim, axisIndex) {\n    if (axisDim == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDim, axisIndex).getDataValueWindow();\n    }\n  };\n  /**\n   * @param axisModel If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   */\n\n\n  DataZoomModel.prototype.findRepresentativeAxisProxy = function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var firstProxy;\n\n    var axisDimList = this._targetAxisInfoMap.keys();\n\n    for (var i = 0; i < axisDimList.length; i++) {\n      var axisDim = axisDimList[i];\n\n      var axisInfo = this._targetAxisInfoMap.get(axisDim);\n\n      for (var j = 0; j < axisInfo.indexList.length; j++) {\n        var proxy = this.getAxisProxy(axisDim, axisInfo.indexList[j]);\n\n        if (proxy.hostedBy(this)) {\n          return proxy;\n        }\n\n        if (!firstProxy) {\n          firstProxy = proxy;\n        }\n      }\n    } // If no hosted proxy found, still need to return a proxy.\n    // This case always happens in toolbox dataZoom, where axes are all hosted by\n    // other dataZooms.\n\n\n    return firstProxy;\n  };\n\n  DataZoomModel.prototype.getRangePropMode = function () {\n    return this._rangePropMode.slice();\n  };\n\n  DataZoomModel.prototype.getOrient = function () {\n    if (process.env.NODE_ENV !== 'production') {\n      // Should not be called before initialized.\n      assert(this._orient);\n    }\n\n    return this._orient;\n  };\n\n  DataZoomModel.type = 'dataZoom';\n  DataZoomModel.dependencies = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series', 'toolbox'];\n  DataZoomModel.defaultOption = {\n    // zlevel: 0,\n    z: 4,\n    filterMode: 'filter',\n    start: 0,\n    end: 100\n  };\n  return DataZoomModel;\n}(ComponentModel);\n/**\n * Retrieve the those raw params from option, which will be cached separately.\n * becasue they will be overwritten by normalized/calculated values in the main\n * process.\n */\n\n\nfunction retrieveRawOption(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nexport default DataZoomModel;"],"mappings":"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"},"metadata":{},"sourceType":"module"}