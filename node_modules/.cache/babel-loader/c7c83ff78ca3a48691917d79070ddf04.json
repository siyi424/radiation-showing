{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/esnext.typed-array.find-last.js\";\nimport \"core-js/modules/esnext.typed-array.find-last-index.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { error } from '../../util/log.js';\nvar linesLayout = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('The lines series must have a coordinate system.');\n      }\n\n      return;\n    }\n\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n    return {\n      progress: function (params, lineData) {\n        var lineCoords = [];\n\n        if (isLarge) {\n          var points = void 0;\n          var segCount = params.end - params.start;\n\n          if (isPolyline) {\n            var totalCoordsCount = 0;\n\n            for (var i = params.start; i < params.end; i++) {\n              totalCoordsCount += seriesModel.getLineCoordsCount(i);\n            }\n\n            points = new Float32Array(segCount + totalCoordsCount * 2);\n          } else {\n            points = new Float32Array(segCount * 4);\n          }\n\n          var offset = 0;\n          var pt = [];\n\n          for (var i = params.start; i < params.end; i++) {\n            var len = seriesModel.getLineCoords(i, lineCoords);\n\n            if (isPolyline) {\n              points[offset++] = len;\n            }\n\n            for (var k = 0; k < len; k++) {\n              pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n              points[offset++] = pt[0];\n              points[offset++] = pt[1];\n            }\n          }\n\n          lineData.setLayout('linesPoints', points);\n        } else {\n          for (var i = params.start; i < params.end; i++) {\n            var itemModel = lineData.getItemModel(i);\n            var len = seriesModel.getLineCoords(i, lineCoords);\n            var pts = [];\n\n            if (isPolyline) {\n              for (var j = 0; j < len; j++) {\n                pts.push(coordSys.dataToPoint(lineCoords[j]));\n              }\n            } else {\n              pts[0] = coordSys.dataToPoint(lineCoords[0]);\n              pts[1] = coordSys.dataToPoint(lineCoords[1]);\n              var curveness = itemModel.get(['lineStyle', 'curveness']);\n\n              if (+curveness) {\n                pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n              }\n            }\n\n            lineData.setItemLayout(i, pts);\n          }\n        }\n      }\n    };\n  }\n};\nexport default linesLayout;","map":{"version":3,"names":["createRenderPlanner","error","linesLayout","seriesType","plan","reset","seriesModel","coordSys","coordinateSystem","process","env","NODE_ENV","isPolyline","get","isLarge","pipelineContext","large","progress","params","lineData","lineCoords","points","segCount","end","start","totalCoordsCount","i","getLineCoordsCount","Float32Array","offset","pt","len","getLineCoords","k","dataToPoint","setLayout","itemModel","getItemModel","pts","j","push","curveness","setItemLayout"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/lines/linesLayout.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\nimport createRenderPlanner from '../helper/createRenderPlanner.js';\nimport { error } from '../../util/log.js';\nvar linesLayout = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      if (process.env.NODE_ENV !== 'production') {\n        error('The lines series must have a coordinate system.');\n      }\n\n      return;\n    }\n\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n    return {\n      progress: function (params, lineData) {\n        var lineCoords = [];\n\n        if (isLarge) {\n          var points = void 0;\n          var segCount = params.end - params.start;\n\n          if (isPolyline) {\n            var totalCoordsCount = 0;\n\n            for (var i = params.start; i < params.end; i++) {\n              totalCoordsCount += seriesModel.getLineCoordsCount(i);\n            }\n\n            points = new Float32Array(segCount + totalCoordsCount * 2);\n          } else {\n            points = new Float32Array(segCount * 4);\n          }\n\n          var offset = 0;\n          var pt = [];\n\n          for (var i = params.start; i < params.end; i++) {\n            var len = seriesModel.getLineCoords(i, lineCoords);\n\n            if (isPolyline) {\n              points[offset++] = len;\n            }\n\n            for (var k = 0; k < len; k++) {\n              pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n              points[offset++] = pt[0];\n              points[offset++] = pt[1];\n            }\n          }\n\n          lineData.setLayout('linesPoints', points);\n        } else {\n          for (var i = params.start; i < params.end; i++) {\n            var itemModel = lineData.getItemModel(i);\n            var len = seriesModel.getLineCoords(i, lineCoords);\n            var pts = [];\n\n            if (isPolyline) {\n              for (var j = 0; j < len; j++) {\n                pts.push(coordSys.dataToPoint(lineCoords[j]));\n              }\n            } else {\n              pts[0] = coordSys.dataToPoint(lineCoords[0]);\n              pts[1] = coordSys.dataToPoint(lineCoords[1]);\n              var curveness = itemModel.get(['lineStyle', 'curveness']);\n\n              if (+curveness) {\n                pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n              }\n            }\n\n            lineData.setItemLayout(i, pts);\n          }\n        }\n      }\n    };\n  }\n};\nexport default linesLayout;"],"mappings":"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"},"metadata":{},"sourceType":"module"}