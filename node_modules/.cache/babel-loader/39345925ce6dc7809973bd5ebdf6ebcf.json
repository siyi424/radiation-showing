{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { makeInner } from '../util/model.js';\nimport { getDecalFromPalette } from '../model/mixin/palette.js';\nvar DEFAULT_OPTION = {\n  label: {\n    enabled: true\n  },\n  decal: {\n    show: false\n  }\n};\nvar inner = makeInner();\nvar decalPaletteScope = {};\nexport default function ariaVisual(ecModel, api) {\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\n\n  if (!ariaModel.get('enabled')) {\n    return;\n  }\n\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\n  zrUtil.merge(ariaModel.option, defaultOption, false);\n  setDecal();\n  setLabel();\n\n  function setDecal() {\n    var decalModel = ariaModel.getModel('decal');\n    var useDecal = decalModel.get('show');\n\n    if (useDecal) {\n      // Each type of series use one scope.\n      // Pie and funnel are using diferrent scopes\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\n      ecModel.eachSeries(function (seriesModel) {\n        if (seriesModel.isColorBySeries()) {\n          return;\n        }\n\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\n\n        if (!decalScope) {\n          decalScope = {};\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\n        }\n\n        inner(seriesModel).scope = decalScope;\n      });\n      ecModel.eachRawSeries(function (seriesModel) {\n        if (ecModel.isSeriesFiltered(seriesModel)) {\n          return;\n        }\n\n        if (zrUtil.isFunction(seriesModel.enableAriaDecal)) {\n          // Let series define how to use decal palette on data\n          seriesModel.enableAriaDecal();\n          return;\n        }\n\n        var data = seriesModel.getData();\n\n        if (!seriesModel.isColorBySeries()) {\n          var dataAll_1 = seriesModel.getRawData();\n          var idxMap_1 = {};\n          var decalScope_1 = inner(seriesModel).scope;\n          data.each(function (idx) {\n            var rawIdx = data.getRawIndex(idx);\n            idxMap_1[rawIdx] = idx;\n          });\n          var dataCount_1 = dataAll_1.count();\n          dataAll_1.each(function (rawIdx) {\n            var idx = idxMap_1[rawIdx];\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\n          });\n        } else {\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\n          var specifiedDecal = data.getVisual('decal');\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\n        }\n\n        function mergeDecal(specifiedDecal, paletteDecal) {\n          // Merge decal from palette to decal from itemStyle.\n          // User do not need to specify all of the decal props.\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\n          resultDecal.dirty = true;\n          return resultDecal;\n        }\n      });\n    }\n  }\n\n  function setLabel() {\n    var labelLocale = ecModel.getLocaleModel().get('aria');\n    var labelModel = ariaModel.getModel('label');\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\n\n    if (!labelModel.get('enabled')) {\n      return;\n    }\n\n    var dom = api.getZr().dom;\n\n    if (labelModel.get('description')) {\n      dom.setAttribute('aria-label', labelModel.get('description'));\n      return;\n    }\n\n    var seriesCnt = ecModel.getSeriesCount();\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n    var ariaLabel;\n\n    if (seriesCnt < 1) {\n      // No series, no aria label\n      return;\n    } else {\n      var title = getTitle();\n\n      if (title) {\n        var withTitle = labelModel.get(['general', 'withTitle']);\n        ariaLabel = replace(withTitle, {\n          title: title\n        });\n      } else {\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\n      }\n\n      var seriesLabels_1 = [];\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\n      ariaLabel += replace(prefix, {\n        seriesCount: seriesCnt\n      });\n      ecModel.eachSeries(function (seriesModel, idx) {\n        if (idx < displaySeriesCnt) {\n          var seriesLabel = void 0;\n          var seriesName = seriesModel.get('name');\n          var withName = seriesName ? 'withName' : 'withoutName';\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\n          seriesLabel = replace(seriesLabel, {\n            seriesId: seriesModel.seriesIndex,\n            seriesName: seriesModel.get('name'),\n            seriesType: getSeriesTypeName(seriesModel.subType)\n          });\n          var data = seriesModel.getData();\n\n          if (data.count() > maxDataCnt) {\n            // Show part of data\n            var partialLabel = labelModel.get(['data', 'partialData']);\n            seriesLabel += replace(partialLabel, {\n              displayCnt: maxDataCnt\n            });\n          } else {\n            seriesLabel += labelModel.get(['data', 'allData']);\n          }\n\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\n          var dataLabels = [];\n\n          for (var i = 0; i < data.count(); i++) {\n            if (i < maxDataCnt) {\n              var name_1 = data.getName(i);\n              var value = data.getValues(i);\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\n              dataLabels.push(replace(dataLabel, {\n                name: name_1,\n                value: value.join(middleSeparator_1)\n              }));\n            }\n          }\n\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\n          seriesLabels_1.push(seriesLabel);\n        }\n      });\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\n      var middleSeparator = separatorModel.get('middle');\n      var endSeparator = separatorModel.get('end');\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\n      dom.setAttribute('aria-label', ariaLabel);\n    }\n  }\n\n  function replace(str, keyValues) {\n    if (!zrUtil.isString(str)) {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getTitle() {\n    var title = ecModel.get('title');\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '自定义图';\n  }\n}","map":{"version":3,"names":["zrUtil","makeInner","getDecalFromPalette","DEFAULT_OPTION","label","enabled","decal","show","inner","decalPaletteScope","ariaVisual","ecModel","api","ariaModel","getModel","get","defaultOption","clone","merge","getLocaleModel","option","setDecal","setLabel","decalModel","useDecal","paletteScopeGroupByType_1","createHashMap","eachSeries","seriesModel","isColorBySeries","decalScope","type","set","scope","eachRawSeries","isSeriesFiltered","isFunction","enableAriaDecal","data","getData","dataAll_1","getRawData","idxMap_1","decalScope_1","each","idx","rawIdx","getRawIndex","dataCount_1","count","name","getName","paletteDecal","specifiedDecal","getItemVisual","setItemVisual","mergeDecal","getSeriesCount","getVisual","setVisual","resultDecal","extend","dirty","labelLocale","labelModel","defaults","dom","getZr","setAttribute","seriesCnt","maxDataCnt","maxSeriesCnt","displaySeriesCnt","Math","min","ariaLabel","title","getTitle","withTitle","replace","seriesLabels_1","prefix","seriesCount","seriesLabel","seriesName","withName","seriesId","seriesIndex","seriesType","getSeriesTypeName","subType","partialLabel","displayCnt","middleSeparator_1","endSeparator_1","dataLabels","i","name_1","value","getValues","dataLabel","push","join","separatorModel","middleSeparator","endSeparator","str","keyValues","isString","result","key","RegExp","length","text"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/visual/aria.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { makeInner } from '../util/model.js';\nimport { getDecalFromPalette } from '../model/mixin/palette.js';\nvar DEFAULT_OPTION = {\n  label: {\n    enabled: true\n  },\n  decal: {\n    show: false\n  }\n};\nvar inner = makeInner();\nvar decalPaletteScope = {};\nexport default function ariaVisual(ecModel, api) {\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\n\n  if (!ariaModel.get('enabled')) {\n    return;\n  }\n\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\n  zrUtil.merge(ariaModel.option, defaultOption, false);\n  setDecal();\n  setLabel();\n\n  function setDecal() {\n    var decalModel = ariaModel.getModel('decal');\n    var useDecal = decalModel.get('show');\n\n    if (useDecal) {\n      // Each type of series use one scope.\n      // Pie and funnel are using diferrent scopes\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\n      ecModel.eachSeries(function (seriesModel) {\n        if (seriesModel.isColorBySeries()) {\n          return;\n        }\n\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\n\n        if (!decalScope) {\n          decalScope = {};\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\n        }\n\n        inner(seriesModel).scope = decalScope;\n      });\n      ecModel.eachRawSeries(function (seriesModel) {\n        if (ecModel.isSeriesFiltered(seriesModel)) {\n          return;\n        }\n\n        if (zrUtil.isFunction(seriesModel.enableAriaDecal)) {\n          // Let series define how to use decal palette on data\n          seriesModel.enableAriaDecal();\n          return;\n        }\n\n        var data = seriesModel.getData();\n\n        if (!seriesModel.isColorBySeries()) {\n          var dataAll_1 = seriesModel.getRawData();\n          var idxMap_1 = {};\n          var decalScope_1 = inner(seriesModel).scope;\n          data.each(function (idx) {\n            var rawIdx = data.getRawIndex(idx);\n            idxMap_1[rawIdx] = idx;\n          });\n          var dataCount_1 = dataAll_1.count();\n          dataAll_1.each(function (rawIdx) {\n            var idx = idxMap_1[rawIdx];\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\n          });\n        } else {\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\n          var specifiedDecal = data.getVisual('decal');\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\n        }\n\n        function mergeDecal(specifiedDecal, paletteDecal) {\n          // Merge decal from palette to decal from itemStyle.\n          // User do not need to specify all of the decal props.\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\n          resultDecal.dirty = true;\n          return resultDecal;\n        }\n      });\n    }\n  }\n\n  function setLabel() {\n    var labelLocale = ecModel.getLocaleModel().get('aria');\n    var labelModel = ariaModel.getModel('label');\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\n\n    if (!labelModel.get('enabled')) {\n      return;\n    }\n\n    var dom = api.getZr().dom;\n\n    if (labelModel.get('description')) {\n      dom.setAttribute('aria-label', labelModel.get('description'));\n      return;\n    }\n\n    var seriesCnt = ecModel.getSeriesCount();\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n    var ariaLabel;\n\n    if (seriesCnt < 1) {\n      // No series, no aria label\n      return;\n    } else {\n      var title = getTitle();\n\n      if (title) {\n        var withTitle = labelModel.get(['general', 'withTitle']);\n        ariaLabel = replace(withTitle, {\n          title: title\n        });\n      } else {\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\n      }\n\n      var seriesLabels_1 = [];\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\n      ariaLabel += replace(prefix, {\n        seriesCount: seriesCnt\n      });\n      ecModel.eachSeries(function (seriesModel, idx) {\n        if (idx < displaySeriesCnt) {\n          var seriesLabel = void 0;\n          var seriesName = seriesModel.get('name');\n          var withName = seriesName ? 'withName' : 'withoutName';\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\n          seriesLabel = replace(seriesLabel, {\n            seriesId: seriesModel.seriesIndex,\n            seriesName: seriesModel.get('name'),\n            seriesType: getSeriesTypeName(seriesModel.subType)\n          });\n          var data = seriesModel.getData();\n\n          if (data.count() > maxDataCnt) {\n            // Show part of data\n            var partialLabel = labelModel.get(['data', 'partialData']);\n            seriesLabel += replace(partialLabel, {\n              displayCnt: maxDataCnt\n            });\n          } else {\n            seriesLabel += labelModel.get(['data', 'allData']);\n          }\n\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\n          var dataLabels = [];\n\n          for (var i = 0; i < data.count(); i++) {\n            if (i < maxDataCnt) {\n              var name_1 = data.getName(i);\n              var value = data.getValues(i);\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\n              dataLabels.push(replace(dataLabel, {\n                name: name_1,\n                value: value.join(middleSeparator_1)\n              }));\n            }\n          }\n\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\n          seriesLabels_1.push(seriesLabel);\n        }\n      });\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\n      var middleSeparator = separatorModel.get('middle');\n      var endSeparator = separatorModel.get('end');\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\n      dom.setAttribute('aria-label', ariaLabel);\n    }\n  }\n\n  function replace(str, keyValues) {\n    if (!zrUtil.isString(str)) {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getTitle() {\n    var title = ecModel.get('title');\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '自定义图';\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}