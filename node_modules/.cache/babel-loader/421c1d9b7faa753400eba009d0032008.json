{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Element from '../Element.js';\nimport BoundingRect from '../core/BoundingRect.js';\nimport { keys, extend, createObject } from '../core/util.js';\nimport { REDRAW_BIT, STYLE_CHANGED_BIT } from './constants.js';\nvar STYLE_MAGIC_KEY = '__zr_style_' + Math.round(Math.random() * 10);\nexport var DEFAULT_COMMON_STYLE = {\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  shadowColor: '#000',\n  opacity: 1,\n  blend: 'source-over'\n};\nexport var DEFAULT_COMMON_ANIMATION_PROPS = {\n  style: {\n    shadowBlur: true,\n    shadowOffsetX: true,\n    shadowOffsetY: true,\n    shadowColor: true,\n    opacity: true\n  }\n};\nDEFAULT_COMMON_STYLE[STYLE_MAGIC_KEY] = true;\nvar PRIMARY_STATES_KEYS = ['z', 'z2', 'invisible'];\nvar PRIMARY_STATES_KEYS_IN_HOVER_LAYER = ['invisible'];\n\nvar Displayable = function (_super) {\n  __extends(Displayable, _super);\n\n  function Displayable(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Displayable.prototype._init = function (props) {\n    var keysArr = keys(props);\n\n    for (var i = 0; i < keysArr.length; i++) {\n      var key = keysArr[i];\n\n      if (key === 'style') {\n        this.useStyle(props[key]);\n      } else {\n        _super.prototype.attrKV.call(this, key, props[key]);\n      }\n    }\n\n    if (!this.style) {\n      this.useStyle({});\n    }\n  };\n\n  Displayable.prototype.beforeBrush = function () {};\n\n  Displayable.prototype.afterBrush = function () {};\n\n  Displayable.prototype.innerBeforeBrush = function () {};\n\n  Displayable.prototype.innerAfterBrush = function () {};\n\n  Displayable.prototype.shouldBePainted = function (viewWidth, viewHeight, considerClipPath, considerAncestors) {\n    var m = this.transform;\n\n    if (this.ignore || this.invisible || this.style.opacity === 0 || this.culling && isDisplayableCulled(this, viewWidth, viewHeight) || m && !m[0] && !m[3]) {\n      return false;\n    }\n\n    if (considerClipPath && this.__clipPaths) {\n      for (var i = 0; i < this.__clipPaths.length; ++i) {\n        if (this.__clipPaths[i].isZeroArea()) {\n          return false;\n        }\n      }\n    }\n\n    if (considerAncestors && this.parent) {\n      var parent_1 = this.parent;\n\n      while (parent_1) {\n        if (parent_1.ignore) {\n          return false;\n        }\n\n        parent_1 = parent_1.parent;\n      }\n    }\n\n    return true;\n  };\n\n  Displayable.prototype.contain = function (x, y) {\n    return this.rectContain(x, y);\n  };\n\n  Displayable.prototype.traverse = function (cb, context) {\n    cb.call(context, this);\n  };\n\n  Displayable.prototype.rectContain = function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  };\n\n  Displayable.prototype.getPaintRect = function () {\n    var rect = this._paintRect;\n\n    if (!this._paintRect || this.__dirty) {\n      var transform = this.transform;\n      var elRect = this.getBoundingRect();\n      var style = this.style;\n      var shadowSize = style.shadowBlur || 0;\n      var shadowOffsetX = style.shadowOffsetX || 0;\n      var shadowOffsetY = style.shadowOffsetY || 0;\n      rect = this._paintRect || (this._paintRect = new BoundingRect(0, 0, 0, 0));\n\n      if (transform) {\n        BoundingRect.applyTransform(rect, elRect, transform);\n      } else {\n        rect.copy(elRect);\n      }\n\n      if (shadowSize || shadowOffsetX || shadowOffsetY) {\n        rect.width += shadowSize * 2 + Math.abs(shadowOffsetX);\n        rect.height += shadowSize * 2 + Math.abs(shadowOffsetY);\n        rect.x = Math.min(rect.x, rect.x + shadowOffsetX - shadowSize);\n        rect.y = Math.min(rect.y, rect.y + shadowOffsetY - shadowSize);\n      }\n\n      var tolerance = this.dirtyRectTolerance;\n\n      if (!rect.isZero()) {\n        rect.x = Math.floor(rect.x - tolerance);\n        rect.y = Math.floor(rect.y - tolerance);\n        rect.width = Math.ceil(rect.width + 1 + tolerance * 2);\n        rect.height = Math.ceil(rect.height + 1 + tolerance * 2);\n      }\n    }\n\n    return rect;\n  };\n\n  Displayable.prototype.setPrevPaintRect = function (paintRect) {\n    if (paintRect) {\n      this._prevPaintRect = this._prevPaintRect || new BoundingRect(0, 0, 0, 0);\n\n      this._prevPaintRect.copy(paintRect);\n    } else {\n      this._prevPaintRect = null;\n    }\n  };\n\n  Displayable.prototype.getPrevPaintRect = function () {\n    return this._prevPaintRect;\n  };\n\n  Displayable.prototype.animateStyle = function (loop) {\n    return this.animate('style', loop);\n  };\n\n  Displayable.prototype.updateDuringAnimation = function (targetKey) {\n    if (targetKey === 'style') {\n      this.dirtyStyle();\n    } else {\n      this.markRedraw();\n    }\n  };\n\n  Displayable.prototype.attrKV = function (key, value) {\n    if (key !== 'style') {\n      _super.prototype.attrKV.call(this, key, value);\n    } else {\n      if (!this.style) {\n        this.useStyle(value);\n      } else {\n        this.setStyle(value);\n      }\n    }\n  };\n\n  Displayable.prototype.setStyle = function (keyOrObj, value) {\n    if (typeof keyOrObj === 'string') {\n      this.style[keyOrObj] = value;\n    } else {\n      extend(this.style, keyOrObj);\n    }\n\n    this.dirtyStyle();\n    return this;\n  };\n\n  Displayable.prototype.dirtyStyle = function (notRedraw) {\n    if (!notRedraw) {\n      this.markRedraw();\n    }\n\n    this.__dirty |= STYLE_CHANGED_BIT;\n\n    if (this._rect) {\n      this._rect = null;\n    }\n  };\n\n  Displayable.prototype.dirty = function () {\n    this.dirtyStyle();\n  };\n\n  Displayable.prototype.styleChanged = function () {\n    return !!(this.__dirty & STYLE_CHANGED_BIT);\n  };\n\n  Displayable.prototype.styleUpdated = function () {\n    this.__dirty &= ~STYLE_CHANGED_BIT;\n  };\n\n  Displayable.prototype.createStyle = function (obj) {\n    return createObject(DEFAULT_COMMON_STYLE, obj);\n  };\n\n  Displayable.prototype.useStyle = function (obj) {\n    if (!obj[STYLE_MAGIC_KEY]) {\n      obj = this.createStyle(obj);\n    }\n\n    if (this.__inHover) {\n      this.__hoverStyle = obj;\n    } else {\n      this.style = obj;\n    }\n\n    this.dirtyStyle();\n  };\n\n  Displayable.prototype.isStyleObject = function (obj) {\n    return obj[STYLE_MAGIC_KEY];\n  };\n\n  Displayable.prototype._innerSaveToNormal = function (toState) {\n    _super.prototype._innerSaveToNormal.call(this, toState);\n\n    var normalState = this._normalState;\n\n    if (toState.style && !normalState.style) {\n      normalState.style = this._mergeStyle(this.createStyle(), this.style);\n    }\n\n    this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS);\n  };\n\n  Displayable.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n    _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n\n    var needsRestoreToNormal = !(state && keepCurrentStates);\n    var targetStyle;\n\n    if (state && state.style) {\n      if (transition) {\n        if (keepCurrentStates) {\n          targetStyle = state.style;\n        } else {\n          targetStyle = this._mergeStyle(this.createStyle(), normalState.style);\n\n          this._mergeStyle(targetStyle, state.style);\n        }\n      } else {\n        targetStyle = this._mergeStyle(this.createStyle(), keepCurrentStates ? this.style : normalState.style);\n\n        this._mergeStyle(targetStyle, state.style);\n      }\n    } else if (needsRestoreToNormal) {\n      targetStyle = normalState.style;\n    }\n\n    if (targetStyle) {\n      if (transition) {\n        var sourceStyle = this.style;\n        this.style = this.createStyle(needsRestoreToNormal ? {} : sourceStyle);\n\n        if (needsRestoreToNormal) {\n          var changedKeys = keys(sourceStyle);\n\n          for (var i = 0; i < changedKeys.length; i++) {\n            var key = changedKeys[i];\n\n            if (key in targetStyle) {\n              targetStyle[key] = targetStyle[key];\n              this.style[key] = sourceStyle[key];\n            }\n          }\n        }\n\n        var targetKeys = keys(targetStyle);\n\n        for (var i = 0; i < targetKeys.length; i++) {\n          var key = targetKeys[i];\n          this.style[key] = this.style[key];\n        }\n\n        this._transitionState(stateName, {\n          style: targetStyle\n        }, animationCfg, this.getAnimationStyleProps());\n      } else {\n        this.useStyle(targetStyle);\n      }\n    }\n\n    var statesKeys = this.__inHover ? PRIMARY_STATES_KEYS_IN_HOVER_LAYER : PRIMARY_STATES_KEYS;\n\n    for (var i = 0; i < statesKeys.length; i++) {\n      var key = statesKeys[i];\n\n      if (state && state[key] != null) {\n        this[key] = state[key];\n      } else if (needsRestoreToNormal) {\n        if (normalState[key] != null) {\n          this[key] = normalState[key];\n        }\n      }\n    }\n  };\n\n  Displayable.prototype._mergeStates = function (states) {\n    var mergedState = _super.prototype._mergeStates.call(this, states);\n\n    var mergedStyle;\n\n    for (var i = 0; i < states.length; i++) {\n      var state = states[i];\n\n      if (state.style) {\n        mergedStyle = mergedStyle || {};\n\n        this._mergeStyle(mergedStyle, state.style);\n      }\n    }\n\n    if (mergedStyle) {\n      mergedState.style = mergedStyle;\n    }\n\n    return mergedState;\n  };\n\n  Displayable.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n    extend(targetStyle, sourceStyle);\n    return targetStyle;\n  };\n\n  Displayable.prototype.getAnimationStyleProps = function () {\n    return DEFAULT_COMMON_ANIMATION_PROPS;\n  };\n\n  Displayable.initDefaultProps = function () {\n    var dispProto = Displayable.prototype;\n    dispProto.type = 'displayable';\n    dispProto.invisible = false;\n    dispProto.z = 0;\n    dispProto.z2 = 0;\n    dispProto.zlevel = 0;\n    dispProto.culling = false;\n    dispProto.cursor = 'pointer';\n    dispProto.rectHover = false;\n    dispProto.incremental = false;\n    dispProto._rect = null;\n    dispProto.dirtyRectTolerance = 0;\n    dispProto.__dirty = REDRAW_BIT | STYLE_CHANGED_BIT;\n  }();\n\n  return Displayable;\n}(Element);\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nexport default Displayable;","map":{"version":3,"names":["__extends","Element","BoundingRect","keys","extend","createObject","REDRAW_BIT","STYLE_CHANGED_BIT","STYLE_MAGIC_KEY","Math","round","random","DEFAULT_COMMON_STYLE","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","opacity","blend","DEFAULT_COMMON_ANIMATION_PROPS","style","PRIMARY_STATES_KEYS","PRIMARY_STATES_KEYS_IN_HOVER_LAYER","Displayable","_super","props","call","prototype","_init","keysArr","i","length","key","useStyle","attrKV","beforeBrush","afterBrush","innerBeforeBrush","innerAfterBrush","shouldBePainted","viewWidth","viewHeight","considerClipPath","considerAncestors","m","transform","ignore","invisible","culling","isDisplayableCulled","__clipPaths","isZeroArea","parent","parent_1","contain","x","y","rectContain","traverse","cb","context","coord","transformCoordToLocal","rect","getBoundingRect","getPaintRect","_paintRect","__dirty","elRect","shadowSize","applyTransform","copy","width","abs","height","min","tolerance","dirtyRectTolerance","isZero","floor","ceil","setPrevPaintRect","paintRect","_prevPaintRect","getPrevPaintRect","animateStyle","loop","animate","updateDuringAnimation","targetKey","dirtyStyle","markRedraw","value","setStyle","keyOrObj","notRedraw","_rect","dirty","styleChanged","styleUpdated","createStyle","obj","__inHover","__hoverStyle","isStyleObject","_innerSaveToNormal","toState","normalState","_normalState","_mergeStyle","_savePrimaryToNormal","_applyStateObj","stateName","state","keepCurrentStates","transition","animationCfg","needsRestoreToNormal","targetStyle","sourceStyle","changedKeys","targetKeys","_transitionState","getAnimationStyleProps","statesKeys","_mergeStates","states","mergedState","mergedStyle","initDefaultProps","dispProto","type","z","z2","zlevel","cursor","rectHover","incremental","tmpRect","viewRect","el","intersect"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/graphic/Displayable.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Element from '../Element.js';\nimport BoundingRect from '../core/BoundingRect.js';\nimport { keys, extend, createObject } from '../core/util.js';\nimport { REDRAW_BIT, STYLE_CHANGED_BIT } from './constants.js';\nvar STYLE_MAGIC_KEY = '__zr_style_' + Math.round((Math.random() * 10));\nexport var DEFAULT_COMMON_STYLE = {\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    shadowColor: '#000',\n    opacity: 1,\n    blend: 'source-over'\n};\nexport var DEFAULT_COMMON_ANIMATION_PROPS = {\n    style: {\n        shadowBlur: true,\n        shadowOffsetX: true,\n        shadowOffsetY: true,\n        shadowColor: true,\n        opacity: true\n    }\n};\nDEFAULT_COMMON_STYLE[STYLE_MAGIC_KEY] = true;\nvar PRIMARY_STATES_KEYS = ['z', 'z2', 'invisible'];\nvar PRIMARY_STATES_KEYS_IN_HOVER_LAYER = ['invisible'];\nvar Displayable = (function (_super) {\n    __extends(Displayable, _super);\n    function Displayable(props) {\n        return _super.call(this, props) || this;\n    }\n    Displayable.prototype._init = function (props) {\n        var keysArr = keys(props);\n        for (var i = 0; i < keysArr.length; i++) {\n            var key = keysArr[i];\n            if (key === 'style') {\n                this.useStyle(props[key]);\n            }\n            else {\n                _super.prototype.attrKV.call(this, key, props[key]);\n            }\n        }\n        if (!this.style) {\n            this.useStyle({});\n        }\n    };\n    Displayable.prototype.beforeBrush = function () { };\n    Displayable.prototype.afterBrush = function () { };\n    Displayable.prototype.innerBeforeBrush = function () { };\n    Displayable.prototype.innerAfterBrush = function () { };\n    Displayable.prototype.shouldBePainted = function (viewWidth, viewHeight, considerClipPath, considerAncestors) {\n        var m = this.transform;\n        if (this.ignore\n            || this.invisible\n            || this.style.opacity === 0\n            || (this.culling\n                && isDisplayableCulled(this, viewWidth, viewHeight))\n            || (m && !m[0] && !m[3])) {\n            return false;\n        }\n        if (considerClipPath && this.__clipPaths) {\n            for (var i = 0; i < this.__clipPaths.length; ++i) {\n                if (this.__clipPaths[i].isZeroArea()) {\n                    return false;\n                }\n            }\n        }\n        if (considerAncestors && this.parent) {\n            var parent_1 = this.parent;\n            while (parent_1) {\n                if (parent_1.ignore) {\n                    return false;\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n        return true;\n    };\n    Displayable.prototype.contain = function (x, y) {\n        return this.rectContain(x, y);\n    };\n    Displayable.prototype.traverse = function (cb, context) {\n        cb.call(context, this);\n    };\n    Displayable.prototype.rectContain = function (x, y) {\n        var coord = this.transformCoordToLocal(x, y);\n        var rect = this.getBoundingRect();\n        return rect.contain(coord[0], coord[1]);\n    };\n    Displayable.prototype.getPaintRect = function () {\n        var rect = this._paintRect;\n        if (!this._paintRect || this.__dirty) {\n            var transform = this.transform;\n            var elRect = this.getBoundingRect();\n            var style = this.style;\n            var shadowSize = style.shadowBlur || 0;\n            var shadowOffsetX = style.shadowOffsetX || 0;\n            var shadowOffsetY = style.shadowOffsetY || 0;\n            rect = this._paintRect || (this._paintRect = new BoundingRect(0, 0, 0, 0));\n            if (transform) {\n                BoundingRect.applyTransform(rect, elRect, transform);\n            }\n            else {\n                rect.copy(elRect);\n            }\n            if (shadowSize || shadowOffsetX || shadowOffsetY) {\n                rect.width += shadowSize * 2 + Math.abs(shadowOffsetX);\n                rect.height += shadowSize * 2 + Math.abs(shadowOffsetY);\n                rect.x = Math.min(rect.x, rect.x + shadowOffsetX - shadowSize);\n                rect.y = Math.min(rect.y, rect.y + shadowOffsetY - shadowSize);\n            }\n            var tolerance = this.dirtyRectTolerance;\n            if (!rect.isZero()) {\n                rect.x = Math.floor(rect.x - tolerance);\n                rect.y = Math.floor(rect.y - tolerance);\n                rect.width = Math.ceil(rect.width + 1 + tolerance * 2);\n                rect.height = Math.ceil(rect.height + 1 + tolerance * 2);\n            }\n        }\n        return rect;\n    };\n    Displayable.prototype.setPrevPaintRect = function (paintRect) {\n        if (paintRect) {\n            this._prevPaintRect = this._prevPaintRect || new BoundingRect(0, 0, 0, 0);\n            this._prevPaintRect.copy(paintRect);\n        }\n        else {\n            this._prevPaintRect = null;\n        }\n    };\n    Displayable.prototype.getPrevPaintRect = function () {\n        return this._prevPaintRect;\n    };\n    Displayable.prototype.animateStyle = function (loop) {\n        return this.animate('style', loop);\n    };\n    Displayable.prototype.updateDuringAnimation = function (targetKey) {\n        if (targetKey === 'style') {\n            this.dirtyStyle();\n        }\n        else {\n            this.markRedraw();\n        }\n    };\n    Displayable.prototype.attrKV = function (key, value) {\n        if (key !== 'style') {\n            _super.prototype.attrKV.call(this, key, value);\n        }\n        else {\n            if (!this.style) {\n                this.useStyle(value);\n            }\n            else {\n                this.setStyle(value);\n            }\n        }\n    };\n    Displayable.prototype.setStyle = function (keyOrObj, value) {\n        if (typeof keyOrObj === 'string') {\n            this.style[keyOrObj] = value;\n        }\n        else {\n            extend(this.style, keyOrObj);\n        }\n        this.dirtyStyle();\n        return this;\n    };\n    Displayable.prototype.dirtyStyle = function (notRedraw) {\n        if (!notRedraw) {\n            this.markRedraw();\n        }\n        this.__dirty |= STYLE_CHANGED_BIT;\n        if (this._rect) {\n            this._rect = null;\n        }\n    };\n    Displayable.prototype.dirty = function () {\n        this.dirtyStyle();\n    };\n    Displayable.prototype.styleChanged = function () {\n        return !!(this.__dirty & STYLE_CHANGED_BIT);\n    };\n    Displayable.prototype.styleUpdated = function () {\n        this.__dirty &= ~STYLE_CHANGED_BIT;\n    };\n    Displayable.prototype.createStyle = function (obj) {\n        return createObject(DEFAULT_COMMON_STYLE, obj);\n    };\n    Displayable.prototype.useStyle = function (obj) {\n        if (!obj[STYLE_MAGIC_KEY]) {\n            obj = this.createStyle(obj);\n        }\n        if (this.__inHover) {\n            this.__hoverStyle = obj;\n        }\n        else {\n            this.style = obj;\n        }\n        this.dirtyStyle();\n    };\n    Displayable.prototype.isStyleObject = function (obj) {\n        return obj[STYLE_MAGIC_KEY];\n    };\n    Displayable.prototype._innerSaveToNormal = function (toState) {\n        _super.prototype._innerSaveToNormal.call(this, toState);\n        var normalState = this._normalState;\n        if (toState.style && !normalState.style) {\n            normalState.style = this._mergeStyle(this.createStyle(), this.style);\n        }\n        this._savePrimaryToNormal(toState, normalState, PRIMARY_STATES_KEYS);\n    };\n    Displayable.prototype._applyStateObj = function (stateName, state, normalState, keepCurrentStates, transition, animationCfg) {\n        _super.prototype._applyStateObj.call(this, stateName, state, normalState, keepCurrentStates, transition, animationCfg);\n        var needsRestoreToNormal = !(state && keepCurrentStates);\n        var targetStyle;\n        if (state && state.style) {\n            if (transition) {\n                if (keepCurrentStates) {\n                    targetStyle = state.style;\n                }\n                else {\n                    targetStyle = this._mergeStyle(this.createStyle(), normalState.style);\n                    this._mergeStyle(targetStyle, state.style);\n                }\n            }\n            else {\n                targetStyle = this._mergeStyle(this.createStyle(), keepCurrentStates ? this.style : normalState.style);\n                this._mergeStyle(targetStyle, state.style);\n            }\n        }\n        else if (needsRestoreToNormal) {\n            targetStyle = normalState.style;\n        }\n        if (targetStyle) {\n            if (transition) {\n                var sourceStyle = this.style;\n                this.style = this.createStyle(needsRestoreToNormal ? {} : sourceStyle);\n                if (needsRestoreToNormal) {\n                    var changedKeys = keys(sourceStyle);\n                    for (var i = 0; i < changedKeys.length; i++) {\n                        var key = changedKeys[i];\n                        if (key in targetStyle) {\n                            targetStyle[key] = targetStyle[key];\n                            this.style[key] = sourceStyle[key];\n                        }\n                    }\n                }\n                var targetKeys = keys(targetStyle);\n                for (var i = 0; i < targetKeys.length; i++) {\n                    var key = targetKeys[i];\n                    this.style[key] = this.style[key];\n                }\n                this._transitionState(stateName, {\n                    style: targetStyle\n                }, animationCfg, this.getAnimationStyleProps());\n            }\n            else {\n                this.useStyle(targetStyle);\n            }\n        }\n        var statesKeys = this.__inHover ? PRIMARY_STATES_KEYS_IN_HOVER_LAYER : PRIMARY_STATES_KEYS;\n        for (var i = 0; i < statesKeys.length; i++) {\n            var key = statesKeys[i];\n            if (state && state[key] != null) {\n                this[key] = state[key];\n            }\n            else if (needsRestoreToNormal) {\n                if (normalState[key] != null) {\n                    this[key] = normalState[key];\n                }\n            }\n        }\n    };\n    Displayable.prototype._mergeStates = function (states) {\n        var mergedState = _super.prototype._mergeStates.call(this, states);\n        var mergedStyle;\n        for (var i = 0; i < states.length; i++) {\n            var state = states[i];\n            if (state.style) {\n                mergedStyle = mergedStyle || {};\n                this._mergeStyle(mergedStyle, state.style);\n            }\n        }\n        if (mergedStyle) {\n            mergedState.style = mergedStyle;\n        }\n        return mergedState;\n    };\n    Displayable.prototype._mergeStyle = function (targetStyle, sourceStyle) {\n        extend(targetStyle, sourceStyle);\n        return targetStyle;\n    };\n    Displayable.prototype.getAnimationStyleProps = function () {\n        return DEFAULT_COMMON_ANIMATION_PROPS;\n    };\n    Displayable.initDefaultProps = (function () {\n        var dispProto = Displayable.prototype;\n        dispProto.type = 'displayable';\n        dispProto.invisible = false;\n        dispProto.z = 0;\n        dispProto.z2 = 0;\n        dispProto.zlevel = 0;\n        dispProto.culling = false;\n        dispProto.cursor = 'pointer';\n        dispProto.rectHover = false;\n        dispProto.incremental = false;\n        dispProto._rect = null;\n        dispProto.dirtyRectTolerance = 0;\n        dispProto.__dirty = REDRAW_BIT | STYLE_CHANGED_BIT;\n    })();\n    return Displayable;\n}(Element));\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\nfunction isDisplayableCulled(el, width, height) {\n    tmpRect.copy(el.getBoundingRect());\n    if (el.transform) {\n        tmpRect.applyTransform(el.transform);\n    }\n    viewRect.width = width;\n    viewRect.height = height;\n    return !tmpRect.intersect(viewRect);\n}\nexport default Displayable;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,YAAvB,QAA2C,iBAA3C;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,gBAA9C;AACA,IAAIC,eAAe,GAAG,gBAAgBC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,EAA5B,CAAtC;AACA,OAAO,IAAIC,oBAAoB,GAAG;EAC9BC,UAAU,EAAE,CADkB;EAE9BC,aAAa,EAAE,CAFe;EAG9BC,aAAa,EAAE,CAHe;EAI9BC,WAAW,EAAE,MAJiB;EAK9BC,OAAO,EAAE,CALqB;EAM9BC,KAAK,EAAE;AANuB,CAA3B;AAQP,OAAO,IAAIC,8BAA8B,GAAG;EACxCC,KAAK,EAAE;IACHP,UAAU,EAAE,IADT;IAEHC,aAAa,EAAE,IAFZ;IAGHC,aAAa,EAAE,IAHZ;IAIHC,WAAW,EAAE,IAJV;IAKHC,OAAO,EAAE;EALN;AADiC,CAArC;AASPL,oBAAoB,CAACJ,eAAD,CAApB,GAAwC,IAAxC;AACA,IAAIa,mBAAmB,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,WAAZ,CAA1B;AACA,IAAIC,kCAAkC,GAAG,CAAC,WAAD,CAAzC;;AACA,IAAIC,WAAW,GAAI,UAAUC,MAAV,EAAkB;EACjCxB,SAAS,CAACuB,WAAD,EAAcC,MAAd,CAAT;;EACA,SAASD,WAAT,CAAqBE,KAArB,EAA4B;IACxB,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;EACH;;EACDF,WAAW,CAACI,SAAZ,CAAsBC,KAAtB,GAA8B,UAAUH,KAAV,EAAiB;IAC3C,IAAII,OAAO,GAAG1B,IAAI,CAACsB,KAAD,CAAlB;;IACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACrC,IAAIE,GAAG,GAAGH,OAAO,CAACC,CAAD,CAAjB;;MACA,IAAIE,GAAG,KAAK,OAAZ,EAAqB;QACjB,KAAKC,QAAL,CAAcR,KAAK,CAACO,GAAD,CAAnB;MACH,CAFD,MAGK;QACDR,MAAM,CAACG,SAAP,CAAiBO,MAAjB,CAAwBR,IAAxB,CAA6B,IAA7B,EAAmCM,GAAnC,EAAwCP,KAAK,CAACO,GAAD,CAA7C;MACH;IACJ;;IACD,IAAI,CAAC,KAAKZ,KAAV,EAAiB;MACb,KAAKa,QAAL,CAAc,EAAd;IACH;EACJ,CAdD;;EAeAV,WAAW,CAACI,SAAZ,CAAsBQ,WAAtB,GAAoC,YAAY,CAAG,CAAnD;;EACAZ,WAAW,CAACI,SAAZ,CAAsBS,UAAtB,GAAmC,YAAY,CAAG,CAAlD;;EACAb,WAAW,CAACI,SAAZ,CAAsBU,gBAAtB,GAAyC,YAAY,CAAG,CAAxD;;EACAd,WAAW,CAACI,SAAZ,CAAsBW,eAAtB,GAAwC,YAAY,CAAG,CAAvD;;EACAf,WAAW,CAACI,SAAZ,CAAsBY,eAAtB,GAAwC,UAAUC,SAAV,EAAqBC,UAArB,EAAiCC,gBAAjC,EAAmDC,iBAAnD,EAAsE;IAC1G,IAAIC,CAAC,GAAG,KAAKC,SAAb;;IACA,IAAI,KAAKC,MAAL,IACG,KAAKC,SADR,IAEG,KAAK3B,KAAL,CAAWH,OAAX,KAAuB,CAF1B,IAGI,KAAK+B,OAAL,IACGC,mBAAmB,CAAC,IAAD,EAAOT,SAAP,EAAkBC,UAAlB,CAJ1B,IAKIG,CAAC,IAAI,CAACA,CAAC,CAAC,CAAD,CAAP,IAAc,CAACA,CAAC,CAAC,CAAD,CALxB,EAK8B;MAC1B,OAAO,KAAP;IACH;;IACD,IAAIF,gBAAgB,IAAI,KAAKQ,WAA7B,EAA0C;MACtC,KAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKoB,WAAL,CAAiBnB,MAArC,EAA6C,EAAED,CAA/C,EAAkD;QAC9C,IAAI,KAAKoB,WAAL,CAAiBpB,CAAjB,EAAoBqB,UAApB,EAAJ,EAAsC;UAClC,OAAO,KAAP;QACH;MACJ;IACJ;;IACD,IAAIR,iBAAiB,IAAI,KAAKS,MAA9B,EAAsC;MAClC,IAAIC,QAAQ,GAAG,KAAKD,MAApB;;MACA,OAAOC,QAAP,EAAiB;QACb,IAAIA,QAAQ,CAACP,MAAb,EAAqB;UACjB,OAAO,KAAP;QACH;;QACDO,QAAQ,GAAGA,QAAQ,CAACD,MAApB;MACH;IACJ;;IACD,OAAO,IAAP;EACH,CA3BD;;EA4BA7B,WAAW,CAACI,SAAZ,CAAsB2B,OAAtB,GAAgC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAC5C,OAAO,KAAKC,WAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAP;EACH,CAFD;;EAGAjC,WAAW,CAACI,SAAZ,CAAsB+B,QAAtB,GAAiC,UAAUC,EAAV,EAAcC,OAAd,EAAuB;IACpDD,EAAE,CAACjC,IAAH,CAAQkC,OAAR,EAAiB,IAAjB;EACH,CAFD;;EAGArC,WAAW,CAACI,SAAZ,CAAsB8B,WAAtB,GAAoC,UAAUF,CAAV,EAAaC,CAAb,EAAgB;IAChD,IAAIK,KAAK,GAAG,KAAKC,qBAAL,CAA2BP,CAA3B,EAA8BC,CAA9B,CAAZ;IACA,IAAIO,IAAI,GAAG,KAAKC,eAAL,EAAX;IACA,OAAOD,IAAI,CAACT,OAAL,CAAaO,KAAK,CAAC,CAAD,CAAlB,EAAuBA,KAAK,CAAC,CAAD,CAA5B,CAAP;EACH,CAJD;;EAKAtC,WAAW,CAACI,SAAZ,CAAsBsC,YAAtB,GAAqC,YAAY;IAC7C,IAAIF,IAAI,GAAG,KAAKG,UAAhB;;IACA,IAAI,CAAC,KAAKA,UAAN,IAAoB,KAAKC,OAA7B,EAAsC;MAClC,IAAItB,SAAS,GAAG,KAAKA,SAArB;MACA,IAAIuB,MAAM,GAAG,KAAKJ,eAAL,EAAb;MACA,IAAI5C,KAAK,GAAG,KAAKA,KAAjB;MACA,IAAIiD,UAAU,GAAGjD,KAAK,CAACP,UAAN,IAAoB,CAArC;MACA,IAAIC,aAAa,GAAGM,KAAK,CAACN,aAAN,IAAuB,CAA3C;MACA,IAAIC,aAAa,GAAGK,KAAK,CAACL,aAAN,IAAuB,CAA3C;MACAgD,IAAI,GAAG,KAAKG,UAAL,KAAoB,KAAKA,UAAL,GAAkB,IAAIhE,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAtC,CAAP;;MACA,IAAI2C,SAAJ,EAAe;QACX3C,YAAY,CAACoE,cAAb,CAA4BP,IAA5B,EAAkCK,MAAlC,EAA0CvB,SAA1C;MACH,CAFD,MAGK;QACDkB,IAAI,CAACQ,IAAL,CAAUH,MAAV;MACH;;MACD,IAAIC,UAAU,IAAIvD,aAAd,IAA+BC,aAAnC,EAAkD;QAC9CgD,IAAI,CAACS,KAAL,IAAcH,UAAU,GAAG,CAAb,GAAiB5D,IAAI,CAACgE,GAAL,CAAS3D,aAAT,CAA/B;QACAiD,IAAI,CAACW,MAAL,IAAeL,UAAU,GAAG,CAAb,GAAiB5D,IAAI,CAACgE,GAAL,CAAS1D,aAAT,CAAhC;QACAgD,IAAI,CAACR,CAAL,GAAS9C,IAAI,CAACkE,GAAL,CAASZ,IAAI,CAACR,CAAd,EAAiBQ,IAAI,CAACR,CAAL,GAASzC,aAAT,GAAyBuD,UAA1C,CAAT;QACAN,IAAI,CAACP,CAAL,GAAS/C,IAAI,CAACkE,GAAL,CAASZ,IAAI,CAACP,CAAd,EAAiBO,IAAI,CAACP,CAAL,GAASzC,aAAT,GAAyBsD,UAA1C,CAAT;MACH;;MACD,IAAIO,SAAS,GAAG,KAAKC,kBAArB;;MACA,IAAI,CAACd,IAAI,CAACe,MAAL,EAAL,EAAoB;QAChBf,IAAI,CAACR,CAAL,GAAS9C,IAAI,CAACsE,KAAL,CAAWhB,IAAI,CAACR,CAAL,GAASqB,SAApB,CAAT;QACAb,IAAI,CAACP,CAAL,GAAS/C,IAAI,CAACsE,KAAL,CAAWhB,IAAI,CAACP,CAAL,GAASoB,SAApB,CAAT;QACAb,IAAI,CAACS,KAAL,GAAa/D,IAAI,CAACuE,IAAL,CAAUjB,IAAI,CAACS,KAAL,GAAa,CAAb,GAAiBI,SAAS,GAAG,CAAvC,CAAb;QACAb,IAAI,CAACW,MAAL,GAAcjE,IAAI,CAACuE,IAAL,CAAUjB,IAAI,CAACW,MAAL,GAAc,CAAd,GAAkBE,SAAS,GAAG,CAAxC,CAAd;MACH;IACJ;;IACD,OAAOb,IAAP;EACH,CA/BD;;EAgCAxC,WAAW,CAACI,SAAZ,CAAsBsD,gBAAtB,GAAyC,UAAUC,SAAV,EAAqB;IAC1D,IAAIA,SAAJ,EAAe;MACX,KAAKC,cAAL,GAAsB,KAAKA,cAAL,IAAuB,IAAIjF,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAA7C;;MACA,KAAKiF,cAAL,CAAoBZ,IAApB,CAAyBW,SAAzB;IACH,CAHD,MAIK;MACD,KAAKC,cAAL,GAAsB,IAAtB;IACH;EACJ,CARD;;EASA5D,WAAW,CAACI,SAAZ,CAAsByD,gBAAtB,GAAyC,YAAY;IACjD,OAAO,KAAKD,cAAZ;EACH,CAFD;;EAGA5D,WAAW,CAACI,SAAZ,CAAsB0D,YAAtB,GAAqC,UAAUC,IAAV,EAAgB;IACjD,OAAO,KAAKC,OAAL,CAAa,OAAb,EAAsBD,IAAtB,CAAP;EACH,CAFD;;EAGA/D,WAAW,CAACI,SAAZ,CAAsB6D,qBAAtB,GAA8C,UAAUC,SAAV,EAAqB;IAC/D,IAAIA,SAAS,KAAK,OAAlB,EAA2B;MACvB,KAAKC,UAAL;IACH,CAFD,MAGK;MACD,KAAKC,UAAL;IACH;EACJ,CAPD;;EAQApE,WAAW,CAACI,SAAZ,CAAsBO,MAAtB,GAA+B,UAAUF,GAAV,EAAe4D,KAAf,EAAsB;IACjD,IAAI5D,GAAG,KAAK,OAAZ,EAAqB;MACjBR,MAAM,CAACG,SAAP,CAAiBO,MAAjB,CAAwBR,IAAxB,CAA6B,IAA7B,EAAmCM,GAAnC,EAAwC4D,KAAxC;IACH,CAFD,MAGK;MACD,IAAI,CAAC,KAAKxE,KAAV,EAAiB;QACb,KAAKa,QAAL,CAAc2D,KAAd;MACH,CAFD,MAGK;QACD,KAAKC,QAAL,CAAcD,KAAd;MACH;IACJ;EACJ,CAZD;;EAaArE,WAAW,CAACI,SAAZ,CAAsBkE,QAAtB,GAAiC,UAAUC,QAAV,EAAoBF,KAApB,EAA2B;IACxD,IAAI,OAAOE,QAAP,KAAoB,QAAxB,EAAkC;MAC9B,KAAK1E,KAAL,CAAW0E,QAAX,IAAuBF,KAAvB;IACH,CAFD,MAGK;MACDxF,MAAM,CAAC,KAAKgB,KAAN,EAAa0E,QAAb,CAAN;IACH;;IACD,KAAKJ,UAAL;IACA,OAAO,IAAP;EACH,CATD;;EAUAnE,WAAW,CAACI,SAAZ,CAAsB+D,UAAtB,GAAmC,UAAUK,SAAV,EAAqB;IACpD,IAAI,CAACA,SAAL,EAAgB;MACZ,KAAKJ,UAAL;IACH;;IACD,KAAKxB,OAAL,IAAgB5D,iBAAhB;;IACA,IAAI,KAAKyF,KAAT,EAAgB;MACZ,KAAKA,KAAL,GAAa,IAAb;IACH;EACJ,CARD;;EASAzE,WAAW,CAACI,SAAZ,CAAsBsE,KAAtB,GAA8B,YAAY;IACtC,KAAKP,UAAL;EACH,CAFD;;EAGAnE,WAAW,CAACI,SAAZ,CAAsBuE,YAAtB,GAAqC,YAAY;IAC7C,OAAO,CAAC,EAAE,KAAK/B,OAAL,GAAe5D,iBAAjB,CAAR;EACH,CAFD;;EAGAgB,WAAW,CAACI,SAAZ,CAAsBwE,YAAtB,GAAqC,YAAY;IAC7C,KAAKhC,OAAL,IAAgB,CAAC5D,iBAAjB;EACH,CAFD;;EAGAgB,WAAW,CAACI,SAAZ,CAAsByE,WAAtB,GAAoC,UAAUC,GAAV,EAAe;IAC/C,OAAOhG,YAAY,CAACO,oBAAD,EAAuByF,GAAvB,CAAnB;EACH,CAFD;;EAGA9E,WAAW,CAACI,SAAZ,CAAsBM,QAAtB,GAAiC,UAAUoE,GAAV,EAAe;IAC5C,IAAI,CAACA,GAAG,CAAC7F,eAAD,CAAR,EAA2B;MACvB6F,GAAG,GAAG,KAAKD,WAAL,CAAiBC,GAAjB,CAAN;IACH;;IACD,IAAI,KAAKC,SAAT,EAAoB;MAChB,KAAKC,YAAL,GAAoBF,GAApB;IACH,CAFD,MAGK;MACD,KAAKjF,KAAL,GAAaiF,GAAb;IACH;;IACD,KAAKX,UAAL;EACH,CAXD;;EAYAnE,WAAW,CAACI,SAAZ,CAAsB6E,aAAtB,GAAsC,UAAUH,GAAV,EAAe;IACjD,OAAOA,GAAG,CAAC7F,eAAD,CAAV;EACH,CAFD;;EAGAe,WAAW,CAACI,SAAZ,CAAsB8E,kBAAtB,GAA2C,UAAUC,OAAV,EAAmB;IAC1DlF,MAAM,CAACG,SAAP,CAAiB8E,kBAAjB,CAAoC/E,IAApC,CAAyC,IAAzC,EAA+CgF,OAA/C;;IACA,IAAIC,WAAW,GAAG,KAAKC,YAAvB;;IACA,IAAIF,OAAO,CAACtF,KAAR,IAAiB,CAACuF,WAAW,CAACvF,KAAlC,EAAyC;MACrCuF,WAAW,CAACvF,KAAZ,GAAoB,KAAKyF,WAAL,CAAiB,KAAKT,WAAL,EAAjB,EAAqC,KAAKhF,KAA1C,CAApB;IACH;;IACD,KAAK0F,oBAAL,CAA0BJ,OAA1B,EAAmCC,WAAnC,EAAgDtF,mBAAhD;EACH,CAPD;;EAQAE,WAAW,CAACI,SAAZ,CAAsBoF,cAAtB,GAAuC,UAAUC,SAAV,EAAqBC,KAArB,EAA4BN,WAA5B,EAAyCO,iBAAzC,EAA4DC,UAA5D,EAAwEC,YAAxE,EAAsF;IACzH5F,MAAM,CAACG,SAAP,CAAiBoF,cAAjB,CAAgCrF,IAAhC,CAAqC,IAArC,EAA2CsF,SAA3C,EAAsDC,KAAtD,EAA6DN,WAA7D,EAA0EO,iBAA1E,EAA6FC,UAA7F,EAAyGC,YAAzG;;IACA,IAAIC,oBAAoB,GAAG,EAAEJ,KAAK,IAAIC,iBAAX,CAA3B;IACA,IAAII,WAAJ;;IACA,IAAIL,KAAK,IAAIA,KAAK,CAAC7F,KAAnB,EAA0B;MACtB,IAAI+F,UAAJ,EAAgB;QACZ,IAAID,iBAAJ,EAAuB;UACnBI,WAAW,GAAGL,KAAK,CAAC7F,KAApB;QACH,CAFD,MAGK;UACDkG,WAAW,GAAG,KAAKT,WAAL,CAAiB,KAAKT,WAAL,EAAjB,EAAqCO,WAAW,CAACvF,KAAjD,CAAd;;UACA,KAAKyF,WAAL,CAAiBS,WAAjB,EAA8BL,KAAK,CAAC7F,KAApC;QACH;MACJ,CARD,MASK;QACDkG,WAAW,GAAG,KAAKT,WAAL,CAAiB,KAAKT,WAAL,EAAjB,EAAqCc,iBAAiB,GAAG,KAAK9F,KAAR,GAAgBuF,WAAW,CAACvF,KAAlF,CAAd;;QACA,KAAKyF,WAAL,CAAiBS,WAAjB,EAA8BL,KAAK,CAAC7F,KAApC;MACH;IACJ,CAdD,MAeK,IAAIiG,oBAAJ,EAA0B;MAC3BC,WAAW,GAAGX,WAAW,CAACvF,KAA1B;IACH;;IACD,IAAIkG,WAAJ,EAAiB;MACb,IAAIH,UAAJ,EAAgB;QACZ,IAAII,WAAW,GAAG,KAAKnG,KAAvB;QACA,KAAKA,KAAL,GAAa,KAAKgF,WAAL,CAAiBiB,oBAAoB,GAAG,EAAH,GAAQE,WAA7C,CAAb;;QACA,IAAIF,oBAAJ,EAA0B;UACtB,IAAIG,WAAW,GAAGrH,IAAI,CAACoH,WAAD,CAAtB;;UACA,KAAK,IAAIzF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0F,WAAW,CAACzF,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;YACzC,IAAIE,GAAG,GAAGwF,WAAW,CAAC1F,CAAD,CAArB;;YACA,IAAIE,GAAG,IAAIsF,WAAX,EAAwB;cACpBA,WAAW,CAACtF,GAAD,CAAX,GAAmBsF,WAAW,CAACtF,GAAD,CAA9B;cACA,KAAKZ,KAAL,CAAWY,GAAX,IAAkBuF,WAAW,CAACvF,GAAD,CAA7B;YACH;UACJ;QACJ;;QACD,IAAIyF,UAAU,GAAGtH,IAAI,CAACmH,WAAD,CAArB;;QACA,KAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2F,UAAU,CAAC1F,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;UACxC,IAAIE,GAAG,GAAGyF,UAAU,CAAC3F,CAAD,CAApB;UACA,KAAKV,KAAL,CAAWY,GAAX,IAAkB,KAAKZ,KAAL,CAAWY,GAAX,CAAlB;QACH;;QACD,KAAK0F,gBAAL,CAAsBV,SAAtB,EAAiC;UAC7B5F,KAAK,EAAEkG;QADsB,CAAjC,EAEGF,YAFH,EAEiB,KAAKO,sBAAL,EAFjB;MAGH,CArBD,MAsBK;QACD,KAAK1F,QAAL,CAAcqF,WAAd;MACH;IACJ;;IACD,IAAIM,UAAU,GAAG,KAAKtB,SAAL,GAAiBhF,kCAAjB,GAAsDD,mBAAvE;;IACA,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8F,UAAU,CAAC7F,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;MACxC,IAAIE,GAAG,GAAG4F,UAAU,CAAC9F,CAAD,CAApB;;MACA,IAAImF,KAAK,IAAIA,KAAK,CAACjF,GAAD,CAAL,IAAc,IAA3B,EAAiC;QAC7B,KAAKA,GAAL,IAAYiF,KAAK,CAACjF,GAAD,CAAjB;MACH,CAFD,MAGK,IAAIqF,oBAAJ,EAA0B;QAC3B,IAAIV,WAAW,CAAC3E,GAAD,CAAX,IAAoB,IAAxB,EAA8B;UAC1B,KAAKA,GAAL,IAAY2E,WAAW,CAAC3E,GAAD,CAAvB;QACH;MACJ;IACJ;EACJ,CA7DD;;EA8DAT,WAAW,CAACI,SAAZ,CAAsBkG,YAAtB,GAAqC,UAAUC,MAAV,EAAkB;IACnD,IAAIC,WAAW,GAAGvG,MAAM,CAACG,SAAP,CAAiBkG,YAAjB,CAA8BnG,IAA9B,CAAmC,IAAnC,EAAyCoG,MAAzC,CAAlB;;IACA,IAAIE,WAAJ;;IACA,KAAK,IAAIlG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgG,MAAM,CAAC/F,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;MACpC,IAAImF,KAAK,GAAGa,MAAM,CAAChG,CAAD,CAAlB;;MACA,IAAImF,KAAK,CAAC7F,KAAV,EAAiB;QACb4G,WAAW,GAAGA,WAAW,IAAI,EAA7B;;QACA,KAAKnB,WAAL,CAAiBmB,WAAjB,EAA8Bf,KAAK,CAAC7F,KAApC;MACH;IACJ;;IACD,IAAI4G,WAAJ,EAAiB;MACbD,WAAW,CAAC3G,KAAZ,GAAoB4G,WAApB;IACH;;IACD,OAAOD,WAAP;EACH,CAdD;;EAeAxG,WAAW,CAACI,SAAZ,CAAsBkF,WAAtB,GAAoC,UAAUS,WAAV,EAAuBC,WAAvB,EAAoC;IACpEnH,MAAM,CAACkH,WAAD,EAAcC,WAAd,CAAN;IACA,OAAOD,WAAP;EACH,CAHD;;EAIA/F,WAAW,CAACI,SAAZ,CAAsBgG,sBAAtB,GAA+C,YAAY;IACvD,OAAOxG,8BAAP;EACH,CAFD;;EAGAI,WAAW,CAAC0G,gBAAZ,GAAgC,YAAY;IACxC,IAAIC,SAAS,GAAG3G,WAAW,CAACI,SAA5B;IACAuG,SAAS,CAACC,IAAV,GAAiB,aAAjB;IACAD,SAAS,CAACnF,SAAV,GAAsB,KAAtB;IACAmF,SAAS,CAACE,CAAV,GAAc,CAAd;IACAF,SAAS,CAACG,EAAV,GAAe,CAAf;IACAH,SAAS,CAACI,MAAV,GAAmB,CAAnB;IACAJ,SAAS,CAAClF,OAAV,GAAoB,KAApB;IACAkF,SAAS,CAACK,MAAV,GAAmB,SAAnB;IACAL,SAAS,CAACM,SAAV,GAAsB,KAAtB;IACAN,SAAS,CAACO,WAAV,GAAwB,KAAxB;IACAP,SAAS,CAAClC,KAAV,GAAkB,IAAlB;IACAkC,SAAS,CAACrD,kBAAV,GAA+B,CAA/B;IACAqD,SAAS,CAAC/D,OAAV,GAAoB7D,UAAU,GAAGC,iBAAjC;EACH,CAd8B,EAA/B;;EAeA,OAAOgB,WAAP;AACH,CA7RkB,CA6RjBtB,OA7RiB,CAAnB;;AA8RA,IAAIyI,OAAO,GAAG,IAAIxI,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAd;AACA,IAAIyI,QAAQ,GAAG,IAAIzI,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAAf;;AACA,SAAS+C,mBAAT,CAA6B2F,EAA7B,EAAiCpE,KAAjC,EAAwCE,MAAxC,EAAgD;EAC5CgE,OAAO,CAACnE,IAAR,CAAaqE,EAAE,CAAC5E,eAAH,EAAb;;EACA,IAAI4E,EAAE,CAAC/F,SAAP,EAAkB;IACd6F,OAAO,CAACpE,cAAR,CAAuBsE,EAAE,CAAC/F,SAA1B;EACH;;EACD8F,QAAQ,CAACnE,KAAT,GAAiBA,KAAjB;EACAmE,QAAQ,CAACjE,MAAT,GAAkBA,MAAlB;EACA,OAAO,CAACgE,OAAO,CAACG,SAAR,CAAkBF,QAAlB,CAAR;AACH;;AACD,eAAepH,WAAf"},"metadata":{},"sourceType":"module"}