{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport { bind, each, clone, trim, isString, isFunction, isArray, isObject, extend } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport TooltipHTMLContent from './TooltipHTMLContent.js';\nimport TooltipRichContent from './TooltipRichContent.js';\nimport { convertToColorString, formatTpl } from '../../util/format.js';\nimport { parsePercent } from '../../util/number.js';\nimport { Rect } from '../../util/graphic.js';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport Model from '../../model/Model.js';\nimport * as globalListener from '../axisPointer/globalListener.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper.js';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model.js';\nimport ComponentView from '../../view/Component.js';\nimport { format as timeFormat } from '../../util/time.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { shouldTooltipConfine } from './helper.js';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat.js';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup.js';\nimport { findEventDispatcher } from '../../util/event.js';\nimport { clear, createOrUpdate } from '../../util/throttle.js';\nvar proxyRect = new Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = getTooltipRenderMode(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow(); // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n\n\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      createOrUpdate(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      clear(this, '_updatePosition');\n    }\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn'); // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node || !api.getDom()) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? extend({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? buildTooltipMarkup(valueFormatter ? extend({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if (isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n\n        html = formatTpl(html, params, true);\n      } else if (isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (isString(positionExpr) && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    clear(this, '_updatePosition');\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;","map":{"version":3,"names":["__extends","bind","each","clone","trim","isString","isFunction","isArray","isObject","extend","env","TooltipHTMLContent","TooltipRichContent","convertToColorString","formatTpl","parsePercent","Rect","findPointFromSeries","getLayoutRect","Model","globalListener","axisHelper","axisPointerViewHelper","getTooltipRenderMode","preParseFinder","queryReferringComponents","ComponentView","format","timeFormat","getECData","shouldTooltipConfine","normalizeTooltipFormatResult","createTooltipMarkup","buildTooltipMarkup","TooltipMarkupStyleCreator","findEventDispatcher","clear","createOrUpdate","proxyRect","shape","x","y","width","height","TooltipView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","node","getDom","tooltipModel","getComponent","renderMode","_renderMode","get","_tooltipContent","appendToBody","render","group","removeAll","_tooltipModel","_ecModel","_api","_alwaysShowContent","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","cmptRef","findComponentReference","rect","el","getBoundingRect","applyTransform","transform","offsetX","offsetY","target","position","positionDefault","tooltip","tooltipConfig","name","option","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","tooltipCascadedModel","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","seriesDispatcher_1","cmptDispatcher_1","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","getAxisRawValue","marker","makeTooltipMarker","color","seriesTooltipResult","formatTooltip","frag","valueFormatter","text","reverse","positionExpr","orderMode","builtMarkupText","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","ecData","dataModel","dataType","tooltipTrigger","params","markupText","asyncTicket","getRawIndex","tooltipOpt","content","formatter","tooltipModelCascade","cmpt","componentMainType","componentIndex","subTooltipModel","defaultHtml","formatterParams","html","nearPoint","_getNearestPoint","nearPointColor","useUTC","params0","isTimeAxis","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","viewSize","slice","boxLayoutPosition","layoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","lastCbParamsList","_cbParamsList","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","seriesIdx","lastCbParams","dispose","unregister","modelCascade","defaultTooltipOption","resultModel","i","gapH","gapV","size","min","max","borderWidth","domWidth","domHeight","offset","ceil","SQRT2","rectWidth","rectHeight","queryOptionMap","keys","queryResult","useDefault","enableAll","enableNone","models","view","getViewOfComponentModel","traverse","subEl"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport { bind, each, clone, trim, isString, isFunction, isArray, isObject, extend } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport TooltipHTMLContent from './TooltipHTMLContent.js';\nimport TooltipRichContent from './TooltipRichContent.js';\nimport { convertToColorString, formatTpl } from '../../util/format.js';\nimport { parsePercent } from '../../util/number.js';\nimport { Rect } from '../../util/graphic.js';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport Model from '../../model/Model.js';\nimport * as globalListener from '../axisPointer/globalListener.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper.js';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model.js';\nimport ComponentView from '../../view/Component.js';\nimport { format as timeFormat } from '../../util/time.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { shouldTooltipConfine } from './helper.js';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat.js';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup.js';\nimport { findEventDispatcher } from '../../util/event.js';\nimport { clear, createOrUpdate } from '../../util/throttle.js';\nvar proxyRect = new Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = getTooltipRenderMode(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow(); // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n\n\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      createOrUpdate(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      clear(this, '_updatePosition');\n    }\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn'); // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node || !api.getDom()) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      }; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        } // Tooltip provided directly. Like legend.\n\n\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n\n      this._hide(dispatchAction);\n    }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\n\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? extend({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? buildTooltipMarkup(valueFormatter ? extend({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n\n    if (isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var tooltipModelCascade = [tooltipOpt];\n\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\n    // by convension, we do not use it as the default formatter for component.\n\n\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = clone(subTooltipModel.get('formatterParams') || {});\n\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    var nearPointColor = nearPoint.color;\n\n    if (formatter) {\n      if (isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n\n        html = formatTpl(html, params, true);\n      } else if (isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        }); // check is cbParams data value changed\n\n        lastCbParamsList && each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n\n    clear(this, '_updatePosition');\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\n\n\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n\n  if (!model) {\n    return;\n  }\n\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\n\nexport default TooltipView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}