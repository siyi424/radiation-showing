{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { ECPolygon } from '../line/poly.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { bind } from 'zrender/lib/core/util.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport ChartView from '../../view/Chart.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\n\nvar ThemeRiverView =\n/** @class */\nfunction (_super) {\n  __extends(ThemeRiverView, _super);\n\n  function ThemeRiverView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ThemeRiverView.type;\n    _this._layers = [];\n    return _this;\n  }\n\n  ThemeRiverView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var self = this;\n    var group = this.group;\n    var layersSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.x = 0;\n    group.y = rect.y + boundaryGap[0];\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layersSeries, keyGetter, keyGetter);\n    var newLayersGroups = [];\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = self._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var style;\n      var indices = layersSeries[idx].indices;\n      var j = 0;\n\n      for (; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push(x, y0);\n        points1.push(x, y0 + y);\n        style = data.getItemVisual(indices[j], 'style');\n      }\n\n      var polygon;\n      var textLayout = data.getItemLayout(indices[0]);\n      var labelModel = seriesModel.getModel('label');\n      var margin = labelModel.get('margin');\n      var emphasisModel = seriesModel.getModel('emphasis');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new ECPolygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        layerGroup.add(polygon);\n        group.add(layerGroup);\n\n        if (seriesModel.isAnimationEnabled()) {\n          polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n            polygon.removeClipPath();\n          }));\n        }\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        saveOldStyle(polygon);\n      }\n\n      setLabelStyle(polygon, getLabelStatesModels(seriesModel), {\n        labelDataIndex: indices[j - 1],\n        defaultText: data.getName(indices[j - 1]),\n        inheritColor: style.fill\n      }, {\n        normal: {\n          verticalAlign: 'middle' // align: 'right'\n\n        }\n      });\n      polygon.setTextConfig({\n        position: null,\n        local: true\n      });\n      var labelEl = polygon.getTextContent(); // TODO More label position options.\n\n      if (labelEl) {\n        labelEl.x = textLayout.x - margin;\n        labelEl.y = textLayout.y0 + textLayout.y / 2;\n      }\n\n      polygon.useStyle(style);\n      data.setItemGraphicEl(idx, polygon);\n      setStatesStylesFromModel(polygon, seriesModel);\n      toggleHoverEmphasis(polygon, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    }\n\n    this._layersSeries = layersSeries;\n    this._layers = newLayersGroups;\n  };\n\n  ThemeRiverView.type = 'themeRiver';\n  return ThemeRiverView;\n}(ChartView);\n\n; // add animation to the view\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      x: rect.x - 50,\n      width: rect.width + 100,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nexport default ThemeRiverView;","map":{"version":3,"names":["__extends","ECPolygon","graphic","setStatesStylesFromModel","toggleHoverEmphasis","setLabelStyle","getLabelStatesModels","bind","DataDiffer","ChartView","saveOldStyle","ThemeRiverView","_super","_this","apply","arguments","type","_layers","prototype","render","seriesModel","ecModel","api","data","getData","self","group","layersSeries","getLayerSeries","layoutInfo","getLayout","rect","boundaryGap","x","y","keyGetter","item","name","dataDiffer","_layersSeries","newLayersGroups","add","process","update","remove","execute","status","idx","oldIdx","oldLayersGroups","points0","points1","style","indices","j","length","layout","getItemLayout","y0","push","getItemVisual","polygon","textLayout","labelModel","getModel","margin","get","emphasisModel","layerGroup","Group","shape","points","stackedOnPoints","smooth","stackedOnSmooth","smoothConstraint","z2","isAnimationEnabled","setClipPath","createGridClipShape","getBoundingRect","removeClipPath","childAt","updateProps","labelDataIndex","defaultText","getName","inheritColor","fill","normal","verticalAlign","setTextConfig","position","local","labelEl","getTextContent","useStyle","setItemGraphicEl","cb","rectEl","Rect","width","height","initProps"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { ECPolygon } from '../line/poly.js';\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { bind } from 'zrender/lib/core/util.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport ChartView from '../../view/Chart.js';\nimport { saveOldStyle } from '../../animation/basicTrasition.js';\n\nvar ThemeRiverView =\n/** @class */\nfunction (_super) {\n  __extends(ThemeRiverView, _super);\n\n  function ThemeRiverView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ThemeRiverView.type;\n    _this._layers = [];\n    return _this;\n  }\n\n  ThemeRiverView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var self = this;\n    var group = this.group;\n    var layersSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.x = 0;\n    group.y = rect.y + boundaryGap[0];\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layersSeries, keyGetter, keyGetter);\n    var newLayersGroups = [];\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = self._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var style;\n      var indices = layersSeries[idx].indices;\n      var j = 0;\n\n      for (; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push(x, y0);\n        points1.push(x, y0 + y);\n        style = data.getItemVisual(indices[j], 'style');\n      }\n\n      var polygon;\n      var textLayout = data.getItemLayout(indices[0]);\n      var labelModel = seriesModel.getModel('label');\n      var margin = labelModel.get('margin');\n      var emphasisModel = seriesModel.getModel('emphasis');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new ECPolygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        layerGroup.add(polygon);\n        group.add(layerGroup);\n\n        if (seriesModel.isAnimationEnabled()) {\n          polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n            polygon.removeClipPath();\n          }));\n        }\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        saveOldStyle(polygon);\n      }\n\n      setLabelStyle(polygon, getLabelStatesModels(seriesModel), {\n        labelDataIndex: indices[j - 1],\n        defaultText: data.getName(indices[j - 1]),\n        inheritColor: style.fill\n      }, {\n        normal: {\n          verticalAlign: 'middle' // align: 'right'\n\n        }\n      });\n      polygon.setTextConfig({\n        position: null,\n        local: true\n      });\n      var labelEl = polygon.getTextContent(); // TODO More label position options.\n\n      if (labelEl) {\n        labelEl.x = textLayout.x - margin;\n        labelEl.y = textLayout.y0 + textLayout.y / 2;\n      }\n\n      polygon.useStyle(style);\n      data.setItemGraphicEl(idx, polygon);\n      setStatesStylesFromModel(polygon, seriesModel);\n      toggleHoverEmphasis(polygon, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    }\n\n    this._layersSeries = layersSeries;\n    this._layers = newLayersGroups;\n  };\n\n  ThemeRiverView.type = 'themeRiver';\n  return ThemeRiverView;\n}(ChartView);\n\n; // add animation to the view\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      x: rect.x - 50,\n      width: rect.width + 100,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nexport default ThemeRiverView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}