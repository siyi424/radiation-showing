{"ast":null,"code":"import { __extends } from \"tslib\";\nimport Path from '../Path.js';\nimport { subPixelOptimizeLine } from '../helper/subPixelOptimize.js';\nvar subPixelOptimizeOutputShape = {};\n\nvar LineShape = function () {\n  function LineShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.percent = 1;\n  }\n\n  return LineShape;\n}();\n\nexport { LineShape };\n\nvar Line = function (_super) {\n  __extends(Line, _super);\n\n  function Line(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  Line.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  Line.prototype.getDefaultShape = function () {\n    return new LineShape();\n  };\n\n  Line.prototype.buildPath = function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n\n    if (this.subPixelOptimize) {\n      var optimizedShape = subPixelOptimizeLine(subPixelOptimizeOutputShape, shape, this.style);\n      x1 = optimizedShape.x1;\n      y1 = optimizedShape.y1;\n      x2 = optimizedShape.x2;\n      y2 = optimizedShape.y2;\n    } else {\n      x1 = shape.x1;\n      y1 = shape.y1;\n      x2 = shape.x2;\n      y2 = shape.y2;\n    }\n\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  };\n\n  Line.prototype.pointAt = function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  };\n\n  return Line;\n}(Path);\n\nLine.prototype.type = 'line';\nexport default Line;","map":{"version":3,"names":["__extends","Path","subPixelOptimizeLine","subPixelOptimizeOutputShape","LineShape","x1","y1","x2","y2","percent","Line","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","subPixelOptimize","optimizedShape","style","moveTo","lineTo","pointAt","p","type"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/zrender/lib/graphic/shape/Line.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport Path from '../Path.js';\nimport { subPixelOptimizeLine } from '../helper/subPixelOptimize.js';\nvar subPixelOptimizeOutputShape = {};\nvar LineShape = (function () {\n    function LineShape() {\n        this.x1 = 0;\n        this.y1 = 0;\n        this.x2 = 0;\n        this.y2 = 0;\n        this.percent = 1;\n    }\n    return LineShape;\n}());\nexport { LineShape };\nvar Line = (function (_super) {\n    __extends(Line, _super);\n    function Line(opts) {\n        return _super.call(this, opts) || this;\n    }\n    Line.prototype.getDefaultStyle = function () {\n        return {\n            stroke: '#000',\n            fill: null\n        };\n    };\n    Line.prototype.getDefaultShape = function () {\n        return new LineShape();\n    };\n    Line.prototype.buildPath = function (ctx, shape) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        if (this.subPixelOptimize) {\n            var optimizedShape = subPixelOptimizeLine(subPixelOptimizeOutputShape, shape, this.style);\n            x1 = optimizedShape.x1;\n            y1 = optimizedShape.y1;\n            x2 = optimizedShape.x2;\n            y2 = optimizedShape.y2;\n        }\n        else {\n            x1 = shape.x1;\n            y1 = shape.y1;\n            x2 = shape.x2;\n            y2 = shape.y2;\n        }\n        var percent = shape.percent;\n        if (percent === 0) {\n            return;\n        }\n        ctx.moveTo(x1, y1);\n        if (percent < 1) {\n            x2 = x1 * (1 - percent) + x2 * percent;\n            y2 = y1 * (1 - percent) + y2 * percent;\n        }\n        ctx.lineTo(x2, y2);\n    };\n    Line.prototype.pointAt = function (p) {\n        var shape = this.shape;\n        return [\n            shape.x1 * (1 - p) + shape.x2 * p,\n            shape.y1 * (1 - p) + shape.y2 * p\n        ];\n    };\n    return Line;\n}(Path));\nLine.prototype.type = 'line';\nexport default Line;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,IAAIC,2BAA2B,GAAG,EAAlC;;AACA,IAAIC,SAAS,GAAI,YAAY;EACzB,SAASA,SAAT,GAAqB;IACjB,KAAKC,EAAL,GAAU,CAAV;IACA,KAAKC,EAAL,GAAU,CAAV;IACA,KAAKC,EAAL,GAAU,CAAV;IACA,KAAKC,EAAL,GAAU,CAAV;IACA,KAAKC,OAAL,GAAe,CAAf;EACH;;EACD,OAAOL,SAAP;AACH,CATgB,EAAjB;;AAUA,SAASA,SAAT;;AACA,IAAIM,IAAI,GAAI,UAAUC,MAAV,EAAkB;EAC1BX,SAAS,CAACU,IAAD,EAAOC,MAAP,CAAT;;EACA,SAASD,IAAT,CAAcE,IAAd,EAAoB;IAChB,OAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,KAA2B,IAAlC;EACH;;EACDF,IAAI,CAACI,SAAL,CAAeC,eAAf,GAAiC,YAAY;IACzC,OAAO;MACHC,MAAM,EAAE,MADL;MAEHC,IAAI,EAAE;IAFH,CAAP;EAIH,CALD;;EAMAP,IAAI,CAACI,SAAL,CAAeI,eAAf,GAAiC,YAAY;IACzC,OAAO,IAAId,SAAJ,EAAP;EACH,CAFD;;EAGAM,IAAI,CAACI,SAAL,CAAeK,SAAf,GAA2B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;IAC7C,IAAIhB,EAAJ;IACA,IAAIC,EAAJ;IACA,IAAIC,EAAJ;IACA,IAAIC,EAAJ;;IACA,IAAI,KAAKc,gBAAT,EAA2B;MACvB,IAAIC,cAAc,GAAGrB,oBAAoB,CAACC,2BAAD,EAA8BkB,KAA9B,EAAqC,KAAKG,KAA1C,CAAzC;MACAnB,EAAE,GAAGkB,cAAc,CAAClB,EAApB;MACAC,EAAE,GAAGiB,cAAc,CAACjB,EAApB;MACAC,EAAE,GAAGgB,cAAc,CAAChB,EAApB;MACAC,EAAE,GAAGe,cAAc,CAACf,EAApB;IACH,CAND,MAOK;MACDH,EAAE,GAAGgB,KAAK,CAAChB,EAAX;MACAC,EAAE,GAAGe,KAAK,CAACf,EAAX;MACAC,EAAE,GAAGc,KAAK,CAACd,EAAX;MACAC,EAAE,GAAGa,KAAK,CAACb,EAAX;IACH;;IACD,IAAIC,OAAO,GAAGY,KAAK,CAACZ,OAApB;;IACA,IAAIA,OAAO,KAAK,CAAhB,EAAmB;MACf;IACH;;IACDW,GAAG,CAACK,MAAJ,CAAWpB,EAAX,EAAeC,EAAf;;IACA,IAAIG,OAAO,GAAG,CAAd,EAAiB;MACbF,EAAE,GAAGF,EAAE,IAAI,IAAII,OAAR,CAAF,GAAqBF,EAAE,GAAGE,OAA/B;MACAD,EAAE,GAAGF,EAAE,IAAI,IAAIG,OAAR,CAAF,GAAqBD,EAAE,GAAGC,OAA/B;IACH;;IACDW,GAAG,CAACM,MAAJ,CAAWnB,EAAX,EAAeC,EAAf;EACH,CA5BD;;EA6BAE,IAAI,CAACI,SAAL,CAAea,OAAf,GAAyB,UAAUC,CAAV,EAAa;IAClC,IAAIP,KAAK,GAAG,KAAKA,KAAjB;IACA,OAAO,CACHA,KAAK,CAAChB,EAAN,IAAY,IAAIuB,CAAhB,IAAqBP,KAAK,CAACd,EAAN,GAAWqB,CAD7B,EAEHP,KAAK,CAACf,EAAN,IAAY,IAAIsB,CAAhB,IAAqBP,KAAK,CAACb,EAAN,GAAWoB,CAF7B,CAAP;EAIH,CAND;;EAOA,OAAOlB,IAAP;AACH,CAnDW,CAmDVT,IAnDU,CAAZ;;AAoDAS,IAAI,CAACI,SAAL,CAAee,IAAf,GAAsB,MAAtB;AACA,eAAenB,IAAf"},"metadata":{},"sourceType":"module"}