{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieve, defaults, extend, each, isObject, map, isString, isNumber, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport { isRadianAroundZero, remRadian } from '../../util/number.js';\nimport { createSymbol, normalizeSymbolOffset } from '../../util/symbol.js';\nimport * as matrixUtil from 'zrender/lib/core/matrix.js';\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector.js';\nimport { shouldShowAllLabels } from '../../coord/axisHelper.js';\nimport { prepareLayoutList, hideOverlap } from '../../label/labelLayoutHelper.js';\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n */\n\nvar AxisBuilder =\n/** @class */\nfunction () {\n  function AxisBuilder(axisModel, opt) {\n    this.group = new graphic.Group();\n    this.opt = opt;\n    this.axisModel = axisModel; // Default value\n\n    defaults(opt, {\n      labelOffset: 0,\n      nameDirection: 1,\n      tickDirection: 1,\n      labelDirection: 1,\n      silent: true,\n      handleAutoShown: function () {\n        return true;\n      }\n    }); // FIXME Not use a seperate text group?\n\n    var transformGroup = new graphic.Group({\n      x: opt.position[0],\n      y: opt.position[1],\n      rotation: opt.rotation\n    }); // this.group.add(transformGroup);\n    // this._transformGroup = transformGroup;\n\n    transformGroup.updateTransform();\n    this._transformGroup = transformGroup;\n  }\n\n  AxisBuilder.prototype.hasBuilder = function (name) {\n    return !!builders[name];\n  };\n\n  AxisBuilder.prototype.add = function (name) {\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\n  };\n\n  AxisBuilder.prototype.getGroup = function () {\n    return this.group;\n  };\n\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n    var rotationDiff = remRadian(textRotation - axisRotation);\n    var textAlign;\n    var textVerticalAlign;\n\n    if (isRadianAroundZero(rotationDiff)) {\n      // Label is parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n      textAlign = 'center';\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\n      // Label is inverse parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n      textAlign = 'center';\n    } else {\n      textVerticalAlign = 'middle';\n\n      if (rotationDiff > 0 && rotationDiff < PI) {\n        textAlign = direction > 0 ? 'right' : 'left';\n      } else {\n        textAlign = direction > 0 ? 'left' : 'right';\n      }\n    }\n\n    return {\n      rotation: rotationDiff,\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n  };\n\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n    var eventData = {\n      componentType: axisModel.mainType,\n      componentIndex: axisModel.componentIndex\n    };\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n    return eventData;\n  };\n\n  AxisBuilder.isLabelSilent = function (axisModel) {\n    var tooltipOpt = axisModel.get('tooltip');\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n  };\n\n  return AxisBuilder;\n}();\n\n;\nvar builders = {\n  axisLine: function (opt, axisModel, group, transformGroup) {\n    var shown = axisModel.get(['axisLine', 'show']);\n\n    if (shown === 'auto' && opt.handleAutoShown) {\n      shown = opt.handleAutoShown('axisLine');\n    }\n\n    if (!shown) {\n      return;\n    }\n\n    var extent = axisModel.axis.getExtent();\n    var matrix = transformGroup.transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\n    var line = new graphic.Line({\n      // Id for animation\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    });\n    line.anid = 'line';\n    group.add(line);\n    var arrows = axisModel.get(['axisLine', 'symbol']);\n\n    if (arrows != null) {\n      var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\n\n      if (isString(arrows)) {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (isString(arrowSize) || isNumber(arrowSize)) {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var arrowOffset = normalizeSymbolOffset(axisModel.get(['axisLine', 'symbolOffset']) || 0, arrowSize);\n      var symbolWidth_1 = arrowSize[0];\n      var symbolHeight_1 = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          symbol.attr({\n            rotation: point.rotate,\n            x: pt1[0] + r * Math.cos(opt.rotation),\n            y: pt1[1] - r * Math.sin(opt.rotation),\n            silent: true,\n            z2: 11\n          });\n          group.add(symbol);\n        }\n      });\n    }\n  },\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection); // This bit fixes the label overlap issue for the time chart.\n    // See https://github.com/apache/echarts/issues/14266 for more.\n\n    if (axisModel.get(['axisLabel', 'hideOverlap'])) {\n      var labelList = prepareLayoutList(map(labelEls, function (label) {\n        return {\n          label: label,\n          priority: label.z2,\n          defaultAttr: {\n            ignore: label.ignore\n          }\n        };\n      }));\n      hideOverlap(labelList);\n    }\n  },\n  axisName: function (opt, axisModel, group, transformGroup) {\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\n    var textEl = new graphic.Text({\n      x: pos[0],\n      y: pos[1],\n      rotation: labelLayout.rotation,\n      silent: AxisBuilder.isLabelSilent(axisModel),\n      style: createTextStyle(textStyleModel, {\n        text: name,\n        font: textFont,\n        overflow: 'truncate',\n        width: maxWidth,\n        ellipsis: ellipsis,\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\n        align: textStyleModel.get('align') || labelLayout.textAlign,\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n      }),\n      z2: 1\n    });\n    graphic.setTooltipConfig({\n      el: textEl,\n      componentModel: axisModel,\n      itemName: name\n    });\n    textEl.__fullText = name; // Id for animation\n\n    textEl.anid = 'name';\n\n    if (axisModel.get('triggerEvent')) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisName';\n      eventData.name = name;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      autoBatch: true,\n      silent: true\n    });\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  var shown = tickModel.get('show');\n\n  if (shown === 'auto' && opt.handleAutoShown) {\n    shown = opt.handleAutoShown('axisTick');\n  }\n\n  if (!shown || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = AxisBuilder.isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue]) {\n      var rawCategoryItem = rawCategoryData[tickValue];\n\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\n      }\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\n    var tickCoord = axis.dataToCoord(tickValue);\n    var textEl = new graphic.Text({\n      x: tickCoord,\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10 + (labelItem.level || 0),\n      style: createTextStyle(itemLabelModel, {\n        text: formattedLabel,\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n        fill: isFunction(textColor) ? textColor( // (1) In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        // (2) Compatible with previous version, which always use formatted label as\n        // input. But in interval scale the formatted label is like '223,445', which\n        // maked user repalce ','. So we modify it to return original val but remain\n        // it as 'string' to avoid error in replacing.\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n      })\n    });\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\n\n    if (triggerEvent) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisLabel';\n      eventData.value = rawLabel;\n      eventData.tickIndex = index;\n\n      if (axis.type === 'category') {\n        eventData.dataIndex = tickValue;\n      }\n\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nexport default AxisBuilder;","map":{"version":3,"names":["retrieve","defaults","extend","each","isObject","map","isString","isNumber","isFunction","graphic","getECData","createTextStyle","Model","isRadianAroundZero","remRadian","createSymbol","normalizeSymbolOffset","matrixUtil","applyTransform","v2ApplyTransform","shouldShowAllLabels","prepareLayoutList","hideOverlap","PI","Math","AxisBuilder","axisModel","opt","group","Group","labelOffset","nameDirection","tickDirection","labelDirection","silent","handleAutoShown","transformGroup","x","position","y","rotation","updateTransform","_transformGroup","prototype","hasBuilder","name","builders","add","getGroup","innerTextLayout","axisRotation","textRotation","direction","rotationDiff","textAlign","textVerticalAlign","makeAxisEventDataBase","eventData","componentType","mainType","componentIndex","isLabelSilent","tooltipOpt","get","show","axisLine","shown","extent","axis","getExtent","matrix","transform","pt1","pt2","lineStyle","lineCap","getModel","getLineStyle","line","Line","subPixelOptimize","shape","x1","y1","x2","y2","style","strokeContainThreshold","z2","anid","arrows","arrowSize","arrowOffset","symbolWidth_1","symbolHeight_1","rotate","offset","r","sqrt","point","index","symbol","stroke","attr","cos","sin","axisTickLabel","ticksEls","buildAxisMajorTicks","labelEls","buildAxisLabel","fixMinMaxLabelShow","buildAxisMinorTicks","labelList","label","priority","defaultAttr","ignore","axisName","nameLocation","textStyleModel","gap","gapSignal","pos","isNameLocationCenter","labelLayout","nameRotation","axisNameAvailableWidth","endTextLayout","abs","isFinite","textFont","getFont","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","textEl","Text","text","font","overflow","width","fill","getTextColor","align","verticalAlign","setTooltipConfig","el","componentModel","itemName","__fullText","targetType","decomposeTransform","textPosition","textRotate","inverse","onLeft","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","length","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","current","next","firstRect","getBoundingRect","clone","nextRect","mRotationBack","identity","mul","getLocalTransform","intersect","createTicks","ticksCoords","tickTransform","tickEndCoord","tickLineStyle","anidPrefix","i","tickCoord","coord","tickEl","autoBatch","tickValue","push","tickModel","scale","isBlank","lineStyleModel","getTicksCoords","minorTickModel","minorTicksCoords","getMinorTicksCoords","minorTickLineStyle","minorTicksEls","k","axisLabelShow","labelModel","labelMargin","labels","getViewLabels","labelRotation","labelRotate","rawCategoryData","getCategories","triggerEvent","labelItem","type","getRawOrdinalNumber","formattedLabel","rawLabel","itemLabelModel","rawCategoryItem","textStyle","ecModel","textColor","dataToCoord","level","getShallow","value","tickIndex","dataIndex"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/component/axis/AxisBuilder.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieve, defaults, extend, each, isObject, map, isString, isNumber, isFunction } from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createTextStyle } from '../../label/labelStyle.js';\nimport Model from '../../model/Model.js';\nimport { isRadianAroundZero, remRadian } from '../../util/number.js';\nimport { createSymbol, normalizeSymbolOffset } from '../../util/symbol.js';\nimport * as matrixUtil from 'zrender/lib/core/matrix.js';\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector.js';\nimport { shouldShowAllLabels } from '../../coord/axisHelper.js';\nimport { prepareLayoutList, hideOverlap } from '../../label/labelLayoutHelper.js';\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n */\n\nvar AxisBuilder =\n/** @class */\nfunction () {\n  function AxisBuilder(axisModel, opt) {\n    this.group = new graphic.Group();\n    this.opt = opt;\n    this.axisModel = axisModel; // Default value\n\n    defaults(opt, {\n      labelOffset: 0,\n      nameDirection: 1,\n      tickDirection: 1,\n      labelDirection: 1,\n      silent: true,\n      handleAutoShown: function () {\n        return true;\n      }\n    }); // FIXME Not use a seperate text group?\n\n    var transformGroup = new graphic.Group({\n      x: opt.position[0],\n      y: opt.position[1],\n      rotation: opt.rotation\n    }); // this.group.add(transformGroup);\n    // this._transformGroup = transformGroup;\n\n    transformGroup.updateTransform();\n    this._transformGroup = transformGroup;\n  }\n\n  AxisBuilder.prototype.hasBuilder = function (name) {\n    return !!builders[name];\n  };\n\n  AxisBuilder.prototype.add = function (name) {\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\n  };\n\n  AxisBuilder.prototype.getGroup = function () {\n    return this.group;\n  };\n\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n    var rotationDiff = remRadian(textRotation - axisRotation);\n    var textAlign;\n    var textVerticalAlign;\n\n    if (isRadianAroundZero(rotationDiff)) {\n      // Label is parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n      textAlign = 'center';\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\n      // Label is inverse parallel with axis line.\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n      textAlign = 'center';\n    } else {\n      textVerticalAlign = 'middle';\n\n      if (rotationDiff > 0 && rotationDiff < PI) {\n        textAlign = direction > 0 ? 'right' : 'left';\n      } else {\n        textAlign = direction > 0 ? 'left' : 'right';\n      }\n    }\n\n    return {\n      rotation: rotationDiff,\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n  };\n\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n    var eventData = {\n      componentType: axisModel.mainType,\n      componentIndex: axisModel.componentIndex\n    };\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n    return eventData;\n  };\n\n  AxisBuilder.isLabelSilent = function (axisModel) {\n    var tooltipOpt = axisModel.get('tooltip');\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n  };\n\n  return AxisBuilder;\n}();\n\n;\nvar builders = {\n  axisLine: function (opt, axisModel, group, transformGroup) {\n    var shown = axisModel.get(['axisLine', 'show']);\n\n    if (shown === 'auto' && opt.handleAutoShown) {\n      shown = opt.handleAutoShown('axisLine');\n    }\n\n    if (!shown) {\n      return;\n    }\n\n    var extent = axisModel.axis.getExtent();\n    var matrix = transformGroup.transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\n    var line = new graphic.Line({\n      // Id for animation\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    });\n    line.anid = 'line';\n    group.add(line);\n    var arrows = axisModel.get(['axisLine', 'symbol']);\n\n    if (arrows != null) {\n      var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\n\n      if (isString(arrows)) {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (isString(arrowSize) || isNumber(arrowSize)) {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var arrowOffset = normalizeSymbolOffset(axisModel.get(['axisLine', 'symbolOffset']) || 0, arrowSize);\n      var symbolWidth_1 = arrowSize[0];\n      var symbolHeight_1 = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          symbol.attr({\n            rotation: point.rotate,\n            x: pt1[0] + r * Math.cos(opt.rotation),\n            y: pt1[1] - r * Math.sin(opt.rotation),\n            silent: true,\n            z2: 11\n          });\n          group.add(symbol);\n        }\n      });\n    }\n  },\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection); // This bit fixes the label overlap issue for the time chart.\n    // See https://github.com/apache/echarts/issues/14266 for more.\n\n    if (axisModel.get(['axisLabel', 'hideOverlap'])) {\n      var labelList = prepareLayoutList(map(labelEls, function (label) {\n        return {\n          label: label,\n          priority: label.z2,\n          defaultAttr: {\n            ignore: label.ignore\n          }\n        };\n      }));\n      hideOverlap(labelList);\n    }\n  },\n  axisName: function (opt, axisModel, group, transformGroup) {\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\n    var textEl = new graphic.Text({\n      x: pos[0],\n      y: pos[1],\n      rotation: labelLayout.rotation,\n      silent: AxisBuilder.isLabelSilent(axisModel),\n      style: createTextStyle(textStyleModel, {\n        text: name,\n        font: textFont,\n        overflow: 'truncate',\n        width: maxWidth,\n        ellipsis: ellipsis,\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\n        align: textStyleModel.get('align') || labelLayout.textAlign,\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n      }),\n      z2: 1\n    });\n    graphic.setTooltipConfig({\n      el: textEl,\n      componentModel: axisModel,\n      itemName: name\n    });\n    textEl.__fullText = name; // Id for animation\n\n    textEl.anid = 'name';\n\n    if (axisModel.get('triggerEvent')) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisName';\n      eventData.name = name;\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      autoBatch: true,\n      silent: true\n    });\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n  var shown = tickModel.get('show');\n\n  if (shown === 'auto' && opt.handleAutoShown) {\n    shown = opt.handleAutoShown('axisTick');\n  }\n\n  if (!shown || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = AxisBuilder.isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue]) {\n      var rawCategoryItem = rawCategoryData[tickValue];\n\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\n      }\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\n    var tickCoord = axis.dataToCoord(tickValue);\n    var textEl = new graphic.Text({\n      x: tickCoord,\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10 + (labelItem.level || 0),\n      style: createTextStyle(itemLabelModel, {\n        text: formattedLabel,\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n        fill: isFunction(textColor) ? textColor( // (1) In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        // (2) Compatible with previous version, which always use formatted label as\n        // input. But in interval scale the formatted label is like '223,445', which\n        // maked user repalce ','. So we modify it to return original val but remain\n        // it as 'string' to avoid error in replacing.\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n      })\n    });\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\n\n    if (triggerEvent) {\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\n      eventData.targetType = 'axisLabel';\n      eventData.value = rawLabel;\n      eventData.tickIndex = index;\n\n      if (axis.type === 'category') {\n        eventData.dataIndex = tickValue;\n      }\n\n      getECData(textEl).eventData = eventData;\n    } // FIXME\n\n\n    transformGroup.add(textEl);\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nexport default AxisBuilder;"],"mappings":"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"},"metadata":{},"sourceType":"module"}