{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions.js';\nimport { getDimensionTypeByAxis } from '../../data/helper/dimensionHelper.js';\nimport { getDataItemValue } from '../../util/model.js';\nimport CoordinateSystem from '../../core/CoordinateSystem.js';\nimport { getCoordSysInfoBySeries } from '../../model/referHelper.js';\nimport { createSourceFromSeriesDataOption } from '../../data/Source.js';\nimport { enableDataStack } from '../../data/helper/dataStackHelper.js';\nimport { makeSeriesEncodeForAxisCoordSys } from '../../data/helper/sourceHelper.js';\nimport { SOURCE_FORMAT_ORIGINAL } from '../../util/types.js';\n\nfunction getCoordSysDimDefs(seriesModel, coordSysInfo) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDimDefs;\n\n  if (coordSysInfo && coordSysInfo.coordSysDims) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  return coordSysDimDefs;\n}\n\nfunction injectOrdinalMeta(dimInfoList, createInvertedIndices, coordSysInfo) {\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n\n      if (createInvertedIndices) {\n        dimInfo.createInvertedIndices = true;\n      }\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  return firstCategoryDimIndex;\n}\n/**\n * Caution: there are side effects to `sourceManager` in this method.\n * Should better only be called in `Series['getInitialData']`.\n */\n\n\nfunction createSeriesData(sourceRaw, seriesModel, opt) {\n  opt = opt || {};\n  var sourceManager = seriesModel.getSourceManager();\n  var source;\n  var isOriginalSource = false;\n\n  if (sourceRaw) {\n    isOriginalSource = true;\n    source = createSourceFromSeriesDataOption(sourceRaw);\n  } else {\n    source = sourceManager.getSource(); // Is series.data. not dataset.\n\n    isOriginalSource = source.sourceFormat === SOURCE_FORMAT_ORIGINAL;\n  }\n\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs = getCoordSysDimDefs(seriesModel, coordSysInfo);\n  var useEncodeDefaulter = opt.useEncodeDefaulter;\n  var encodeDefaulter = zrUtil.isFunction(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null;\n  var createDimensionOptions = {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefine: seriesModel.getEncode(),\n    encodeDefaulter: encodeDefaulter,\n    canOmitUnusedDimensions: !isOriginalSource\n  };\n  var schema = prepareSeriesDataSchema(source, createDimensionOptions);\n  var firstCategoryDimIndex = injectOrdinalMeta(schema.dimensions, opt.createInvertedIndices, coordSysInfo);\n  var store = !isOriginalSource ? sourceManager.getSharedDataStore(schema) : null;\n  var stackCalculationInfo = enableDataStack(seriesModel, {\n    schema: schema,\n    store: store\n  });\n  var data = new SeriesData(schema, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  data.hasItemOption = false;\n  data.initData( // Try to reuse the data store in sourceManager if using dataset.\n  isOriginalSource ? source : store, null, dimValueGetter);\n  return data;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(arr) {\n  var i = 0;\n\n  while (i < arr.length && arr[i] == null) {\n    i++;\n  }\n\n  return arr[i];\n}\n\nexport default createSeriesData;","map":{"version":3,"names":["zrUtil","SeriesData","prepareSeriesDataSchema","getDimensionTypeByAxis","getDataItemValue","CoordinateSystem","getCoordSysInfoBySeries","createSourceFromSeriesDataOption","enableDataStack","makeSeriesEncodeForAxisCoordSys","SOURCE_FORMAT_ORIGINAL","getCoordSysDimDefs","seriesModel","coordSysInfo","coordSysName","get","registeredCoordSys","coordSysDimDefs","coordSysDims","map","dim","dimInfo","name","axisModel","axisMap","axisType","type","getDimensionsInfo","dimensions","slice","injectOrdinalMeta","dimInfoList","createInvertedIndices","firstCategoryDimIndex","hasNameEncode","each","dimIndex","coordDim","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","createSeriesData","sourceRaw","opt","sourceManager","getSourceManager","source","isOriginalSource","getSource","sourceFormat","useEncodeDefaulter","encodeDefaulter","isFunction","curry","createDimensionOptions","coordDimensions","generateCoord","encodeDefine","getEncode","canOmitUnusedDimensions","schema","store","getSharedDataStore","stackCalculationInfo","data","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","dimName","dataIndex","defaultDimValueGetter","hasItemOption","initData","sampleItem","firstDataNotNull","isArray","arr","i","length"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/chart/helper/createSeriesData.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions.js';\nimport { getDimensionTypeByAxis } from '../../data/helper/dimensionHelper.js';\nimport { getDataItemValue } from '../../util/model.js';\nimport CoordinateSystem from '../../core/CoordinateSystem.js';\nimport { getCoordSysInfoBySeries } from '../../model/referHelper.js';\nimport { createSourceFromSeriesDataOption } from '../../data/Source.js';\nimport { enableDataStack } from '../../data/helper/dataStackHelper.js';\nimport { makeSeriesEncodeForAxisCoordSys } from '../../data/helper/sourceHelper.js';\nimport { SOURCE_FORMAT_ORIGINAL } from '../../util/types.js';\n\nfunction getCoordSysDimDefs(seriesModel, coordSysInfo) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDimDefs;\n\n  if (coordSysInfo && coordSysInfo.coordSysDims) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  return coordSysDimDefs;\n}\n\nfunction injectOrdinalMeta(dimInfoList, createInvertedIndices, coordSysInfo) {\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n\n      if (createInvertedIndices) {\n        dimInfo.createInvertedIndices = true;\n      }\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  return firstCategoryDimIndex;\n}\n/**\n * Caution: there are side effects to `sourceManager` in this method.\n * Should better only be called in `Series['getInitialData']`.\n */\n\n\nfunction createSeriesData(sourceRaw, seriesModel, opt) {\n  opt = opt || {};\n  var sourceManager = seriesModel.getSourceManager();\n  var source;\n  var isOriginalSource = false;\n\n  if (sourceRaw) {\n    isOriginalSource = true;\n    source = createSourceFromSeriesDataOption(sourceRaw);\n  } else {\n    source = sourceManager.getSource(); // Is series.data. not dataset.\n\n    isOriginalSource = source.sourceFormat === SOURCE_FORMAT_ORIGINAL;\n  }\n\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs = getCoordSysDimDefs(seriesModel, coordSysInfo);\n  var useEncodeDefaulter = opt.useEncodeDefaulter;\n  var encodeDefaulter = zrUtil.isFunction(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null;\n  var createDimensionOptions = {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefine: seriesModel.getEncode(),\n    encodeDefaulter: encodeDefaulter,\n    canOmitUnusedDimensions: !isOriginalSource\n  };\n  var schema = prepareSeriesDataSchema(source, createDimensionOptions);\n  var firstCategoryDimIndex = injectOrdinalMeta(schema.dimensions, opt.createInvertedIndices, coordSysInfo);\n  var store = !isOriginalSource ? sourceManager.getSharedDataStore(schema) : null;\n  var stackCalculationInfo = enableDataStack(seriesModel, {\n    schema: schema,\n    store: store\n  });\n  var data = new SeriesData(schema, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  data.hasItemOption = false;\n  data.initData( // Try to reuse the data store in sourceManager if using dataset.\n  isOriginalSource ? source : store, null, dimValueGetter);\n  return data;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(arr) {\n  var i = 0;\n\n  while (i < arr.length && arr[i] == null) {\n    i++;\n  }\n\n  return arr[i];\n}\n\nexport default createSeriesData;"],"mappings":"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"},"metadata":{},"sourceType":"module"}