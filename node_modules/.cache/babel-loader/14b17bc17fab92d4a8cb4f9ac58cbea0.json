{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js'; // import AngleAxis from './AngleAxis.js';\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var getterName = 'get' + dim + 'Axis'; // TODO: TYPE Check Angle Axis\n\n    var axis = this[getterName]();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nexport default function polarPrepareCustom(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}","map":{"version":3,"names":["zrUtil","dataToCoordSize","dataSize","dataItem","map","dim","dimIdx","getterName","axis","val","halfSize","result","type","getBandWidth","Math","abs","dataToCoord","PI","polarPrepareCustom","coordSys","radiusAxis","getRadiusAxis","angleAxis","getAngleAxis","radius","getExtent","reverse","cx","cy","r","r0","api","coord","data","dataToRadius","angle","dataToAngle","coordToPoint","push","size","bind"],"sources":["/home/siyi/Projects/radi-demo/radi-showing/node_modules/echarts/lib/coord/polar/prepareCustom.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js'; // import AngleAxis from './AngleAxis.js';\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var getterName = 'get' + dim + 'Axis'; // TODO: TYPE Check Angle Axis\n\n    var axis = this[getterName]();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nexport default function polarPrepareCustom(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,0BAAxB,C,CAAoD;;AAEpD,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6C;EAC3C;EACAA,QAAQ,GAAGA,QAAQ,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAvB;EACA,OAAOH,MAAM,CAACI,GAAP,CAAW,CAAC,QAAD,EAAW,OAAX,CAAX,EAAgC,UAAUC,GAAV,EAAeC,MAAf,EAAuB;IAC5D,IAAIC,UAAU,GAAG,QAAQF,GAAR,GAAc,MAA/B,CAD4D,CACrB;;IAEvC,IAAIG,IAAI,GAAG,KAAKD,UAAL,GAAX;IACA,IAAIE,GAAG,GAAGN,QAAQ,CAACG,MAAD,CAAlB;IACA,IAAII,QAAQ,GAAGR,QAAQ,CAACI,MAAD,CAAR,GAAmB,CAAlC;IACA,IAAIK,MAAM,GAAGH,IAAI,CAACI,IAAL,KAAc,UAAd,GAA2BJ,IAAI,CAACK,YAAL,EAA3B,GAAiDC,IAAI,CAACC,GAAL,CAASP,IAAI,CAACQ,WAAL,CAAiBP,GAAG,GAAGC,QAAvB,IAAmCF,IAAI,CAACQ,WAAL,CAAiBP,GAAG,GAAGC,QAAvB,CAA5C,CAA9D;;IAEA,IAAIL,GAAG,KAAK,OAAZ,EAAqB;MACnBM,MAAM,GAAGA,MAAM,GAAGG,IAAI,CAACG,EAAd,GAAmB,GAA5B;IACD;;IAED,OAAON,MAAP;EACD,CAbM,EAaJ,IAbI,CAAP;AAcD;;AAED,eAAe,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;EACnD,IAAIC,UAAU,GAAGD,QAAQ,CAACE,aAAT,EAAjB;EACA,IAAIC,SAAS,GAAGH,QAAQ,CAACI,YAAT,EAAhB;EACA,IAAIC,MAAM,GAAGJ,UAAU,CAACK,SAAX,EAAb;EACAD,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAAlB,IAAyBA,MAAM,CAACE,OAAP,EAAzB;EACA,OAAO;IACLP,QAAQ,EAAE;MACRP,IAAI,EAAE,OADE;MAERe,EAAE,EAAER,QAAQ,CAACQ,EAFL;MAGRC,EAAE,EAAET,QAAQ,CAACS,EAHL;MAIRC,CAAC,EAAEL,MAAM,CAAC,CAAD,CAJD;MAKRM,EAAE,EAAEN,MAAM,CAAC,CAAD;IALF,CADL;IAQLO,GAAG,EAAE;MACHC,KAAK,EAAE,UAAUC,IAAV,EAAgB;QACrB,IAAIT,MAAM,GAAGJ,UAAU,CAACc,YAAX,CAAwBD,IAAI,CAAC,CAAD,CAA5B,CAAb;QACA,IAAIE,KAAK,GAAGb,SAAS,CAACc,WAAV,CAAsBH,IAAI,CAAC,CAAD,CAA1B,CAAZ;QACA,IAAID,KAAK,GAAGb,QAAQ,CAACkB,YAAT,CAAsB,CAACb,MAAD,EAASW,KAAT,CAAtB,CAAZ;QACAH,KAAK,CAACM,IAAN,CAAWd,MAAX,EAAmBW,KAAK,GAAGrB,IAAI,CAACG,EAAb,GAAkB,GAArC;QACA,OAAOe,KAAP;MACD,CAPE;MAQHO,IAAI,EAAEvC,MAAM,CAACwC,IAAP,CAAYvC,eAAZ,EAA6BkB,QAA7B;IARH;EARA,CAAP;AAmBD"},"metadata":{},"sourceType":"module"}